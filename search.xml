<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客一周年纪念-Butterfly主题</title>
      <link href="posts/a739141e/"/>
      <url>posts/a739141e/</url>
      
        <content type="html"><![CDATA[<h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>不知不觉，使用Butterfly主题整整一年了，还记得2020-11-13我还在因为终于会搭建博客和终于选到非常喜欢的博客主题而开心。从刚开始穿梭于各大博主评论区里问问题 到 目前已收获很多访客对我站的认可，这些都见证了我的进步与收获。这一年中，很幸运遇到了很多优秀的博客大佬，尤其忘不了<strong>Akilar</strong>和<strong>Heo</strong>这两位博主。记得我刚进Akilar自建的QQ群时大概四十来人，而如今有两百多个人了。起初我还是个博客小白，遇到问题经常会在群里询问，但现在我能用一点薄弱的前端能力去更改网站外貌了，期间也写了一些Butterfly主题相关的美化魔改教程。然后，本站UI风格的设计灵感很大程度上来源于Heo，他是一个我认为很优秀的产品设计师，他网站的UI非常简约且不失色彩的活泼，用户体验非常好。其实一开始我还很不理解为什么他网站里很多厉害的美化魔改不写成教程，毕竟此前我已看习惯了Akilar的“保姆教程”，而Heo则是主张大家遇到喜欢的设计自行F12扒取，诚然，现在无论是扒取样式还是自己设计样式的能力都有了一定的提升，可能随之带来的影响就是有段时间突然掀起来扒Heo底裤的热潮（开个玩笑），在此非常感谢Heo以及Akilar。最后还要感谢Butterfly主题作者——Jerry，我在一百来个Hexo主题中只对Butterfly一见钟情，我非常喜欢它的卡片式布局，非常有现代设计感，同时也集成了很多实用插件，使用者也挺多的。没有 Jerry 也许就没有今天的 Hassan’s Blog。</p><h1 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h1><p>在经营博客的这一年里，我自身存在一些不足吧，比如我花了过多的时间在美化魔改上面，就比如右边第一个博主社交卡片组件，总共设计和写代码的时间加起来可以说有几天了，不包括吃饭睡觉，在设计期间我的想法和脑洞无限涌出，但由于自己技术和效率低的原因，所以花了很多不必要的时间。你能想象，我甚至能通宵去美化魔改吗？一点也感觉不到困，每当看到网站外观一点一点实现的时候，我都无比激动与兴奋，虽然仅仅三天热度吧，那段时间也一直在与自己强烈想美化魔改的内心作斗争，一边想搞好学校的学习任务，一边又想在博客UI上摸摸鱼，这也是我为什么有一段时间非常的低迷，还记得我当时在公告栏里写了类似于“暂时停止美化魔改”的话，甚至在<a href="/posts/25d6e78d">《如何自定义美化魔改？》</a>文章里写到类似于“我不建议大家美化魔改，博客够用就行，这能减少不必要的折腾”，但是现在释怀了，想改就改呗，<em>人生在于折腾，不经历美化魔改的博客网站是没有灵魂的 —— HassanWong</em>，其实美化魔改既提升了访客的浏览体验，也愉悦了自己，更提升了设计能力。</p><h1 id="爱好"><a href="#爱好" class="headerlink" title="爱好"></a>爱好</h1><p>说实话，写博客也可以算我的爱好之一吧，有时候无聊不想学习的时候，除了唱唱歌，刷刷B站微博，我就会写写博客，或看着页面发发呆，甚至在上课时也会思考我要给博客加哪些功能，或者哪里样式不完美得回去美化一番，只要有好的灵感，立马就会被我记录进To-do List里，有空就会去实现它，它的优先级甚至大于了我的学业任务😂。我站除了<strong>知识笔记</strong>、<strong>实用教程</strong>类型文章外，平时我还会写一些有趣的文章，比如<a href="/tags/%F0%9F%8E%89%E5%9B%BE%E4%B8%80%E4%B9%90/">图一乐</a>标签里的，我在网上遇到一些有趣且值得记录的事物会都写进此标签的文章，写这类文章真的很快乐，这也是为什么我称写博客也可以算我的爱好之一，确实能 kill time。</p><h1 id="坚持"><a href="#坚持" class="headerlink" title="坚持"></a>坚持</h1><p>现在我有点焦虑，不知道我写博客会坚持到什么时候，有时候会幻想我会不会七八十岁了，孙子孙女们在那里笑着翻我当年那些略带稚嫩的文章，哈哈。其实学习是终生的事情，只要我在学习，就会持续记录其学习过程。</p><p>有时候写文章时，内容可能会比较隐私，公布出来可能会有点羞，所以我会经常纠结发还是不发。但是如果没有博客的存在，我反而没有动力去更新文章、记录自己。</p><h1 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h1><p>接下来的一年，希望自己能写出更多优质技术博文，说实在的，学到知识才是真谛，写笔记只是一个辅助学习的过程。其次，又希望又不希望自己的网站访问量能瞬间暴涨，且不谈会不会导致同时访问的卡顿，但你能想象几百个人同时看你文章那种公开处刑的感觉吗？可能存在我目前存在对自己内容不自信的缘故吧，有些文章写得过于主观，包含大量的个人观点，和读者产生分歧也是在所难免。文风这种东西，应该写着写着就成熟咯。网站的访问量其实不会给我带来任何收益，但若能引来到一些志同道合的朋友还是挺不错的。</p><blockquote><p>都看到这里的友友们，一定都是人才，祝找工作的同学找到好工作，考研党一定上岸，留学党Offer拿到手软，期末党都高分过。以上都不是，那就祝你身体健康，天天好心情~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思写作笔记</title>
      <link href="posts/b6074994/"/>
      <url>posts/b6074994/</url>
      
        <content type="html"><![CDATA[<h1 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h1><table><thead><tr><th>单词</th><th>释义</th></tr></thead><tbody><tr><td>subsidize</td><td>补贴，资助，给…发津贴</td></tr><tr><td>eligible</td><td>有资格的，合格的</td></tr></tbody></table><h1 id="词伙"><a href="#词伙" class="headerlink" title="词伙"></a>词伙</h1><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>personal resources</td><td>人脉</td></tr></tbody></table><h1 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h1><table><thead><tr><th>短语</th><th>释义</th></tr></thead><tbody><tr><td>take it seriously</td><td>认真对待…</td></tr><tr><td>bear the costs</td><td>承担费用</td></tr><tr><td>take it for granted</td><td>觉得…理所当然</td></tr><tr><td>lighten the burden on the government</td><td>减轻政府负担</td></tr><tr><td>reach one’s potential</td><td>发挥…的潜力</td></tr><tr><td>enhance interpersonal skills</td><td>提高社交能力</td></tr><tr><td>take up a part-time job</td><td>从事一份兼职</td></tr><tr><td>build a network of contacts</td><td>建立关系网</td></tr></tbody></table><h1 id="句式"><a href="#句式" class="headerlink" title="句式"></a>句式</h1><table><thead><tr><th>句式</th><th>释义</th></tr></thead><tbody><tr><td>People tend to hold different views about …</td><td>人们对…持有不同观点</td></tr><tr><td>It is a truth universally acknowledged that …</td><td>众所周知，…</td></tr><tr><td>In conclusion | To summarize | To sum up</td><td>总之，…</td></tr><tr><td>have an adverse impact on | have a negative effect on …</td><td>对…产生不利影响</td></tr><tr><td>gain an insight into …<br />have a good grasp of</td><td>对…了解</td></tr><tr><td>on the basis of | based on</td><td>基于 …</td></tr></tbody></table><h1 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h1><table><thead><tr><th>句子</th><th>释义</th></tr></thead><tbody><tr><td>the knowledge we learned in college is out of line/touch with the society</td><td>我们在大学里学的知识与社会脱节了</td></tr></tbody></table><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPhone13香吗？聊聊我的使用感受</title>
      <link href="posts/8e70e235/"/>
      <url>posts/8e70e235/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我是9.28号官网下单 iPhone 13，10.14号到，可把我等的啊🤣</p></blockquote><p>上一部我用的是荣耀Play，用到一年半的时候开始感到卡顿，然后愈发不可收拾，期间我用了很多方法，如卸载不常用APP，转移媒体文件到电脑中，甚至恢复出厂设置过2次，于是勉强又撑了一年半，而现在实在顶不住于是冲了“预谋已久”的 iPhone 13。</p><p>谈一谈 iPhone 13 我的使用感受吧，首先是<strong>页面</strong>，我觉得它的各种切换动画很流畅，善用各种颜色，每个自带APP页面基本上是黑白灰再搭配一个主题色，整体设计很符合我的审美，有一种简约高级感，尤其再搭配上那经典的毛玻璃页面。美中不足的是13要是像Pro那样有高刷就好，不求120Hz，90也行啊。</p><p>再说说<strong>外观</strong>，很多人不喜欢这个硬朗直板的手机轮廓，但我还挺喜欢的，超瓷晶面板加上航空级铝金属边框，我觉得整体观感很干净利落，手感实实在在。然后它的刘海屏也是饱受争议，今年居然还进步了，刘海面积相比 iPhone 12 缩小了20%，其实我不在乎刘海的有无，不影响正常功能使用就行（<del>经典苹果用户的包容</del>）。</p><p>背后的<strong>摄像头</strong>采取了对顶角布局，镜头模组面积保持不变的情况下，镜头相较于去年大了一点，我觉得 iPhone 13 的拍出来的照片质量还行，前天我同学过生日，我给他拍许愿照时，我发现火焰拍得很清晰，火焰边缘锐化的不错，尤其和我另一个同学 iPhone X 拍的对比后，但依然存在绿色鬼影😅，希望iPhone未来系列能解决这个问题。然后它的超广角我也挺喜欢，以后有空可以在户外试试，拍些有镜头拉伸感的照片。</p><p><strong>APP</strong>的话，谈谈两个我喜欢的苹果自带APP吧，第一个是<u>库乐队</u>，当然我去年在 iPad 2020 里就体验过，对于我这种喜欢音乐的小白来说，无疑是个上手快、对新手友好的编曲APP，当然要编得好听还得学学乐理。第二个是<u>快捷指令</u>🎉，你可以自定义一系列手机操作，超级方便，比如一键打开微信扫码、健康码等等。也可以写些自动化脚本，比如每天早上八点准时播放音乐、手机充满电时播放声音提醒你拔掉充电头等等，最近几天研究了一下快捷指令，简直程序员狂喜，很亲切，不过对非程序员人群也比较友好，起码都是中文，稍微了解一下，就可以写出很多快捷指令，它将会给你生活带来很大的便利。要说缺点的话，我觉得有些自带APP对国内用户不太友好，也许被我国禁了，在国外才能正常使用。</p><p>再说说 <strong>IOS 15 的新功能</strong>，我最喜欢的是它能通过AI自动识别图片，假若某天你需要找你家猫猫的照片，直接在搜索栏里打上“猫”就可以找到和猫相关的图片，非常方便，不用在若干张图片里一个一个找。</p><p>最后，谈谈其它方面——<strong>电量</strong>，个人感觉充电速度挺快的，至少和我前任对比的话，然后它充到80%时会自动开启涓流模式以保护电池。待机时长我觉得很满意，虽电池容量小，但整体耗电较少，使用上不会让我有电量危机。再说说<strong>信号</strong>，这个得吐槽吐槽，在寝室里偶尔会没有信号，我目前只希望，以后支付和展示健康码时不要突然断网！那样我会非常尴尬脚趾抓地。</p><p>13建不建议买呢？我觉得还是因人而异，按需考虑是否购买。再回答下本文标题——iPhone13香吗？综合考虑的话，我觉得香。</p>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🍎苹果产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页广告多，太多干扰内容怎么办？</title>
      <link href="posts/5017622/"/>
      <url>posts/5017622/</url>
      
        <content type="html"><![CDATA[<p>有时候搜索一些问题，很多点进去的网站都看起来眼花缭乱，关键是里面穿插着各种小广告，二维码，跳转链接，但你又不是站长，也没有办法去改别人的网站，那怎么办呢？</p><p>友友们可能会想到可以安装去除广告的插件，说到这我分享一篇我看过的文章：<a href="https://blog.zhheo.com/p/8818601d.html">Heomagic 08 | Chrome 网页去广告插件推荐</a>，大家有兴趣可以试试该文章推荐的插件。如果友友们有更好用的插件麻烦留言告诉俺。</p><p>本篇就说说我最近发现的小妙招，话说某天我突然在Cent浏览器设置中看到了<code>样式文件</code>按钮，于是象征性的写了一些CSS代码并把文件上传进去，发现果然能控制网页的样式，我猜这个设置的最初目的是想让有能力的人自定义更改一些常用页面的外观，比如给搜索页面换个自己喜欢的背景什么的。但这些我都不感冒，我只想通过CSS代码去掉一些常用网页的广告，说白了就是<u>利用类名或ID定位到组件，再写个display: none;就完事</u>。</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/TooMuchAds/Snipaste_2021-10-05_16-59-30.png" alt="Cent Browser"></p><p>代码示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">Custom</span>&gt; &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果对CSS不了解，建议稍微学一下噢~</p><p><strong>优点</strong>：能自定义屏蔽内容，不一定是广告，也可以是其它不想看到的内容</p><p><strong>缺点</strong>：</p><ol><li>不适配所有浏览器。目前发现只有Cent浏览器有样式设置，Chrome、Edge里没有找到</li><li>网页加载速度不会因为没有广告而变快。<code>display: none;</code>的缺点大家也知道，虽可屏蔽您选中的组件，但网页还是得加载一次它，不过问题不大。</li><li>给每个网页写屏蔽代码很累。在这里建议最好对你常用的网站，针对性地写CSS屏蔽代码，否则太累了，这也是缺点所在。同时，不同的网站命名风格不同，世上所有的站长不会都傻里傻气的给广告整一个<code>advertisement</code>的类名或ID吧？一小段代码能屏蔽所有网站的广告那还得了，听懂掌声👏</li></ol><p><strong>注意</strong>：根据类名或ID定位组件时，注意其精准性，指不定其它网站也有同名的组件，恰好那部分内容你又需要看。打个不恰当的比方，你直接把div给屏蔽掉了，这还像话吗？</p><p>虽然我的这个方法不能百分之百帮到所有看此篇文章的人，但能帮一个是一个😀，至少我目前用的爱不释手哈哈哈，感觉寻到了宝藏。</p>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>秃头怎么办？呜呜呜</title>
      <link href="posts/d9db610d/"/>
      <url>posts/d9db610d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其实一直以来，人们对程序猿/媛有着种种刻板印象，比如秃头、低情商、格子衬衫等等，但确实这三点我确实都中了😭，但我觉得和程序员这个身份无关，首先我有秃头基因，秃是在所难逃的。情商这个东西，从小低到大，但我一直在努力提高中。格子衬衫的话，我觉得我穿起来挺酷的，但也不经常穿。</p><p>然后本篇是谈谈如何避免或缓解秃头症状，主要收集于网上资料，以及个人见解。</p></blockquote><h1 id="介绍秃发"><a href="#介绍秃发" class="headerlink" title="介绍秃发"></a>介绍秃发</h1><p><del>看我博客的大都是男生吧</del>🤣？Anyway</p><p>男性型秃发，是一种雄激素依赖性的遗传性毛发脱落，从前发际线和头顶开始脱发的模式，是体内雄性激素分泌过于旺盛的毛发脱落。对有些人来说，头发从前额左右两侧发际开始脱落，然后在头顶中间留下一小簇头发。</p><p>下面给友友们列举下如何可以改善这个问题！</p><h1 id="食疗"><a href="#食疗" class="headerlink" title="食疗"></a>食疗</h1><h2 id="低脂乳制品"><a href="#低脂乳制品" class="headerlink" title="低脂乳制品"></a>低脂乳制品</h2><p>脱脂牛奶、酸奶等低脂乳制品含有大量钙，这种矿物质是头发生长必需的，此外还含有乳清和酪蛋白这两种高品质蛋白质。</p><h2 id="坚果"><a href="#坚果" class="headerlink" title="坚果"></a>坚果</h2><p>如果你向往一头粗壮有力、亮丽动人的秀发，那就要多吃坚果。坚果所含的硒是种对保持头皮健康必需的矿物质。坚果里的核桃富含α亚麻酸，能令头发保持健康状态，此外也富含锌，对头发大有好处。花生、杏仁、葵花籽等坚果都有同样的效果。锌不足容易导致掉发，因此平时要注意从饮食中摄取充足的锌。</p><h2 id="含碱性物质的蔬菜和水果"><a href="#含碱性物质的蔬菜和水果" class="headerlink" title="含碱性物质的蔬菜和水果"></a>含碱性物质的蔬菜和水果</h2><p>脱发及头发变黄的因素之一是由于血液中有酸性毒素，原因是体力和精神过度疲劳，长期过食纯糖类和脂肪类食物，使体内代谢过程中产生酸毒素。肝类、肉类、洋葱等食品中的酸性物质容易引起血中酸毒素过多，所以要少吃这类食物，多吃含碱性物质的蔬菜和水果来中和酸毒素。</p><table><thead><tr><th></th><th>弱碱性食物</th><th>中碱性食物</th><th>强碱性食物</th></tr></thead><tbody><tr><td>水果</td><td>橘子、香蕉、樱桃、芒果、水蜜桃、哈密瓜、龙眼</td><td>橙、木瓜、无花果、番石榴、西瓜、蓝莓、草莓、苹果、橄榄、雪梨</td><td>葡萄、柠檬、梅子</td></tr><tr><td>蔬菜</td><td>芦笋、玉米、香菇、金针菇、杏鲍菇、黑木耳、白木耳、茄子、高丽菜、辣椒、南瓜、丝瓜、白萝卜、番薯、莲藕、山药、莲子</td><td>番茄、秋葵、芹菜、紫苏、芥蓝菜、生菜、苦瓜、大白菜、甜菜、姜、红萝卜、牛蒡、芋头、百合</td><td>黄瓜、海带、紫菜、魔芋、菠菜、花椰菜、大蒜、青椒、空心菜、茼蒿、油菜、小白菜</td></tr></tbody></table><blockquote><p>Q：为啥子柠檬还是强碱性物质呀？</p><p>A：柠檬经人体消化代谢后，留在人体中的物质主要是碳酸氢钠，而碳酸氢钠溶液呈碱性，所以说柠檬实际上是碱性食物。那为什么碱性的柠檬尝起来却是酸溜溜的呢？这是因为柠檬含有大量柠檬酸等有机酸导致口感呈现酸味，但进入人体后，柠檬酸氧化后会分解成二氧化碳和水被排出体外，而柠檬酸钠等盐类则因钠离子等无法被分解而残存，最终表现为碱性。</p></blockquote><h2 id="维生素E"><a href="#维生素E" class="headerlink" title="维生素E"></a>维生素E</h2><p>维生素E可抵抗毛发衰老，促进细胞代谢，使毛发生长。可多吃鲜莴苣、卷心菜、黑芝麻等。</p><div class="note orange no-icon flat"><p>注意：</p><p>我们每天吃黑芝麻的量应控制<u>在10g之类</u>，但在寒冷的秋冬季，由于皮脂腺分泌减少，所以可适当增加摄入量，但也<u>不宜超过20g</u>。同时建议<u>饭后食用</u>，这主要是因为饭后胃部的血液比较集中，比较容易消化吸收摄入的食物和补品，尤其是早饭后，最合适食用各种补品，这样补品里的营养成分有充分的时间被人体吸收。</p><p>要知道，黑芝麻吃多了反而会让脱发的症状加重，这主要是因为黑芝麻里面有丰富的油脂，若吃太多的黑芝麻会使皮脂腺分泌增加，从而堵塞毛孔，影响头发的正常生长。因此，建议有脱发困扰，尤其是脂溢性脱发人群，不宜吃过多的黑芝麻。</p></div><h2 id="铁质"><a href="#铁质" class="headerlink" title="铁质"></a>铁质</h2><p>经常脱发的人体内常缺铁。铁质丰富的食物有黄豆、黑豆、蛋类、带鱼、虾、熟花生、菠菜、鲤鱼、香蕉、胡萝卜、马铃薯等。</p><h2 id="碘质"><a href="#碘质" class="headerlink" title="碘质"></a>碘质</h2><p>头发的光泽与甲状腺的作用有关，补碘能增强甲状腺的分泌功能，有利于头发健美。可多吃海带、紫菜、牡蛎等食品。</p><h1 id="生活习惯"><a href="#生活习惯" class="headerlink" title="生活习惯"></a>生活习惯</h1><p>友友们还应该多去户外运动，保持良好的心情，不熬夜，1到2天洗一次头发，主要是防止分泌的油脂堵塞毛囊。</p><p>这样才能够从多方面改善脱发这个烦人的问题。</p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/102804890">男人秃顶怎么办？多吃这6类食物</a></li><li><a href="https://baike.pcbaby.com.cn/qzbd/998522.html">碱性食物</a></li><li><a href="http://www.xinhuanet.com/science/2019-03/24/c_137915579.htm">碱性的酸柠檬</a></li><li><a href="https://news.fh21.com.cn/hyzx/shws/chi/5354175.html">黑芝麻每天吃多少比较合适</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💚健康 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>作为一名家长该如何看待孩子择业问题？</title>
      <link href="posts/b799e8a8/"/>
      <url>posts/b799e8a8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>说实话，取这标题时我也懵了，仿佛自己当过家长且十分有过来人的经验，然而并不是。有时候我对某些事情有着自己长期的观察与见解，并且想把这些想法记录下来，无论若干年后的自己会不会持反对意见，但我依然觉得很有必要。</p><p>（可能我当了家长并且孩子高考毕业后，我可能会继续在文章底下添加我的最新观点，但那得一二十年后了哈哈）</p></blockquote><p>前不久我和一个长辈谈过一个话题：孩子应该选择常见、好赚钱的专业，还是选择他喜欢，但不常见、看上去不好赚钱的职业呢？我们之间产生了很大的分歧，Ta的想法其实和绝大多数中国家长一样，孩子有了好工作，孩子以后就过的好，家长也放心，家长的养老也有了保障，甚至会成为亲朋好友茶余饭后的谈资，最后还可能会把它归结于自己教育的成功。</p><p>以上观点我不完全反对，我认为任何一件事情不能过于绝对，<u>得根据实际情况来做一个合理的判断与抉择</u>。比如你是支持孩子选择自己喜欢，但不常见、看上去不好赚钱的职业，还是持否定态度？顺便提一下我和那个长辈谈论的实际案例是一个喜欢钻研历史政治的“成年孩子”（<del>在家长面前你永远是孩子</del>）。</p><p>要是我作为这类孩子的家长，我会怎么看呢？首先，得了解到孩子对这个专业领域有多了解或者有多大的兴趣爱好，如果Ta也摇摆不定，只是一时的爱好，那你应当尽可能的可以给出你作为过来人的经验与看法，建议他选择那些常见的、好赚钱的专业。如果Ta是真的非常喜欢这个专业，且你能够看到Ta平时为这个专业所做的一切，比如关注它的新闻常态、买周边书籍、看相关视频，如果到这种程度的话，我大概率会支持Ta的选择，尽管以后可能赚的钱没别人多，但只要你能健康快乐的活着，当家长的我就安心了。说说那个实际案例吧，那孩子是非常的喜欢历史政治，我觉得作为家长，你这边能做的就是告诉Ta你在担心什么，比如：“孩子将来也是要吃饭的呀，不能啃老一辈子，那我们老了谁来照顾啊？你是打算当一辈子历史政治老师吗？钻研这个它挣钱吗？”，同时也说说：“现在XX专业我觉得挺适合你的，它怎么怎么样的好…”，再看看孩子对这件事是怎么想的，多维度考虑这个择业问题，何况孩子都成年了，已经具备独立思考能力。同时也要注意沟通是一个双方的过程，家长这时要放低姿态，和孩子站在同一高度，要做到理性、心平气和，并有理有据地分析和给出观点，切记不要说两三句就怒气上头，这样非常不利于孩子专业的选择，也进一步加深了家庭关系的恶化。</p><p>如果Ta的想法是类似：“我不管你们晚年生活，我只在乎我的爱好”这样类似没有良心、孝心的话，家长这时得反思自己平时教育上是否存在某些漏洞，比如平时只关心自己不关注孩子的看法、只关心自己的工作而不关心孩子的学习等等类似行为，从而导致孩子眼里只有自己，对他人漠不关心。确实，当家长的的确不容易，不是每一个家长都是教育专家，他们所有人都是第一次当家长，且平时都在忙各种事情，导致家长在教育上付出的时间较少，当然也不是说你付出的多，你就一定能收获相应的回报，而你要用正确的方法去付出，达到四两拨千斤、一点就通的效果，教育这一块的东西，还是得花时间去学，而不是说：“过去，我自己的父母就是这么教育我的，所以我现在也要这么教育我的孩子”，要知道时代不同，咋们得与时俱进，活到老学到老。</p><p>另外如果家长不仅认为这个专业不赚钱，还讨厌这个专业，那你是不是该反思下自己这一二十年来和孩子到底有没有过充分的交流，你是否真的了解孩子？你是否经常向Ta灌输你的价值观？你是否经常和Ta分享你对某些事物的看法？你的孩子如今的择业观念或者价值观为什么和你有很大冲突？而不是把这一切归因于：“孩子真不懂事，翅膀硬了，都学会顶嘴了”。但从另一种角度看问题，想法不同也是一件好事，说明孩子长大了有自己独立思考能力，总是过于听话、百依百顺的孩子，可能童年过得很幸福，大人也很安心，但是长大成人后你会逐渐发现他们身上存在的一些不好习惯或性格，比如内向、没有主见、害怕责任等等，这些话题我在<a href="/posts/eb8364b4/">《童年很幸福，长大后却迷惘的“好孩子”们》</a>的读后感位置分析过。</p><p>总之，孩子择业问题还是得具体情况具体分析，不能妄下定论。本文章大篇幅都站在了家长的角度来讲，当然作为孩子的话，还是多理解下家长，双方多沟通，才能选择出合适的专业。</p>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💼工作 </tag>
            
            <tag> 🎓教育 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个孩子的辉煌成就是归因于天赋吗？</title>
      <link href="posts/cf85242b/"/>
      <url>posts/cf85242b/</url>
      
        <content type="html"><![CDATA[<p>最近看到了一则热搜新闻：<a href="https://s.weibo.com/weibo?q=%2314岁初中生考进清华成最小本科生%23&from=default">#14岁初中生考进清华成最小本科生#</a> ，引起了网友的热议，我的一条评论也被众多网友回复，不乏有些低素质人群上来二话不说直接：“…你儿子大专吧？…”。我原评论大意是：“这不是天赋天才的问题，而是靠后天…”，然后本篇文章我打算再记录并详述下自己的一些拙见吧。</p><p>我觉得除了<strong>DNA</strong>能决定的之外，他如今的成就还与他家长老师的教育和自身努力有着很大的关系。至于很多人想表达：“是天赋问题，人到达一定学习境界，再怎么努力也不看到显著成效，这时天赋的优越就体现出来了”。且慢，我认为你们所谓的“天赋”也需要后天的培养，你的<strong>思维模式</strong>、<strong>爱好</strong>、<strong>性格</strong>、<strong>习惯</strong>几乎都是后天培养的，有些网友会觉得：“他学一遍就会，我还需要学好几遍”，于是自然而然归因于“天赋”。在这里我可以大胆的猜测，他小时候应该做过大量的思维训练，看过很多相关的书籍，也许父母会经常和他探讨学术相关问题，或许还会带他参观一些特定主题的博物馆，这一系列的因素逐渐铸造成了如今你们眼里的学神。</p><p>还有些网友说：“同样的初中三年，他就是学得快吗，分还比你高，你再怎么努力也无用”。要知道你们说的学习区间是放眼于整个初中三年，这么算的话那的确，那个学霸确实看上去相同学习时间内获得的分数更多，但你得知道磨刀不误砍柴工这个道理啊！你们却忽略了他小学甚至幼儿阶段的教育培养，比如专门培养了他对物理或奥数的爱好，还培养了他的学习能力、抗干扰能力等等，要知道一个人的学习能力强会起到事半功倍的效果，再加上有一些相关学科的底子，这就是为什么他上了初中后看上去快的异于常人，这正所谓良性循环，对于他来说，只会“越学越快，越辩越明”，这可能就是你们常挂嘴边的“天赋”、“天才”吧。</p><p>唉，看了一圈评论发现和我有共鸣的网友几乎没有，某种意义上是件好事，某种意义上也是件坏事。其实我一直以来秉承着一个观念：“只要你不是天生有缺陷，所有人生来都是一样的，唯一能改变Ta的，只可能是后天培养和他所处环境的影响”，再说了，何况很多残障人士还不是靠自己实现了自己人生的理想，还不是在他们的领域有所建树，虽说我们看到的可能是少数，但只要你想做出成就，终归是有办法的，人无论处于什么现实状态下，心态还是要积极起来，毕竟你只能活一次，为什么不能选择潇洒地过一生呢？与君共勉。</p><p>实话说，我不太喜欢“天赋”、“天才”这个词，我觉得更多的是对一个人努力的不尊重，当然啦，偶尔诙谐地调侃一下：“这孩子真有天赋，真是个天才呀”我觉得是可以的，但是假若你有这种类似想法，比如：“某某某就是有这方面的天赋，Ta就是学的快，我们就是学不会，哎，就是玩”，我觉得这是在为自己学不会（<del>躺平</del>）而找理由！与其羡慕他有“天赋”，还不如多花时间思考下自己该如何达到某种目标，并不是说一定要达到那位学神的高度才是你们的最终目的，成功有很多种定义，你通过一系列努力达到了自己梦寐以求的目标后，我认为这样的你也是成功的！值得我们去尊重！</p><p>说到这里，我想到了“内卷”概念，这些话题我在<a href="/posts/49f4d334/">《终于有人把内卷讲明白了》</a>的读后感位置分析过，<u>仰望天空的同时也要脚踏实地，凡事要有自己的节奏，不盲目跟风加入内卷</u>。这位14岁少年已经到达了“天花板”高度，很多人就不由自主地在大脑里把他和自己初中三年作对比，甚至设想自己要学多少年，攒多少的劲，下多少功夫才能到达他的那个高度，想完之后呢，就感觉哎呀，太难了，啷个办嘛？哦豁，咦，原来他家这么有钱啊，他父母学历这么高啊，等等等等，所以才他才这么牛啊，唉，我家就没有这样的条件，所以我才没他强，于是心安理得地退出了新闻，一如既往地继续自己以前的生活，好像一切都没发生过。</p><p>当然以上内容也只是我通过有限的学识和有限的观察推理出来的。俗话说：“道理咋都懂，可就是做不到”，不知道以上我的见解让读者耳目一新了吗？但愿我的一些拙见能引发更多的思考和实际行动吧。</p><p>最后点下题，我认为<u>一个孩子的辉煌成就靠后天的培养和他所处的环境的影响</u>。</p>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎓教育 </tag>
            
            <tag> ✍学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思听力阅读生词收集</title>
      <link href="posts/dbc80bd9/"/>
      <url>posts/dbc80bd9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>生词包括对我来说中文意思模糊、易混淆、拼写易错的词</p></blockquote><h1 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h1><table><thead><tr><th>单词</th><th>释义</th></tr></thead><tbody><tr><td>acoustic</td><td>声学的</td></tr><tr><td>accomplish</td><td>完成，达到</td></tr><tr><td>accomplishment</td><td>成就</td></tr><tr><td>ancestral</td><td>祖传的，祖先的</td></tr><tr><td>apprentice</td><td>徒弟，学徒</td></tr><tr><td>archaeologist</td><td>考古学家</td></tr><tr><td>ascertain</td><td>查明，弄清</td></tr><tr><td>autonomy</td><td>自主，自治</td></tr><tr><td>awe</td><td>敬畏，惊叹</td></tr><tr><td>balcony</td><td>阳台</td></tr><tr><td>cemetery</td><td>墓地</td></tr><tr><td>complementary</td><td>互补的</td></tr><tr><td>commitment</td><td>承诺</td></tr><tr><td>concise</td><td>简明的，简洁的</td></tr><tr><td>compliment</td><td>赞美，恭维</td></tr><tr><td>contend</td><td>搏斗，争辩</td></tr><tr><td>contradict</td><td>反驳</td></tr><tr><td>decline</td><td>n-v 减少</td></tr><tr><td>deplete</td><td>耗尽，枯竭，大量较少</td></tr><tr><td>erosion</td><td>腐蚀</td></tr><tr><td>flute</td><td>长笛</td></tr><tr><td>favor</td><td>支持，喜爱，偏爱</td></tr><tr><td>inhabit</td><td>居住</td></tr><tr><td>inhibit</td><td>抑制，组织，阻碍</td></tr><tr><td>invariably</td><td>一成不变地</td></tr><tr><td>intensity</td><td>强烈，紧张，强度</td></tr><tr><td>infestation</td><td>骚扰，侵袭，（鼠、害虫）成群出现</td></tr><tr><td>implicit</td><td>含蓄的，不直接说明的</td></tr><tr><td>juvenile</td><td>少年，少年的，未成年的</td></tr><tr><td>mid-day</td><td>正午</td></tr><tr><td>note-taking</td><td>记笔记</td></tr><tr><td>prescribe</td><td>开药方，规定，命令，指示</td></tr><tr><td>plausible</td><td>看似合理的，花言巧语的</td></tr><tr><td>prevailing</td><td>盛行，流行</td></tr><tr><td>paradox</td><td>矛盾的人（或事物、情况），悖论</td></tr><tr><td>relocate</td><td>重新安置，(使)搬迁，迁移</td></tr><tr><td>robust</td><td>强健的，壮实的，坚固的</td></tr><tr><td>render</td><td>提供，使成为</td></tr><tr><td>reveal</td><td>揭露，显示</td></tr><tr><td>scatter</td><td>分散，散开，散落，零零星星</td></tr><tr><td>simulate</td><td>模拟，模仿</td></tr><tr><td>spontaneous</td><td>自发的，心血来潮的</td></tr><tr><td>stimulate</td><td>刺激，激励，鼓舞</td></tr><tr><td>tendency</td><td>趋势，倾向</td></tr><tr><td>underlying</td><td>根本的，潜在的，基本的</td></tr><tr><td>uncover</td><td>揭开，发现</td></tr><tr><td>veteran</td><td>经验丰富的人，老手，退伍军人</td></tr><tr><td>vast</td><td>巨大的，辽阔的</td></tr><tr><td>withstand</td><td>承受，顶住</td></tr><tr><td>withdraw</td><td>撤退，撤回</td></tr><tr><td>yawn</td><td>打哈欠</td></tr><tr><td>yarn</td><td>纱线</td></tr></tbody></table><h1 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h1><table><thead><tr><th>短语</th><th>释义</th></tr></thead><tbody><tr><td>pull out</td><td>退出、（车）驶离路边</td></tr><tr><td>day off</td><td>休息日</td></tr><tr><td>peak/rush hour/time</td><td>高峰时间</td></tr><tr><td>shared objective</td><td>共同目标</td></tr><tr><td>take chances</td><td>冒冒险，碰运气</td></tr><tr><td>in addition to</td><td>除…之外</td></tr></tbody></table><h1 id="同义替换"><a href="#同义替换" class="headerlink" title="同义替换"></a>同义替换</h1><table><thead><tr><th>同义替换</th><th>同义替换</th><th>释义</th></tr></thead><tbody><tr><td>premiere</td><td>performed for the first time</td><td>首映，(电影、戏剧的)首次公演</td></tr><tr><td>respect</td><td>esteem</td><td>尊重，尊敬</td></tr><tr><td>difference</td><td>discrepancy, diversity</td><td>差异</td></tr><tr><td>mixture</td><td>combination</td><td>混合，结合体，联合体</td></tr><tr><td>anticipate</td><td>expect</td><td>预料，预期，预计</td></tr><tr><td>mean</td><td>average</td><td>平均值</td></tr><tr><td>old-fashioned</td><td>outdated</td><td>老式的，过时的</td></tr><tr><td><strong>omit</strong></td><td>leave out</td><td>省略，漏掉</td></tr><tr><td>conditions</td><td>factors</td><td>因素，条件</td></tr><tr><td>reproduction</td><td>replication, duplication, copy</td><td>复制品，再版</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021年9-12月雅思口语备考</title>
      <link href="posts/e8557c8e/"/>
      <url>posts/e8557c8e/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="咒语念错了！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f31a8ab40fc9e0d7bb4d85246ccd58d0539622710c31b0cea086914f633ef81e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章被伏地魔封印了，需要咒语来解除！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>童年很幸福，长大后却迷惘的“好孩子”们</title>
      <link href="posts/eb8364b4/"/>
      <url>posts/eb8364b4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为转载内容，来自微信公众号<code>三联生活周刊</code></p><p>原文地址：<a href="https://mp.weixin.qq.com/s/rhBW1zt9VZleeeJcLWNxiQ">童年幸福，长大后迷惘的“好孩子”们</a></p><p><a href="/cc">版权协议</a></p></blockquote><br><p>一个稚弱的孩子，如何长成一个健康、独立、有担当的成年人，不是通过清除Ta的成长过程中的一切障碍、挫折与痛苦，而是帮助Ta学会如何自己应对这些问题。只有在面对这些问题的过程中，才能激发一个孩子自我应对的“抗逆力”。</p><br><h1 id="“好孩子”的危险"><a href="#“好孩子”的危险" class="headerlink" title="“好孩子”的危险"></a><p align="center">“好孩子”的危险<p></h1><p>在我的童年时代，成年人世界对于“好孩子”的标准只有三个：<strong>第一，成绩好；第二，听话；第三，不谈恋爱。</strong></p><p>“成绩好”，是因为在那个时代，对普通家庭来说，这是唯一改变命运的方式。</p><p>当然，成绩好的孩子如果谈了恋爱，那也不再是“好孩子”。在那个集体禁欲的时代，我们的父母和社会竭力营造一种“无性”“干净”的环境。尤其到了青春期，我们的身体已经开始发育，性意识已经伴随着身体的发育开始觉醒，但对那时的我们来说，爱美是一件羞于启齿的事情，对身体的各种莫名尴尬与自卑则是青春期的普遍记忆。对于“性”的任何好奇心都是被禁止的。</p><p>我们从不谈论性，与任何人都不谈，就好像这件事情不存在一样。电视上偶尔看到搂搂抱抱甚至接吻的镜头，父母就会在我们彼此之间的心照不宣中把电视关掉。</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124218244.png" alt="《小欢喜》剧照" style="width:80%;"/></div><span class="image-caption">《小欢喜》剧照</span></div><p>还有，好孩子从不忤逆他们的父母。在我们的文化里，忤逆父母是不孝，是最大的恶。但现代心理学认为，<u>对父母的暴力情绪在一个人的成长过程中是很自然的</u>。尤其是在进入青春期的时候，孩子开始学习认知自我，探索和建立自己和他人以及世界之间的边界。<u>当他们觉得自己的边界受到侵犯的时候，就会奋起保护自己的边界</u>。</p><p><img align="right" style="zoom:40%;" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124255118.png"/>英国心理学家唐纳德·温尼科特（Donald Woods Winnicott）认为，<u>一个孩子要想长大并发现自身本性中最深刻的部分，他的人生中必须有一个人能够包纳他所有的攻击性而仍然爱他</u>。“童年的意义就在于能表达很多坏的情绪而不至于有什么恶果和报应。”</p><p>所以，温尼科特很怕“好孩子”，<u>因为他们做一切大人认为他们应该做的事情，而这恰恰是问题所在——他们的“好”是一种必要，而非选择</u>。</p><p>是的，我们应该为孩子创造一个安全的环境。但是过于强调儿童的“脆弱性”是另一种危险的倾向——它为成年人的过度干涉提供了借口。很多时候，我们对孩子安全问题的偏执，<u>表面上是保护，实际上却构成了一种剥夺，剥夺孩子成长所需的正常而真实的环境</u>。</p><p>在这一切焦虑、不安的背后，是一种对儿童深深的误解——孩子如瓷器一样脆弱，无可救药的愚蠢，无法从错误中学习，所以成年人的责任是保护他们远离一切风险，代价却是儿童自我发展的内在自由。</p><p>温尼科特欣赏，甚至为那些会对父母尖叫、从他们钱包里偷钱的青春期少年辩护。他认为，<u>这些“问题行为”其实是一个孩子被好好爱过的证据。正因为被好好爱过，所以才敢于如此挑战成人世界</u>。</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124321887.png" alt="《小欢喜》剧照"></p><p>他认为，这样的破坏对一个孩子来说有着重要的意义。如果父母无法容忍这种破坏，过早、过于严格地要求孩子的顺从，会导致一个“虚假自我”的出现——对<u>外顺从、表面上很好但却压抑了自己的重要本能、无法平衡社会性与破坏性，无法产生真正的慷慨或爱，因为它不曾被允许充分探索自私与恨</u>。</p><p>在他看来，那些没有创造性、沉闷枯槁的成年人，基本上都是在童年时期未曾被容许表现得像个真正的孩子，有孩子的一切黑暗情绪，包括嫉妒、贪婪、自私，但仍然被接纳、被爱。</p><p>至少在我的记忆里，18岁以前的人生几乎完全是按照父母的意愿活着的。很少自由地选择什么，因此也不会对自己负责任。</p><p>我至今记得，第一次离开家乡来北京读大学，第一次独自面对世界时是多么的惶惑与不安。但正是在那种惶惑不安的自由中，我才开始慢慢学着按自己内心的声音去探索世界，学着以自己内心的感受作为行为的依据，知道自己想要什么，不想要什么，想要什么如何争取，不想要什么如何拒绝……</p><br><h1 id="过度升级的“保护”"><a href="#过度升级的“保护”" class="headerlink" title="过度升级的“保护”"></a><p align="center">过度升级的“保护”<p></h1><p>20年过去了，我们关于“好孩子”的模型有了多大的变化呢？</p><p>我们仍然对“成绩”有偏执，尽管越来越多的证据显示，就孩子的成长而言，个性的塑造远比认知更重要。</p><p>越来越多的父母意识到，顺从并不是一种好的品质。<u>顺从的孩子无法自己为自己思考，更容易受到同辈压力的影响，也容易成为有歹意的成年人的虐待</u>。</p><p>但从另一个角度来说，在“安全”的名义下，今天的父母对孩子日常生活的监控、规划与隔离比起过去有过之而无不及。</p><p>20年前，如果一个妈妈每天送孩子去上学，会被当成神经病。但现在如果一个妈妈每天让孩子独自去上学，就会被老师和家长骂不负责任。</p><p>20年前一个孩子成长过程中很多被认为是“正常”的性格或行为，比如发脾气、孤独、愤怒、害羞、内向，如今都被一一病理化为“心理问题”，如“多动症”“情绪障碍”等等。</p><p>心理咨询师徐卓在一篇我们的约稿中（《树欲静而风不止》）回忆自己的童年：“我生长于70年代的北京，小时候生长环境自由，也时不时的有些孩子气的冲突，‘基本上一三五收拾别人，二四六被别人收拾，周日休息’。<u>这些打打闹闹里面催生的‘人际技巧’或者‘冲突管理’能力，其实也是一种‘实践智慧’，譬如如何见机行事、怎样寻求帮助，何时需要暂避锋芒、何时应该虚张声势，对于成年之后进入社会有很大帮助。</u>”</p><p>其实，这一代的父母对于孩子安全的焦虑与恐惧并非毫无道理，但文明就是适应一个又一个不怎么完美的境况，人生就是一个接一个的难题。一个稚弱的孩子，如何长成一个健康、独立、有担当的成年人，不是通过清除Ta的成长过程中的一切障碍、挫折与痛苦，而是帮助他学会如何自己应对这些问题。</p><p>就像身体的免疫系统，你得暴露在病原体之中，否则你的身体不会知道如何应对病菌的攻击。从心理上来说也一样，<u>孩子需要暴露在适当的不适、失败与挣扎中，才能学会如何应对这些挫折，才能激发他们自我应对的“抗逆力”</u>。</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124344768.png" alt="《少年的你》剧照"></p><p>几年前《大西洋月刊》上有一篇长文《如何让你的孩子长成一个心理病人》（How to Land Your Child in Therapy），作者是一位从业多年的心理咨询师，也是一位母亲。她在她的来访者中发现一个奇怪的群体，<u>他们明明有着十分幸福的童年，但成年后却觉得迷惘失落，有深深的空虚感</u>。</p><p>比如其中一位20多岁的女性，她的人生拥有一切令人羡慕的元素：父慈母爱，有亲密的兄弟姐妹，也有关系很好的朋友，受过良好教育，健康良好，有很好的工作和公寓。也没有任何抑郁或者焦虑的家族遗传基因，但是她的痛苦是真实的——夜夜失眠，害怕犯错，无法信任自己的直觉，总觉得自己做得不够好，有一种“漂泊无依”感。</p><p><u>最后，这位心理咨询师将病因指向父母的“过度保护”，对于子女“幸福”的偏执性追求，他们尽一切努力不让自己的孩子体验到哪怕一点点不适、焦虑或者失望</u>。当这些孩子长大之后，哪怕遭遇到人生中再正常不过的挫折与失望，也会有天塌下来的挫败感。</p><br><h1 id="木匠，还是园丁？"><a href="#木匠，还是园丁？" class="headerlink" title="木匠，还是园丁？"></a><p align="center">木匠，还是园丁？<p></h1><p>那么，我们到底应该怎样爱我们的孩子？多少的爱、什么样的爱才是恰当的？父母的爱与孩子的自由之间，父母的保护与孩子的自主性之间，应该是一种什么样的关系？</p><p>在《园丁与木匠》中，艾莉森·戈普尼克，美国加州大学伯克利分校的发展心理学教授给出了一个很好的答案。</p><p>她认为，过去半个多世纪以来，美国的主流媒体上呈现的亲子关系是一种典型的木匠思维。木匠是什么？<u>木匠是一种工作，是根据我的想法、我的品位、我的技术、我的蓝图，制造一张桌子、一把椅子，或者一个书架出来。无论你的成品是桌子、椅子、书架，它的优劣可以用来判断木匠的好坏</u>。</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124401174.png" alt="《小欢喜》剧照" style="width:80%;"/></div><span class="image-caption">《小欢喜》剧照</span></div><p>主流媒体鼓吹的“育儿”（parenting）也一样——你有一个原材料，就是你的孩子，只要你足够努力，技术和专业过硬，你的作品就会是一个聪明、成功、幸福的大人。<u>所以，主流文化中亲子关系的图像其实就是木匠和桌子。当然，这个画面背后是亿万美元的市场</u>。</p><p>但在她的实验室里，最前沿的科学研究所呈现的亲子关系却是另外一幅图像——<u>是一个关于园丁照顾花园的画面</u>。</p><p>如果你是一个园丁，你就会知道，你可能在花园里忙了一天，汗流浃背，累得跟狗一样，就像那些一天下来觉得自己累得跟行尸走肉一样的父母，但那些花花草草没有一个地方是按你原来的心意长出来的。用中国人的话说，就是“有心栽花花不开，无心插柳柳成荫”。</p><p><strong>为什么会这样？</strong></p><p>这里面其实有很深刻的原因。因为园丁在种东西的时候，不是想着要种出最大的西红柿，或者最美的兰花，他创造的是一个生态系统，各种植物可以在里面共同生长，只要你保证土壤丰饶、空间安全，花花草草就能以各种你预料不到的方式自行应对环境的变化。就应对变化而言，花园远比西红柿大棚或者兰花温室要灵活得多。</p><div class="img-wrap"><div class="img-bg"><img class="img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Education/image-20210815124414778.png" alt="《西小河的夏天》剧照" style="width:80%;"/></div><span class="image-caption">《西小河的夏天》剧照</span></div><p>戈普尼克认为，<u>从进化生物学的角度来说，这就是人类童年的全部意义所在——创造和保护这种生态系统</u>，在这个生态系统里，各种新奇的、怪异的、有趣的、难以预测的变化可以发生，孩子可以自由探索应对的方法，等他们长大以后，每一代人能做上一代人预料不到的事情。</p><p>所以，为人父母，不是工作，不是木匠做桌子，重要的不是技巧。<u>为人父母，是园丁种花，其本质是爱。这种爱没有目标，没有蓝图，但它确实有一个目的。这个目的不是去改变我们爱的孩子，而是给予他们成长所需要的，一个安全、温暖、自由的环境，或者说，一个“花园”</u>。在这个花园里，一个生命层层绽放，最终Ta会找到属于自己的那条路（即使那条路不是我们会为自己选择，或者为他们选择的），Ta会塑造自己的命运，Ta会成为一个独一无二的自己。</p><br><h1 id="博主读后感"><a href="#博主读后感" class="headerlink" title="博主读后感"></a>博主读后感</h1><p>我呢，小时候算是亲戚眼中的那种“乖孩子”，<del>幼鹅园之前嘴巴倍儿甜喜欢到处喊人</del>，我不是一个喜欢惹事、闹事、犯事的人，小时候在别人家不哭也不闹，东西掉地上也会习惯性捡起来把它放好，也常常在意他人对我的感受与看法。在家里，我除了小孩子都有的调皮外，总体上比较听父母的话，整个童年仿佛成长在温室，温暖但不适。</p><p>长大以后，逐渐发现自己身上的一些缺点且难以改正，也越来越意识到家长在孩子成长教育上扮演着重要的角色。其实我小学时就开始关注教育方面的话题，目的可能有仨：一是想知道自己的父母在教育上存在的一些问题，二是吃一堑长一智，意识到坏毛病并纠正它，三是想知道自己未来做父母了该如何教育后代。</p><p>那些所谓的“好孩子们”可能常伴有内向、敏感、没主见、害怕责任、怕麻烦他人、牺牲自己完成他人却不懂得拒绝、遇到挫折选择退后的特点。所以孩子需要多暴露在适当的不适、失败与挣扎中，学会如何应对这些挫折，同时家长要给予一定的自由与信任，适当的关怀与包容，就像文章里说的做园丁式的家长，这样培育出来的孩子才具有一定的抗逆能力。</p><p>其实我觉得，“好孩子”有“好孩子”的优点，“坏孩子”也有“坏孩子”的优势，找到它们间的一个平衡点并控制好这个度，可能是我们新一代父母要为之努力的地方。（<del>等等，我还在上大学呢，怎么就#%￥*</del>）</p>]]></content>
      
      
      <categories>
          
          <category> 👍优质转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎓教育 </tag>
            
            <tag> 🍀青春 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语烂梗、谐音梗、土味情话收集</title>
      <link href="posts/c20fc3e/"/>
      <url>posts/c20fc3e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近被迷上了英文烂梗，俺又多了一个奇奇怪怪的幽默小技巧。本篇收集的英文烂梗主要包括外国的谐音梗、土味情话。话不多说，走起来~</p></blockquote><h1 id="烂梗"><a href="#烂梗" class="headerlink" title="烂梗"></a>烂梗</h1><ol><li><p>I think we need to fix the house</p><ul><li>Cuz, there are some holes (Hoes) in this house</li></ul><p>这一句是美国女Rapper Cardi B《WAP》这首歌的魔性Intro部分，我直接秒懂，笑死</p></li><li><p>Why should not we give Elsa a balloon?</p><ul><li>Cuz she’ll let it go</li></ul><p>冰雪奇缘的主题曲是《Let It Go》，艾莎是女主</p></li></ol><h1 id="谐音梗"><a href="#谐音梗" class="headerlink" title="谐音梗"></a>谐音梗</h1><ol><li><p>What do you call someone with no body and no nose?</p><ul><li>Nobody Knows</li></ul></li><li><p>What did a late tomato say to other tomatoes?</p><ul><li>Don’t worry, I will catch up（ketchup）</li></ul></li><li><p>Did you know Steven King has a son named Joe?</p><ul><li>I’m not Joe King (Joking) but he is</li></ul></li><li><p>Which is faster, hot or cold?</p><ul><li>Hot. Cuz you can catch a cold （感冒）</li></ul></li><li><p>I only know 25 letters of the alphabet</p><p>Why?</p><ul><li>I don’t know why (Y)</li></ul></li><li><p>What do you call a bee from America?</p><ul><li>USB (US bee)</li></ul></li><li><p>What do you call a deer with no eye?</p><ul><li>No idea (eye deer)</li></ul></li><li><p>Knock Knock!</p><p>Who’s there?</p><p>Anita!</p><p>Anita who?</p><ul><li>Anita pizza, I’m hungry (I need a)</li></ul></li><li><p>Don’t read Tony backwards. Pls</p><ul><li>Why not (Y not)</li></ul></li></ol><h1 id="土味情话"><a href="#土味情话" class="headerlink" title="土味情话"></a>土味情话</h1><ol><li><p>Can you stop?</p><p> Why should I stop?</p><ul><li>Can you stop being handsome/beautiful?</li></ul></li><li><p>Do you know what’s on the menu?</p><ul><li>It’s me and you (me n u)</li></ul></li></ol><h1 id="参考视频"><a href="#参考视频" class="headerlink" title="参考视频"></a>参考视频</h1><blockquote><p>建议直接看原视频</p></blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Y64y1x7du/?spm_id_from=trigger_reload">超烂英文谐音梗冷笑话 | 第一弹</a></li><li><a href="https://www.bilibili.com/video/BV1jB4y1K7gt/?spm_id_from=trigger_reload">超烂英文谐音梗冷笑话 | 第二弹</a></li></ul><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎉图一乐 </tag>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思口语考试经典错误总结</title>
      <link href="posts/50c193ba/"/>
      <url>posts/50c193ba/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇错误总结主要收集于知乎大V<strong>雅思屠鸭哥</strong>的内部资料。旨在帮助屠鸭选手避免一些咋们中国宝宝常犯的错误，以及提供更好的表达方式。</p></blockquote><h2 id="Cultivate"><a href="#Cultivate" class="headerlink" title="Cultivate"></a>Cultivate</h2><p>在英语里我们常用这个词来谈论<strong>植物、蔬菜和水果</strong>。在这种情况下：<code>to cultivate</code>的意思就像是<code>to grow</code>，我们可以说：<code>to grow plants/vegetables/fruit</code>，我们也可以说：<code>to cultivate plants/vegetables/fruit</code>。但我们不可以说的是：<code>to cultivate children</code>或者<code>to cultivate pets</code>。</p><p>英语里有几个表示<strong>培养孩子</strong>这句话的意思，取决于不同情况。我们可以说<code>to educate children</code>，<code>to teach children things</code>或者<code>to raise children</code>。谈论<strong>动物和宠物</strong>时，我们可以说<code>to breed animals</code>（繁殖动物）或者<code>to raise/ look after/ take care of pets</code> （养宠物）。</p><p>另一个正确使用cultivate的方法是<strong>培养责任感/归属感/意识</strong>：<code>to cultivate a sense of responsibility/belonging/awareness</code> 等等，你也可以用foster来代替cultivate。虽说用法是正确的，但最好别用，就像<code>with the development of...</code>一样太多考生过于频繁的使用它，而且往往用在不正确的上下文。</p><p><strong>那如何表示培养什么什么感觉呢？</strong></p><ul><li><p>Doing volunteer work can <strong>make</strong> young people <strong>more responsible</strong>.</p><p>  当志愿者可以培养年轻人的责任感。</p></li><li><p>A good leader can <strong>make</strong> their staff <strong>feel like they belong</strong>.</p><p>  一位好的领导会培养人员的归属感。</p></li></ul><p>所以说了这么多，<u>你只记住Cultivate用来形容植物、蔬菜和水果就行</u></p><br><h2 id="Delicious-food"><a href="#Delicious-food" class="headerlink" title="Delicious food"></a>Delicious food</h2><p>Delicious 是一个很好去描述食物的形容词，但由于考生过多使用，所以建议使用其它类似表达：</p><p>good food | nice food | tasty food | great food | <strong>scrumptious food</strong></p><br><h2 id="🔥Broaden-one’s-horizons"><a href="#🔥Broaden-one’s-horizons" class="headerlink" title="🔥Broaden one’s horizons"></a>🔥Broaden one’s horizons</h2><p>这句话被中国雅思考生说的太频繁了！淦</p><p>假设你一个人去了非洲，在一个没水没电的农村呆了几年，你在那边跟本地人沟通，学他们的语言，在他们的农田帮助他们干活，跟他们的孩子玩耍等等，那你可以说那个经历真的<code>broadened my horizons</code>。</p><p>像普通的出国旅游，跨省搬家，或者在社交平台和歪果仁聊过天都不能算。</p><p>除非你在谈论一个独一无二，真真正正完全会改变自己人生的事情，否则最好不要用<code>to broaden one&#39;s horizons</code>这个说法。</p><p><strong>有哪些“大开眼界”的表达呢？</strong></p><ul><li><p>The documentaries I watch help me to <strong>know more about</strong> the world.</p><p>  我看的纪录片让我更多的了解了世界</p></li><li><p>I’d like to go to British because I want to <strong>see more of</strong> the world.</p><p>  为了打开自己的眼界，我想去英国</p></li><li><p>Studying English has helped me to <strong>understand</strong> the world <strong>better</strong>.</p><p>  学英语帮了我扩大眼界</p></li><li><p>Reading helps to <strong>open</strong> my <strong>eyes</strong>. </p><p>  浏览有助于开阔我的眼界。</p></li></ul><p><strong>还有一些间接替代的表达</strong>：</p><ol><li>expand your knowledge/interests</li><li>get out of one’s comfort zone</li><li>experience a different style of education</li><li>become more independent</li></ol><br><h2 id="🔥With-the-development-of-…"><a href="#🔥With-the-development-of-…" class="headerlink" title="🔥With the development of …"></a>🔥With the development of …</h2><p>同样也是被中国雅思考生说的太频繁</p><p>首先这样说没错，只是native speakers几乎不会用它，而且只要当了一个上午的雅思口语考官，平均下来会听到它10次！</p><p><strong>如何更好去表达“随着什么的发展”呢？</strong></p><ul><li><p><strong>As</strong> (the) society <strong>has gotten richer</strong>, our lives have become more stressful.</p><p>  随着社会的发展，我们的生活压力很大。</p></li><li><p><strong>As</strong> the country <strong>has gotten richer</strong>, it has become possible for lots of people to travel abroad.</p><p>  随着经济的发展，很多人可以出国旅游。</p></li><li><p><strong>As</strong> technology <strong>has developed</strong> by leaps and bounds (over the past decades), …</p><p>  随着科技在过去几十年的飞速发展</p></li></ul><br><h2 id="Different-people-have-different-opinions-about-…"><a href="#Different-people-have-different-opinions-about-…" class="headerlink" title="Different people have different opinions about …"></a>Different people have different opinions about …</h2><p>这一句略显啰嗦，其实有更好的表达</p><ul><li><p>Opinions are divided on/as to sth.</p></li><li><p>Opinions about sth vary from person to person.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语好词好句积累</title>
      <link href="posts/35c100bf/"/>
      <url>posts/35c100bf/</url>
      
        <content type="html"><![CDATA[<blockquote><p>友友们，还记得学语文时老师经常让你摘抄吗？记得我那时就当应付差事，却不理解老师的一片苦心，现在长大了才感到真他爸的香，其实学习任何一门语言也是如此，多积累好词好句、地道表达有助于给口语表达和写作增加亮点。</p></blockquote><h1 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h1><table><thead><tr><th>单词</th><th>释义</th></tr></thead><tbody><tr><td>workaholic</td><td>工作狂</td></tr><tr><td>shopaholic</td><td>购物狂</td></tr><tr><td>genre</td><td>(文学、艺术、电影或音乐的)类型</td></tr><tr><td>bittersweet</td><td>苦乐参半的，又苦又甜的</td></tr><tr><td>long-awaited</td><td>期待已久的</td></tr><tr><td>newbie</td><td>(尤指使用电脑的)新手</td></tr><tr><td>underdeveloped</td><td>不发达的，发展不完全的</td></tr><tr><td>developed | advanced</td><td>发达的，先进的</td></tr><tr><td>idolize</td><td>热爱，把…当偶像崇拜，非常敬慕</td></tr><tr><td>vice-versa</td><td>反之亦然</td></tr><tr><td>workload</td><td>工作量，工作负担</td></tr><tr><td>eyesore</td><td>辣眼的东西，碍眼的建筑，丑陋的东西</td></tr><tr><td>perseverance</td><td>毅力，坚忍不拔</td></tr><tr><td>talkative</td><td>健谈的</td></tr><tr><td>counterproductive</td><td>适得其反的</td></tr><tr><td>leeway</td><td>余地</td></tr><tr><td>part-time</td><td>adj-adv 兼职的，用部分时间地</td></tr><tr><td>introvert</td><td>内向的</td></tr><tr><td>ornamental</td><td>具有观赏性的</td></tr></tbody></table><h1 id="词伙"><a href="#词伙" class="headerlink" title="词伙"></a>词伙</h1><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>pros and cons</td><td>利弊</td></tr><tr><td>cup of tea</td><td>喜欢的人、事物</td></tr><tr><td>a great time saver</td><td>节省时间的好办法</td></tr><tr><td>quality time</td><td>（尤指关爱子女，增进感情的）黄金时光</td></tr><tr><td>better half</td><td>另一半（指配偶或恋人）</td></tr><tr><td>straight A student<br />top student</td><td>学霸，优等生，尖子生</td></tr><tr><td>mobile payment</td><td>移动支付</td></tr><tr><td>indoor person</td><td>宅在家里的人</td></tr><tr><td>academic performance</td><td>学业成绩，学术表现</td></tr><tr><td>hustle and bustle</td><td>熙熙攘攘，尘世喧嚣</td></tr><tr><td>financially independent</td><td>经济独立</td></tr></tbody></table><h1 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h1><table><thead><tr><th>短语</th><th>释义</th></tr></thead><tbody><tr><td>ever undertaken</td><td>有史以来（句尾）</td></tr><tr><td>once in a blue moon</td><td>千载难逢；百年不遇（句尾）</td></tr><tr><td>happiness lies in contentedness</td><td>知足常乐</td></tr><tr><td>get a better picture of</td><td>更好地了解</td></tr><tr><td>every walk of life</td><td>各行各业</td></tr><tr><td>be scrambling to</td><td>争先恐后地</td></tr><tr><td>complement each other</td><td>相得益彰，相辅相成，互为补充</td></tr><tr><td>with the elapse of time</td><td>随着时间的流逝</td></tr><tr><td>be used to doing<br />be accustomed to doing</td><td>习惯于做某些事（+doing）</td></tr><tr><td>… was all the rage</td><td>… 曾风靡一时</td></tr><tr><td>run errands</td><td>跑腿，出门办事</td></tr><tr><td>through thick and thin</td><td>历尽千辛万苦</td></tr><tr><td>pick up right where we left off</td><td>从离开的地方开始，从上次结束的地方开始</td></tr><tr><td>blow one’s mind</td><td>让…大吃一惊，出乎意料</td></tr><tr><td>keep pace with the times</td><td>与时俱进</td></tr><tr><td>with regard to …<br />in terms of</td><td>在…方面</td></tr><tr><td>at the drop of a hat</td><td>马上，毫不犹豫地，非常乐意地</td></tr><tr><td>once bitten, twice shy</td><td>一次被咬，两次害羞<br />一回吃亏，两回学乖<br />一朝被蛇咬，十年怕井绳</td></tr><tr><td>as the saying goes, <br />as an old saying goes,</td><td>俗话说的好</td></tr><tr><td>learn the lesson from last time</td><td>吸取上次的经验教训</td></tr><tr><td>get stuck on …</td><td>陷入…，被什么难住、卡住</td></tr><tr><td>day in day out</td><td>日复一日</td></tr><tr><td>foot the bill</td><td>结账，买单</td></tr><tr><td>have a full plate with …</td><td>在 …（事上、方面）很忙</td></tr><tr><td>let alone …</td><td>更别说/谈/提 …</td></tr><tr><td>study on one’s own<br />teach oneself …</td><td>自学</td></tr><tr><td>put on a poker face</td><td>摆出一副扑克脸</td></tr><tr><td>… not the way to go</td><td>… 不是条可行之路</td></tr><tr><td>after my busy day of study, …<br />after a busy day of my study, …</td><td>在我一天忙碌的学习之后，…</td></tr><tr><td>based on my own experience</td><td>根据我的经验</td></tr><tr><td>To some extent</td><td>在某种程度上</td></tr><tr><td>time and again</td><td>一次又一次</td></tr><tr><td>come into view<br />the first thing I see …</td><td>映入眼帘</td></tr><tr><td>If I remember correctly</td><td>如果我记得没错的话</td></tr><tr><td>release one’s pressure</td><td>释放压力</td></tr><tr><td>once in a while</td><td>偶尔</td></tr><tr><td>stick to my principle</td><td>坚守我的原则</td></tr><tr><td>spare no effort to</td><td>不遗余力</td></tr><tr><td>every now and then<br />from time to time</td><td>时不时</td></tr><tr><td>kindle one’s interest in sth</td><td>激发某人对…的兴趣</td></tr><tr><td>be grateful to sb</td><td>感激某人</td></tr><tr><td>pass the time of day with …</td><td>共度时光</td></tr><tr><td>on a regular basis</td><td>定期</td></tr><tr><td>get ahead in the world</td><td>出人头地</td></tr><tr><td>In the old days | in the past</td><td>在过去</td></tr><tr><td>Demand exceeds supply</td><td>供不应求</td></tr><tr><td>live for the moment</td><td>活在当下</td></tr><tr><td>on the same wavelength</td><td>志趣相投的，在同一频道的</td></tr></tbody></table><h1 id="句式"><a href="#句式" class="headerlink" title="句式"></a>句式</h1><table><thead><tr><th>句式</th><th>例句</th></tr></thead><tbody><tr><td>I would have done sth if I had done sth.</td><td>I probably would have been a better student and a better gamer if I had taken my sleep more seriously.</td></tr><tr><td>as … as ever</td><td>he’s working as hard as ever.<br />他一如既往地努力工作</td></tr><tr><td>back in the days when …</td><td>Back in the days when I was a child, my life was so carefree and happy.<br />回到童年时光，我的生活是如此的无忧无虑顺心顺意</td></tr><tr><td>I’m going to talk about …</td><td>我将要谈…方面的事情</td></tr></tbody></table><h1 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h1><table><thead><tr><th>句子</th><th>释义</th></tr></thead><tbody><tr><td>But there’s no way around it.</td><td>但是没有辦法（我只能…）</td></tr><tr><td>We’ve known each other for a long time.</td><td>我们认识很久了</td></tr><tr><td>I almost forgot about it.</td><td>我差点忘了</td></tr><tr><td>It is a good way to <strong>loosen up</strong>.</td><td>这是放松的好方法</td></tr><tr><td>Failure is the mother of success.</td><td>失败是成功之母</td></tr><tr><td>Which college to attend</td><td>上哪所大学</td></tr><tr><td>No one has a crystal ball</td><td>没有人能预测未来（水晶球）</td></tr><tr><td>This is the meaning of life</td><td>这就是人生的意义</td></tr></tbody></table><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue前端开发笔记</title>
      <link href="posts/38513257/"/>
      <url>posts/38513257/</url>
      
        <content type="html"><![CDATA[<blockquote><p>根据B站黑马程序员视频所撰写的笔记</p></blockquote><h1 id="Vue基础"><a href="#Vue基础" class="headerlink" title="Vue基础"></a>Vue基础</h1><ol><li>JavaScript框架</li><li>简化Dom操作</li><li>响应式数据驱动</li></ol><div class="note green no-icon flat"><p>提示：以下代码都要导入Vue.js文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="el-挂载点"><a href="#el-挂载点" class="headerlink" title="el: 挂载点"></a>el: 挂载点</h2><p>Vue会管理el选项命中的元素及其内部的后代元素，建议使id选择器，可以使用其他双标签，但不能使用html和body</p><h2 id="data-数据对象"><a href="#data-数据对象" class="headerlink" title="data: 数据对象"></a>data: 数据对象</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            message:<span class="string">&quot;Hassan&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="methods-方法"><a href="#methods-方法" class="headerlink" title="methods: 方法"></a>methods: 方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub&quot;</span>&gt;</span></span><br><span class="line">        -</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">        &#123;&#123;num&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">        +</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            num: 1,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">sub</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.num &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;不能再减了嗷！&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.num--</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.num &gt;= <span class="number">6</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;我的好大，要忍一下！&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.num++</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h2><p>绑定显示<strong>文字</strong>，直接覆盖</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span>Wong<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;girlfriend+&#x27;!&#x27;&quot;</span>&gt;</span>blabla<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; name +&#x27;+&#x27;&#125;&#125; Wong<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            name:<span class="string">&quot;Hassan&quot;</span>,</span></span><br><span class="line"><span class="javascript">            girlfriend:<span class="string">&quot;Wendy&quot;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h2><p>绑定显示<strong>文字/代码</strong>，直接覆盖</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            content: &#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://hassanwong.top&quot;</span>&gt;</span>Hassan\&#x27;s Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-on"><a href="#v-on" class="headerlink" title="v-on | @"></a>v-on | @</h2><p>为元素<strong>绑定事件</strong>，指令可去掉<code>v-on</code>简写为<code>@</code></p><p>语法：<code>@事件=&quot;方法([参数])&quot;</code></p><p>文档传送门：<a href="https://cn.vuejs.org/v2/api/#v-on">https://cn.vuejs.org/v2/api/#v-on</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on指令&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;v-on简写&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;双击事件&quot;</span> @<span class="attr">dblclick</span>=<span class="string">&quot;doIt&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">doIt</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;RNM，退钱！！！&quot;</span>)</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>组件的<strong>显隐效果</strong>，其原理是修改元素的<u>样式display</u>，指令后的内容最终都会被解析为<strong>布尔值</strong></p><p>用法：<code>v-show</code>内可写<code>true</code>、<code>false</code>，也可以写表达式</p><p>场景：频繁切换的元素用v-show</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示状态&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeIsShow&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./img/monkey.gif&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;增龄&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addAge&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;age&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;减龄&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;subAge&quot;</span>&gt;</span>（18🈲）<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">&quot;age&gt;=18&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/favicon.ico&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            isShow: <span class="literal">false</span>,</span></span><br><span class="line">            age: 16</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            changeIsShow () &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            addAge () &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.age++;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            subAge () &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.age--;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><p>根据表达式的真假，切换元素<strong>有无效果</strong>，其原理是<u>操纵dom元素</u></p><p>用法：和<code>v-show</code>一毛一样</p><p>场景：不频繁切换的元素用<code>v-if</code></p><p>频繁操作dom对性能消耗比较大</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;切换显示&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;toggleIsShow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>Hassan - v-if修饰<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>Hassan - v-show修饰<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;want&gt;=80&quot;</span>&gt;</span>不会吧，不会吧，不会真的有人在看俺滴Vue笔记吧？<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            isShow: <span class="literal">false</span>,</span></span><br><span class="line">            want: 100</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            toggleIsShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind | :"></a>v-bind | :</h2><p>为元素绑定属性（比如 :src，:title，:class），指令可去掉<code>v-bind</code>简写为<code>:</code></p><p>语法：<code>v-bind:属性名=表达式</code>👉<code>:属性名=表达式</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.active</span>&#123;</span></span><br><span class="line">        border: 1px solid red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!!!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;isActive?&#x27;active&#x27;:&#x27;&#x27;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;toggleActive&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgSrc&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;imgTitle+&#x27;!!!&#x27;&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:isActive&#125;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;toggleActive&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="javascript">            imgSrc:<span class="string">&quot;http://www.itheima.com/images/logo.png&quot;</span>,</span></span><br><span class="line"><span class="javascript">            imgTitle:<span class="string">&quot;Hassan&quot;</span>,</span></span><br><span class="line"><span class="javascript">            isActive:<span class="literal">false</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            toggleActive:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isActive = !<span class="built_in">this</span>.isActive;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h2><p>根据数据<strong>生成列表结构</strong></p><p>语法：<code>(item,index) in 数组</code></p><p>场景：数组经常和<code>v-for</code>结合使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;移除数据&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;remove&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(it,index) in people&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; index+1 &#125;&#125;狂欢派对成员: &#123;&#123; it &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">&quot;item in art&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; item.name &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            people: [<span class="string">&quot;Hassan&quot;</span>, <span class="string">&quot;Wendy&quot;</span>, <span class="string">&quot;Sharon&quot;</span>],</span></span><br><span class="line">            art: [</span><br><span class="line"><span class="javascript">                &#123; <span class="attr">name</span>: <span class="string">&quot;krump&quot;</span> &#125;,</span></span><br><span class="line"><span class="javascript">                &#123; <span class="attr">name</span>: <span class="string">&quot;rap&quot;</span> &#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            add: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.art.push(&#123; <span class="attr">name</span>: <span class="string">&quot;rap&quot;</span> &#125;);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            remove: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.art.shift();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h2><p>获取和设置表单元素的值（双向数据绑定），绑定的数据会和<strong>表单元素值</strong>相关联</p><blockquote><p>双向数据绑定可以实现数据双向更改，而不是只能data里数据改<code>&#123;&#123;&#125;&#125;</code>的</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改name&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;getN&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            name: <span class="string">&quot;Hassan&quot;</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            getN () &#123;</span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.name);</span></span><br><span class="line">            &#125;,</span><br><span class="line">            setN () &#123;</span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.name = <span class="string">&quot;Wendy&quot;</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="父组件传值给子组件"><a href="#父组件传值给子组件" class="headerlink" title="父组件传值给子组件"></a>父组件传值给子组件</h2><p>父传子主要通过在父组件v-bind绑定数据，在子组件进行用<code>props</code>进行数据的接收</p><p><strong>父组件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;Child :msg&#x3D;&quot;data&quot;&gt;&lt;&#x2F;Child&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Child from &quot;@&#x2F;components&#x2F;Child&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      data: &quot;父组件的值&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Child</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>子组件</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props:[&quot;msg&quot;]</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><br><h1 id="网络应用"><a href="#网络应用" class="headerlink" title="网络应用"></a>网络应用</h1><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><p>功能强大的网络请求库</p><p>axios导入：<code>&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p><p>语法：</p><ul><li><p>get请求：<code>axios.get(网址?key=value&amp;key2=value1).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</code></p></li><li><p>post请求：<code>axios.post(网址,&#123;key:value,key2:value1&#125;).then(function(response)&#123;&#125;,function(err)&#123;&#125;)</code></p></li></ul><details cyan><summary> Get和Post的区别是什么? </summary>              <div class='content'>              <ol><li>Get是不安全的，因为在传输过程，数据被放在请求的URL中；Post的所有操作对用户来说都是不可见的。 </li><li>Get传送的数据量较小，这主要是因为受URL长度限制；Post传送的数据量较大，一般被默认为不受限制。</li><li>Get限制Form表单的数据集的值必须为ASCII字符；而Post支持整个ISO10646字符集。</li><li>Get执行效率却比Post方法好。Get是form提交的默认方法。</li></ol>              </div>            </details><p>文档传送门：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;get请求&quot;</span> <span class="attr">class</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;post请求&quot;</span> <span class="attr">class</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line">            接口1:随机笑话</span><br><span class="line"><span class="javascript">            请求地址:https:<span class="comment">//autumnfish.cn/api/joke/list</span></span></span><br><span class="line">            请求方法:get</span><br><span class="line">            请求参数:num(笑话条数,数字)</span><br><span class="line">            响应内容:随机笑话</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">&quot;.get&quot;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        axios.get(<span class="string">&quot;https://autumnfish.cn/api/joke/list?num=6&quot;</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">// axios.get(&quot;https://autumnfish.cn/api/joke/list1234?num=6&quot;)</span></span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    /*</span><br><span class="line">            接口2:用户注册</span><br><span class="line"><span class="javascript">            请求地址:https:<span class="comment">//autumnfish.cn/api/user/reg</span></span></span><br><span class="line">            请求方法:post</span><br><span class="line">            请求参数:username(用户名,字符串)</span><br><span class="line">            响应内容:注册成功或失败</span><br><span class="line">         */</span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">&quot;.post&quot;</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        axios.post(<span class="string">&quot;https://autumnfish.cn/api/user/reg&quot;</span>, &#123; <span class="attr">username</span>: <span class="string">&quot;盐焗西兰花&quot;</span> &#125;)</span></span><br><span class="line"><span class="javascript">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(response);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="built_in">this</span>.skill);</span></span><br><span class="line"><span class="javascript">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(err);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h1 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h1><p>什么是ES6？</p><p>ECMAScript 6（以下简称ES6）是JavaScript语言的下一代标准，已经在2015年6月正式发布了。Mozilla公司将在这个标准的基础上，推出JavaScript 2.0。ECMA Script,JavaScript的语言标准。</p><p>优点：</p><p>提升JS编写大型的复杂应用程序的能力（这次升级加入了模块化的概念、细化和优化语法、封装了一些方法）</p><p>缺点：</p><p>对浏览器存在兼容性问题，可以使用Bable：ES6-&gt;ES5（转换器）</p><h2 id="let"><a href="#let" class="headerlink" title="let"></a>let</h2><p>和var关键字的用法基本一致，没有变量提升，建议用let</p><p>变量提升就好比你先使用变量后定义，编译时会自动将变量定义那段代码上移</p><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><p>使用<code>``</code>包裹文本，在需要替换的位置使用<code>$&#123;&#125;</code>占位，并填入内容即可</p><h2 id="对象简化赋值"><a href="#对象简化赋值" class="headerlink" title="对象简化赋值"></a>对象简化赋值</h2><p>如果属性名和变量名相同，可以简写，方法可以省略 function 关键字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 简写前</span><br><span class="line">params:&#123;</span><br><span class="line">id:id</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 简写后</span><br><span class="line">params:&#123;</span><br><span class="line">id</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>function 省略掉，替换为 <code>=&gt;</code></p><p>参数只有一个时，可以省略 <code>()</code></p><p>函数体只有一行时，可以省略 <code>&#123;&#125;</code></p><p>函数体只有一行，并且有返回值时，如果省略了<code>&#123;&#125;</code>，必须省略 <code>return</code></p><h2 id="箭头函数的this"><a href="#箭头函数的this" class="headerlink" title="箭头函数的this"></a>箭头函数的this</h2><p>创建时的this是谁，运行的时候this就是谁</p><br><h1 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h1><p>后缀名是 .vue ,可以同时编写结构，逻辑和样式</p><p><code>template</code> 标签中写结构，例如<code>div</code></p><p><code>script</code> 标签中写逻辑</p><p><code>style</code> 标签中写样式</p><br><h1 id="快速原型开发"><a href="#快速原型开发" class="headerlink" title="快速原型开发"></a>快速原型开发</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>安装 <code>Node.js</code> 全部使用默认的设置，一路下一步即可</p><p>打开命令行工具，输入命令 <code>node –v</code> 以及 <code>npm -v</code> 检查是否安装成功</p><p>通过命令 <code>npm install -g @vue/cli-service-global</code> 安装一个小工具</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>保证 环境配置 成功之后，在 <code>.vue</code> 文件所在的路径下打开终端 输入 <code>vue serve &lt;FileName&gt;</code>，等待解析，然后在浏览器访问出现的 地址 即可</p><div class="note orange no-icon flat"><p>注意：</p><ol><li><p>template 中必须有一个根节点，比如<code>div</code></p></li><li><p>script 中的 <code>data</code> 写成函数，内部返回一个对象</p></li><li><p>如果要使用写好的样式，直接 <code>import</code> 即可</p></li></ol></div><br><h1 id="vue-cli（脚手架）"><a href="#vue-cli（脚手架）" class="headerlink" title="vue-cli（脚手架）"></a>vue-cli（脚手架）</h1><p>帮你<u>创建项目基本结构</u>的工具，帮你整合了很多东西，我们不在需要自己一步一步的搭建这些了。</p><h2 id="环境配置-1"><a href="#环境配置-1" class="headerlink" title="环境配置"></a>环境配置</h2><p>保证 Node.js 安装成功的情况下，通过命令<code>npm install -g @vue/cli</code>安装一个小工具</p><p>如果失败了：</p><p>先输入<code>npm install -g cnpm</code>安装一个镜像下载工具（cnpm）</p><p>成功之后再输入<code>cnpm install -g @vue/cli</code>通过刚刚安装的工具 来安装 vue-cli</p><h2 id="项目创建及运行"><a href="#项目创建及运行" class="headerlink" title="项目创建及运行"></a>项目创建及运行</h2><p>在想要创建项目的文件夹下输入 <code>vue create 项目名</code>，调整一下设置，然后回车。如果成功了，依次输入最后出现的 提示代码，稍等片刻，在浏览器中输入出现的 地址 即可访问。</p><p>如果有写好的代码压缩包，解压它，然后输入<code>npm run serve</code>命令 运行 即可</p><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p><strong>public</strong>：内含网站icon图标，页面模板index</p><p><strong>src</strong>：用来放网站绝大多数资源</p><ul><li><strong>assets</strong>：静态资源，如：图片，CSS文件</li><li><strong>componets</strong>：页面组件</li><li><strong>App.vue</strong>：顶级页面组件</li></ul><br><h1 id="vue-router"><a href="#vue-router" class="headerlink" title="vue-router"></a>vue-router</h1><p>管理多个组件切换关系，用它可以做 SPA（Single Page Application 单页面应用）</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在项目的 根目录 打开终端，通过命令<code>npm install vue-router</code>下载</p><p>用法：在<code>main.js</code>中</p><ol><li><p>导入</p></li><li><p>use一下</p></li><li><p>创建路由</p></li><li><p>挂载到Vue实例上</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from &#39;vue-router&#39;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line">import XXX from &#39;.&#x2F;XXX&#x2F;XXX.vue&#39;</span><br><span class="line">const router &#x3D; new VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: &#39;&#x2F;XXX&#39;,</span><br><span class="line">      component: XXX</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h &#x3D;&gt; h(App),</span><br><span class="line">  &#x2F;&#x2F; 挂载到Vue示例上</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><h2 id="配置规则"><a href="#配置规则" class="headerlink" title="配置规则"></a>配置规则</h2><p>通过<code>routes</code>属性配置地址和路由管理的组件关系</p><ol><li><p>导入组件</p></li><li><p>routes 属性中进行配置关系</p></li><li><p>path：设置地址</p></li><li><p>component：设置组件</p></li><li><p>可以配置多个</p></li></ol><h2 id="路由出口"><a href="#路由出口" class="headerlink" title="路由出口"></a>路由出口</h2><p>希望匹配到的组件显示在哪里，就在哪里设置一个<code>router-view</code>标签</p><p>形如：<code>&lt;router-view&gt;&lt;/router-view&gt;</code></p><h2 id="声明式导航"><a href="#声明式导航" class="headerlink" title="声明式导航"></a>声明式导航</h2><p>通过 <code>router-link</code> 标签设置<code>to</code>属性为地址 可以实现点击切换</p><p>形如：<code>&lt;router-link to=&quot;/XXX&quot;&gt;&lt;/router-link&gt;</code></p><h2 id="编程式导航"><a href="#编程式导航" class="headerlink" title="编程式导航"></a>编程式导航</h2><p>组件中通过<code>this.$router.push(地址)</code>可以通过代码实现切换</p><p>也可以直接<code>@click=&quot;$router.push(&#39;/XXX&#39;)&quot;</code></p><h2 id="路由传参"><a href="#路由传参" class="headerlink" title="路由传参"></a>路由传参</h2><p>在地址的后面 写上<code>？</code>分隔</p><p>通过<code>key=val1&amp;key2=val2</code>的方式添加参数</p><p>组件中通过 <code>this.$route.query</code> 访问对应的 key 即可获取数据</p><br><h1 id="Element-ui"><a href="#Element-ui" class="headerlink" title="Element-ui"></a>Element-ui</h1><p>饿了么前端推出的 Vue 组件库，很多常用的功能已经写好了，可直接用。<a href="https://element.eleme.cn/#/zh-CN/component/layout">Element-ui 传送门🌀</a></p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>在项目的 根目录 打开终端，通过命令<code>npm i element-ui</code>下载</p><p>在<code>main.js</code>中</p><ol><li><p>导入 Element-ui</p></li><li><p>导入 Element-ui 样式</p></li><li><p>use一下</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import ElementUI from &#39;element-ui&#39;</span><br><span class="line">import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;</span><br><span class="line">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure><br><h1 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h1><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><ol><li><p>在&lt;Root&gt;下运行cmd并输入以下命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init  <span class="comment">#初始化</span></span><br><span class="line">git add .  <span class="comment">#上传所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;&lt;Custom&gt;&quot;</span>  <span class="comment">#提交时的注释，例如：&quot;update&quot;</span></span><br><span class="line">git remote add origin &lt;RepoGit&gt;  <span class="comment">#连接你仓库的Git地址，使Git Bash知道代码要上传至哪个仓库</span></span><br><span class="line">git branch -M &lt;BranchName&gt;  <span class="comment">#将默认master分支名改为你自己设置的</span></span><br><span class="line"><span class="comment">#若第一次提交要加上&quot;-u&quot;，如下，这里推荐分支名为&quot;Source&quot;</span></span><br><span class="line">git push -u origin &lt;BranchName&gt;</span><br><span class="line"><span class="comment">#若提交失败，显示：error: failed to push some refs to，则加上&quot;-f&quot;来强制提交</span></span><br><span class="line">git push [-u] origin &lt;BranchName&gt; -f</span><br></pre></td></tr></table></figure></li><li><p>再输入<code>npm run build</code>打包Vue项目，此时项目目录下会多出一个<code>dist</code>目录</p></li><li><p>Git三连将dist推送到远程仓库（默认为master分支）</p></li><li><p>输入<code>git subtree push --prefix dist origin gh-pages</code>将<code>dist</code>目录推送到远程的<code>gh-pages</code>分支。（若远程没有<code>gh-pagse</code>分支则会新建<code>gh-pagse</code>分支然后再推送）</p><blockquote><p>备注：此处只能是<code>gh-pages</code>分支，才能使用<code>GitHub pages</code>功能</p></blockquote></li><li><p>登录远程GitHub仓库，通过<code>setting</code> -&gt; <code>github pages</code> -&gt; <code>source</code> 将<code>gh-pages</code>设置为<code>GitHub pages</code> 的<strong>source</strong></p></li><li><p>可以直接访问链接看网站了</p> <div class="note orange no-icon flat"><p>注意：网站每次更新后，需要执行<code>npm run build</code>命令，再上传到仓库</p></div></li></ol><h3 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h3><blockquote><p>使用背景：</p><p>静态站点完成以后，需要部署到线上，如果使用传统的部署方式，每次代码更新都需要在本地重新打包构建，然后替换服务器上的代码包，这种方式对于更新不频繁的站点是可取的。一旦站点更新的频繁，这种方式就很繁琐，很费人力。这里采用<code>Vercel</code> + <code>Github</code>方式部署。</p><p>优势：</p><p><code>Vercel</code> + <code>Github</code>部署，一旦<code>Github</code>上的代码更新了，会自动触发<code>Vercel</code>重新打包构建，从而保证线上线下功能同步，大大地简化部署流程。</p><p>缺陷：</p><p>Vercel`适合静态应用的构建部署，不适合需要从外部获取动态数据的网站，那需要用到服务器了</p></blockquote><ol><li>确保已将本地代码上传到<code>github</code>仓库。</li><li>登录Vercel账号👉导入GitHub仓库👉点击部署等等一系列无脑操作，即可访问了</li></ol><br><h1 id="问题合集"><a href="#问题合集" class="headerlink" title="问题合集"></a>问题合集</h1><blockquote><p>记录了一些报错等等五花八门的问题</p></blockquote><ol><li><p>运行项目时报错：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ERROR  Failed to compile with 1 errors</span><br><span class="line">error  <span class="keyword">in</span> ./src/main.js</span><br><span class="line">&lt;...&gt;</span><br><span class="line">Cannot find module  &lt;...&gt; \node_modules\@babel\compat-data\data\corejs3-shipped-proposals<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&lt;...&gt;</span></span><br></pre></td></tr></table></figure><p> 直接在命令行中输入以下代码即可运行成功</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -D babel-loader @babel/core @babel/preset-env webpack</span><br></pre></td></tr></table></figure></li><li><p><strong>更改 Vue 项目运行的端口号</strong></p><ol><li><p>在项目根目录新建文件<code>vue.config.js</code></p></li><li><p>输入以下代码：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        port: <span class="number">8080</span>,</span><br><span class="line">        open: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 其中<code>port</code>为端口号，可自定义改</p></li></ol></li></ol><h1 id="技巧合集"><a href="#技巧合集" class="headerlink" title="技巧合集"></a>技巧合集</h1><h2 id="如何将页脚固定在页面底部？"><a href="#如何将页脚固定在页面底部？" class="headerlink" title="如何将页脚固定在页面底部？"></a>如何将页脚固定在页面底部？</h2><p>大概可以参考以下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>; <span class="comment">/*IE6不识别min-height*/</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 得保证是#page是#footer的父亲 */</span></span><br><span class="line"><span class="selector-id">#page</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">60px</span>;<span class="comment">/*等于footer的高度*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;<span class="comment">/*脚部的高度*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">clear</span>:both; <span class="comment">/*清除浮动*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>标签：html和body标签中必须将高度(height)设置为“100%”,这样我们就可以在容器上设置百分比高度，同时需要将html,body的margin和padding都移除，也就是html,body的margin和padding都为0；<br>div#container容器：div#container容器必须设置一个最小高度(min-height)为100％；这主要使他在内容很少(或没有内容)情况下，能保持100％的高度，不过在IE6是不支持min-height的，所以为了兼容IE6，我们需要对min-height做一定的兼容处理。</p><h2 id="router-link-to-动态赋值"><a href="#router-link-to-动态赋值" class="headerlink" title="router-link to 动态赋值"></a>router-link to 动态赋值</h2><p>大概可以参考以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">&quot;link.address&quot;</span>&gt;</span> &#123;&#123;link.name&#125;&#125; <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  data: <span class="function">() =&gt;</span> (&#123;</span></span><br><span class="line">    links: [</span><br><span class="line">      &#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;首页&quot;</span>,</span></span><br><span class="line"><span class="javascript">        address: <span class="string">&quot;/&quot;</span>,</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line"><span class="javascript">        name:<span class="string">&quot;关于我们&quot;</span>,</span></span><br><span class="line"><span class="javascript">        address:<span class="string">&quot;/about&quot;</span>,</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置404页面"><a href="#配置404页面" class="headerlink" title="配置404页面"></a>配置404页面</h2><p>打开<code>index.js</code>文件，也就是配置路由的JS文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> notfount <span class="keyword">from</span> <span class="string">&#x27;@/components/404&#x27;</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">  path: <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;404页面&#x27;</span>,</span><br><span class="line">  component: notfount</span><br><span class="line">&#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    &#123;</span><br><span class="line">path: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">name: <span class="string">&quot;404页面丢失&quot;</span>,</span><br><span class="line">component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/components/404&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>文档：</p><ul><li><a href="https://blog.csdn.net/weixin_42941619/article/details/87344327">什么是ES6?</a></li><li><a href="https://blog.csdn.net/weixin_44670973/article/details/107130231/">Vue项目打包部署到GitHub Pages</a></li><li><a href="https://www.icode9.com/content-4-846161.html">Vue.js静态站点部署-Vercel +GitHub</a></li><li><a href="https://zq.zhaopin.com/answer/6161144/">Get和post的区别是什么</a></li><li><a href="https://www.cnblogs.com/caohanren/p/11981066.html">vue父组件传值给子组件</a></li><li><a href="https://blog.csdn.net/weixin_39881802/article/details/111534348">vue 页脚_如何将页脚固定在页面底部_sticky footer, Layout, templates</a></li><li><a href="https://blog.csdn.net/qq_33026699/article/details/81740583">Vue怎么在路由中配置404页面</a></li></ul><p>视频：</p><ul><li><a href="https://www.bilibili.com/video/BV12J411m7MG?p=3&spm_id_from=pageDriver">黑马程序员vue前端基础教程-4个小时带你快速入门vue</a></li><li><a href="https://www.bilibili.com/video/BV1RE411W776?p=12">带你进阶Vue技术栈：手把手教你打造自己的音乐播放器</a></li></ul><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝前端 </tag>
            
            <tag> 🟩Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思口语笔记</title>
      <link href="posts/64250e44/"/>
      <url>posts/64250e44/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="咒语念错了！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="da009e558ce68b051dba3c01332d9242612ff86ba896f805c4581864b3189bc8">3a512edc3437c414fe07e6e1863d6ec63e80a7354ebbd754b87cb40f8fd1979fd423fdb338754732a8a1657bdf703e544b8aec8b6187cc8dfc5f1199c35e0d9d7ba9a1f8fb454e5c0819088a0fac684d1f21ae8c8f635652b99f3dc73b0c673da7932714eeb7f59969fd7d530dd3fd5772205c2fde70e1be52eaabe5dab2bb36aa7bfb4dd5496984c97786eda8d0fec292f24053478873999b3a462a14e3ec31affefe4d89cda899573cd424d760225012cd3ac3bb3c43fb9507223274b0f81d4741bfbeed711e93f7372e85affc5a8957df3e26a19b89b420eacc5858b05d54cf6bfa9a8dba3b32dadc165d80f5fc43b032ee0a786ae31b2350a5fba8e44c3700859d17a054b064e34e21310e93c957cef8093dba82d67bb1a278e89e4f040964454722676b6b73ddcab5b9b2ff48f018e8b194223e6dffea511cf98f52799cebeae896a3935055980df64c888de3ba3bff030599c578487968c4fb1705c58045e45972a409b232128132879df4d6041b9512e7f352189d3f821801d302d4f227c127eeb47a92ba63adf0bba54ad0b666887cd51fde5a7388477c4e0fded2965d00304faa61558e5e8312de6b6a1adecef428a18825746d584444adbcce7708dd04ecec5d6d92dd821bbf98e334ab03058b5f417714ae03a93310b5f9ea5430ef7199cc8ad9fb102a752846ec64ce7e8b718522a4d9ef068d5434aa8282c068c82b87ad2c434a7a360bb0250769fc5b052762850392bf88083423cb0ce64852da7c3debb8f6d63b42ae742e894b9a9d119879538a6ab93efc3e86cd50ee5d9149f7f75150e6707baddbfb8b47193986989b7935d9267f72f5f5258450b5cadea396517ca47d5e6497885bf2126179740eb717be775816d6e4290fca95d322b9f44a67c4e23126679cc44ac55c1061145a3d935d28da4fb62e399f4aa486f88e52142040c1599741dfd0e911a8784a766ba60ce61a9139458cc4a3a78e15a3ce7c4641c07a6c472de9060183bfb7e23c5f844cc056c75db957b9af98a8a21371de939a03a6a0b0d57bcbfd677d805a53b03b58d7af450f971fcc832a9de3f3dbc38670f96b55b0edc24fdb6411ebf7b920239b14ed48aa309b4773747cb77fa4499a8704f1ceb6708e54a01fd6dfbed51ab37eb602e6323fa9383a5a95c0e43e825819c61af6ecf53a9d3884cb2c94f441ed24e5f90ce7a9c02804ff5e981ea5465055fd8cde0c5b22a6c996820c1bc90b8fbd62a7c9122bb4454e81ac8e44f9c487e7cb8331221f276173dec83356bd1cf29089187926101a0e7b500263efffaf944f696a3102f7f8c219e671b00fa66f2803d08bc160dbc174d04c1f17fb40c237df80bc1f0552668ac92db6e9a5d57eb3ab6cf4db8f80e184530c2aef251e05c5265e52f2ea03b7b1df2ad98ed360cc41e62c41e0d6788c5900ef446a0a7cbc0275b9dff7271656073a6cef425a05b3db7a2a6e6cd5f4bff45932c6f4368ca5f3b13b69644310d0750badbd71ed3de54b0a8cbeb62ca6b1d8400af856073016b47ce37761eefe7760964dc3feff2df241ee4eb7929a49edddd2455fb98a2e2fdcf8bf1e42d50d4dc0e50da145b80f5cee76c499be64b8baf11457377db111d76108591c2586191d35ad765675ae7545b19a0809d297c442d7f397af70e80b741d8955cbc9c2b50f2c4102740affc98b7ffa1daf90142d24010b1c6f5eb4cda5c488d223e4c41c905552256f79fd343f25e9011711bdf4a60abc5e2203877cca00b76daf92d8bcfb2f6394375c81775b99e42fff654e4da7d7a9ffaaef0b8203d438bc7054939c6b1b896410645ed8403e8fc90a4a6d0c5cb2e91a028ec6f1b657c710271d3580e10b079d04f11f0d6cae0f76388e157a57f3829ce92c3996486a7d74e4d2d6b2633faae40da9343706958186211d3c64b10161369c6128e413694a33dbd593259b6a3858a447101e33b878e946c20cc87e88dd3ae44ec2bb14b11b7ec26da95a3d6aea14a498321edf9621ea704d562e4e34a5cad5f23c761175d5d420f272254e9bb9ac66ced9a192f1e8566c61fbbef16ce7bd9fac879dcac8d1d9f30723d6881330c05a487cb0ee5ebeef8994e275725b75a9941c16263a257d4b1616eb07c2a26744e9928e829a4a34938cf46036d9f8410fed8e9a8dd03cf28e3e8f4f33d0bfedeb275fdc2eaa4c41af1d8312222754a99dff42009a5a619bc415107ce250f2fb809018c4f3897f258ea67f9a5d6f058dde0fed961dd393f550bfd9add38272379edfe585b9f62f79153ad5a0cdc761ed717f6a44457b972fe657d59edf401c2568cfa14102561ed771f924c6af6792003e5727a861d568d014af2448e6ac8db003ac5aca8335f4f6cca96af8ff2f2dee48de43a6c07dbd5db665ae7b089b3fe8e4bd8b82e9f4fd09ff36c07280bb1e00054fc91133107c629edcc221310ad4e971f2ca0543aa8abd22b7ff9d43a4bb8a54d891308e4008c23387de65e90d2fb69b4d129ef72972a5a66ae7549e667f326ead501524ea957b35b6f9c41a8e78c400d78bb043314c17e606b32f7b9e51919a84a2cb96dc1be8c7144ae4034a48e9a07c4fdcfc2f635e456c0f8349d227724d6df623d37025c9dd367c18ad67130dd710690f4099d1a240b8fa7090d97c044585d738b29257ca1ebe35282ba0356448b38b4205988f5c98e13c4c4ddeb625a1f35c022d115411c935a05186e1426373c0bbfaab437eff9168d9efc2513c6934d484cff2538e7e2721aed2942be328c7862a189ce5064d88c05a3b2e8661c089ac52e7f9b8d7e7562e959ed69efa14c62a4a67dc354cda4cf49da65e6fcfd0d2865c1a846d852d0cb5281ca38ad08e5cf751b8a1454f209e78901d33debb9af05031a4ca4dc1f7c65bf7815737579942cac2bd92c69b2e73117647f7702996ccbb9864c86d737557ceb08778aded61f8758fab45e655d3cc55669776b6c300ffe2cafef655ac8997c792ba1f2ddd00df2b8fdfa607b54f54c4840804c3afad7f154618c8af21fc874b035bd6fba74258313cb72ed041c58183421324eb34eb87d81b13da10519a302b2382002b2d7c2b35c71571e92b255b8b06d36c41cf235ef6f320c684b8a4f5d2a602e6b3aa5a8b667c972be45fa95394ae08a137b72fea331e2aedfbe58023c6837ca8fe41bcab894193f8d9556d49156e74bee8fe891124c5e1a2303eec81fd9f348648b64e075355999da842eb5d9e88edd7edc2c93a2e60be935164c1f19d192838367dc2bc07d3be8368e51e0692ea00132d43308a1c6d9633e3c01372d0624c23cac294bbea747d6dc07f86878185d4ddb92d66815e6b3a6c19319ebfd406edebbebaf5dd367f8fd561fb1a4667f4f94c38156fa857c80621069b6633b9db98408009ba9eef9d87ed1aec860f09bbfaa239220415360a274abd87132e96476c1b95407a06ef978d485c5ada9d29f803c8c13b6167d661683d9c7d4501a61c86ba4cf2168a08e27b60f772192f8ae7c28df31589d37bef3cdf645ee1a40b76ed13b570a2744cf7f47fe0fe51d13aefd350b2f427d48fb9b5cd470d536cf4e3b3285f3e1af7780747ec2c0c69a43ccf1e4392d4b78e37cd63cfc1b6fcfb2b113a69d95672aba14ad2547b90b6cdad7ca122c97b33c2f2b41d5d852bf13cf5c4fbaf6598c2f194c00577c5d87fe40addc3b18898476d417fdce85484fb37cbc738fac2e99c6311455e24ee6b38d25cba503e5d52a290c3a1962a321ff97928cef360e894135df614c3a2865576df166aee34467bd68cdf135f44ebfa24fd65f811d075fe7de0211d2f55041a08ad77e01e2216c2d2aa02fe46b8d77dc080c30b3a3408903275a553e60fce071b0beada0c8a64be73e326103ee9921ea75512f254b1c701246bb57c8e9c0e8838c9db66acf54e05ff01ed8ac5fba22452064a80d98f674a0759c57f8cecc309a6fbcb1afa34933cd5ea870eedb2c3a8560729587f7e3f5250e70a38ef2ef1a8127d19f0f403495e39a7fe40fb0acc5e29df7f9b5f98c223fc88577168aec5c8981b41f235292321f04126985c39fd7f65f5ad866f5cc3f6e9b44a7b95895e3821c7ad187cfccf5efc2a010e8528958d51a16c0dda7a749edf9332cacf5ecdb25a9a3dc9d4a0d7e3e0865bd8d1d27f8db2cb0626c50cef94bd13e5e654dfae059351ddb30f4eab7058f3c38979a6dd4fc2acfb042e19ce5d3027ed58b7f4705c2c005b511111080866e3cb22adc67a0f462036553e2c8b3d99586bb474e9fa01c038e93a4ec82286862f6b824283cfe489821ac1b541fafd1b52f870bea36aa9f989a0574bc8ecb1ffe6b78c2090bf2d6e5d47721db12eee1f27532e9310f33cad09b34b6b90033c2a3881c702d7d879bd1d790108d0d381858df5a7bb03b1729ddcf6db19266c5ee7f137ade332a2529dfaf706f76c9c37a4b68834a47a0c1759e2f309216a46fdeb504a74659e36414b1c294f7459abe66288f8fe6f95e5b5311e2d1930aff9f4a4ffd93a52325eaef7deb8246b3c6ee62b526226b07a4687b9737d37b4b61a267ae3c912d7a4d2e2899c77975a9ba60d95672f80ed74e06fec457c8326a63f6b55c1392ff96ed2ade9dc49e75b21abb070094706dc19580509db250c76c95b10a909a60a4f175788d45058f0b8cfd350ab4d0eaa9bb48cd998aace28f379bb6e5af22ae2d227047622cac15073ec1351baa57c29114344a593d96ce1229e2b47a6c3c014a2649a5d5dde3a6937882deb660f867eadd6f9139bfe3ee209744a6241d8708dbdf7e327d5c9038cdc117fa543bf6fe87bb46e0da402a08d6ed4aea4a5ed84d4b29e52d7a60d0d48e664ed3903800e512c12230895be06d2a36f68f5b1dbe46228891d93dac17b92b315e1cd0dae37df444d0579e20e305f1286b565cfd79a3593aae5d4c7bd4b7c54856a63f505e89548c7e58ef38bee5588b2e964d68e3f9c99613b0630b2bb6dfa26b06f0ca23f977a8ac4f53bd970306ee2b7e1bfd9cbbfe538fc849b5ad6c6f469eec625e0d7ecfec52ca73fd524ad277ee3e5de5527701a6afce1bb6d142de5af421724308dc225d6dca97379f493165903e961bd72619ac4351a7d06b2d3b96615e89e7a88c941c35d99f3d3358e94f32b557c312c445e740de8752edbdbcb680f163adb3162a2ba54cc5716acab4f269d444bb131cff6244eb7320040401fb42fc605eac34a9a0b55fe7142ac005ad5a2089e2bfbd0ba8a605387a27d0c75334dc75086bdd5e96ef3a83d7d85074bfd7edc0af9031899832b2d3bf55f8340f2620dc239504a02139dfeb588db2bd42bea848e6c2a0f608bbe7905975e1e45c066397c2348775e8d8ffa8d9d64023c512308670bb9f5c7eea209bce3bf6e784b3c5c7f42df548122afb41215117bebd7b9ff90da8f7c6839e53eb085fabe2f2e31f815c9fd61925feb9e5c5b0b9ee619e4a6bc81150ec07309d7a58f7de6ffffa4851a3c6585987537fa2189d040991cca960409bd38290bdcfcab316176feae6378143e90f84342f5c7da879a28bcd7b697735d8db23fcef2a892c56eba0e04b8de3cebdb1deb17490de59d4f8aafa4a9ea4feccd16f3b12a760f902e413086d6042af502be1e153c05bd0afecfb65e4d067c3d3162463cf5c90a8cb7cbb74789ec188df9f4f912e993363d325a2d1c0531ec01f9b69e607b4f28e7c67408a9e10f1f610fc9887d2655e49e48e5a9978cf37af0899e2316003e1684c0b73a8c080a73a91554ed475204cbeca768b4dc6890bffa816ed36b900c185fd285eebb3d3ac36a208cb87581e5019dccf05d943df832828feece1c8946f7fbff05a22ff92af77ac52db65103df7d9411a9953abfceb5b564351f003e5cfe97f4352e59d2257cbd5279e7793930e5295ae906042d1d2172b8dc79c621594a0c72111cf1a1caeb42d0012fa1dd6d0683f5ff1c7a488b8af1ee55609940b8f87f060f624440e5c58931403b87fa0617343fdf45ddc978ae969b08a4f3d12e0ab96d7301ed2597354cad6c602051cd0407e65f23a5f66517b81973b0daa88a3031adbbb1f9abdd2193cb26055eb460159c1290b43eddb2699808c9e0df6ba1aaf56276a360d9665c63af424e03b1d2786c61761d5a219602dbbdd8db73569e760707a6db1effc74b5f083dc2b0ac90614424441cb4aa22b797c86ecbadf56875117b3bf18d560f267f3d2965354e4ab52430af49a50c327c47bc89ed9a5e2b4753a94c515a30d603f2e56dc2f43ae78774d62882f70ba3d700f3d3a6e63c30c02e9f75d699aeed2a5d9e2839c14495b69f0a0dc130e28ad9e0f213a46e8e86d299c43e64f47d7b5db2a9aa3eb4f11288d2a80dee2a823ad26388140904fc9bbc597e4f2046d0d727c8e59f77d79d680d36326d6287b973afa7a6d48919bc2bebde994b649ca89f21be982f3ffa367fe40ede6d0c94be321e2786efbb712a1c217ecfe702aead7796eb1480247a5c5c49371d1b75027317487dc145b336e2dd83bdbce86dd252a6eee6cc78731af6e6d42bdafe3e7cc7a3d7cd2b416840877c8b534fa32d6862f712227a4c694b2df15dcbf019ea7f872847afc154b45d3075316b13987a84c8fef3ce878e607ff05a0d77870cf8b94bda8c5e76667493afcb048f7bb1dbbea7f59941763cc58612e35aed525c50d18738490d7238fcf5928d802d74087b2a360a58c2719f5f1a9f41f468b02673f8a8a408005446ef732bd154a93269d748bb0382cfe024da36189d4663cecbb090b67392f1f26c12ac859cc558a392638b5f38f36dbb2328fe6ec8cb8aea37ecd0ff339640c187406297f354daa8b9efb47a6568c62edf69833936ee5f134f01b7f3540653484fd7f06d8596478c2320abd6b66451dc02c53f5e93e1c70c9206e502f76ccf02ee07a6b523a58cae6cc135b452877de0f71f55cc09373edb62049782602a5af8be4fca0454d150477b83677b466c8824b69c004a24552643bfbd056d9a3b9a9ec2d9790de0413d51a099d2c1f3dff37d61ffc428bab44dba6469459ba45c0caf0c18e119f128b5e74d6af23b6879cee078518c23a4532a68e307c541feb916c9308a3f17053e9863c38b1ef03250b9e534f6752f4109417965922b3ee95427af56d74eba3aebe620a60a9009fe0b27e7e9d74ea1a0b54710b0535aeac438a330086631f6bcad51d09ff3cd91915c33fc07924d84ecaa29c983de2e8bb090839d9f7b404785249651690366ddfef2a34f468dacf78a8676b64608d0b093e92e8dc7ee36e4259d88a29344a45559bc564a0556d65510ace7c261b0bb3d50ef58f995b955729dadbe3490c9e66ed14dea58bdc07b186f11375538b53f2a369537f5d9db3796be4cd4c2acce2085798edbe93cc32e7ff5ee8226e6c24c24e1853db0aa1ed5fd3418840b0ea02b682928407ebdf5ff389eb716377cb027be99bcd3a96f09c87a4095e746bdcec685ab5c707c21d38b31c899aaeb9dc3533b5273b09b4ed2b84469c75c5749a63536840be7b51b5c11bc37d11221de0ee92d0682f7d921aca6aa048d94a0ab1b53434bb922056551620df6221254dc2285d9a37160a5b4508514750edb54299d24324bb05c45ecf34a74210b6af3cb90694606ebe27c5815668011a8bcf23f26220188431e3a2a7e61469f3bd4103e6f6005dec686e779ccbc7ae86dc11464cfdeebb8090c5ec7fb94fa714ebde776b068f2f87e31915c1e92251e50872c9a5183cf0ecb4d07383276dab9a00212695caafccce058c4d2d5c121881e386fd01cf8d0efb0ce895fa5e85195c1af9f443183a693ea62662edc789d19f54cbb76edef2d513dfcfb152af8e61e5d5b271df02a498c95c09c747c0387d08b064e2e2cd9dfa581ee3493c04d8943e4bdba95f2af70a79002a4f553fbbbf80a95e25782c0e7d25da61d9a851d8e5557b93727f9b7db75f1fe66895a4f04885b61f14f36b91f26dfca7d03a920fafef19ec0891eebd0aec82dc6c28e887b47aeb9652edcf627f043f3aad068e16446e25a0cfea9cb734c28e45c0c1d9e1bcfb53510f9a29d2bc01789d086182a94367bcb56e5aed23f3ad2a537bff67a205a77cc48861c7b834415df6421bd1ce810aef5ec93c9425c4e7f762f2960b90a0609dcf009ec172542bece5cc00ac17f4f5df549879b05435fb72d1c342f3015e484c5ce80568d12e382b5fa4708d64de57fdbd7f8a086ee2089acf82fc016d477975a76383addbe90e869eefa347cc69b881bd0f146da9766a0aa11882fc5c28edb3792193fd359686a910200b318113a7db00313cf0707e8f57291f16a2ab4843411caeb03a440321113fb08d8c2e899f8ea10754ea704c83ae9e3769ea5715fcbf95bfdcfb0d2fbc0b67f2d26b9c1afa7a8ac00c4bdf69678df7b350d0e11ee60da70d3e3392cb533ff5bc77c5b7b6423c7fd54cbb818753e68fd4b530ee9c5a4a3a030bd317b1f75d6fac1104f2cac5762f077384dfef7f77af67dc3451b86ab8786108ed6bdc460faf2987c7a029ebcdede7330b6d08a5b14a22838f433a310c79ffe0ec824500a638ccdf55c969e4d5605d0bc6f934bd4823f127009fabc6c4955fc96de94aa9726bc52b291939111bd4b72320a4323d5ff1cbdd09b5c115564586676f31e9852cacad8835565c49e8e2ff38e3f8fcf6ad8d1ad89b8ba4a387d0ccce030bd461e85fba2dfdf0b7f8af14d8d54f39b27322083ccbd94a4e1d30e8ece71afa06570758830388d3f91685801186d1fc7d3e9af2c942b5b0711c596783ad6a458a9102afd7cd6d45cf32c3499dae2301993a9a093539418da93cdfb10b47bb4f7cf9850d62faa8bcf951b884595b2e55332bce1bea0c768e6121375caa430139660148ee192cb0fd36abdae0a8845028948a9ff32fd377118e92dbcfee29f160b19c65cc881f25fcc72e006f358a00eed0da08a06331fc872ef53f04afeb066b8f909166d4d91ed1ca63f970193a27bb9b9acb1253dce3ba467ee73271c4c917f5146f5c946a273b068cce5ffcc8a85f465355c398be3e7f2baad2d1ae82e321be113a399b57ba83d01bf56245b6b8f75247bf9535770a5598236415bfe6c78ae2a64db35b581cbf0468bb74852d171ec10b42c24c19572665436b81034deaba23a56ef564389400003858f769b5a872a6a3605a91b50379955d692b256f0963fa8df87641bbb7ee5a0b83829cf04b20e481892cdff186d4fadf5f7c104114e1c94675eb8c05f9f25822bd168a411129b3e68388e686417b24a8a9e55af7d20b6df59ff5b2a119885a2e7a32ebe72de3d3ce4f56aa7fa0f43e0da3e2111a94f36b2375fa857734af8391a96b0c1771c31374c15b36d4d63868db993f0ffeb1c37acfd45b468b632eef707adb2aef68481c9bf4e82ccf4be11b29d8106a4a232c42615b1c6842b871ac7557306a6a9c91483e6870e09a3dbb7b84c931f6e7bdb9b9d7406e86d35c0e837ef365b1ae4b8fb872c88a8e00ff246d9ef1f31cbc8c15c3486f15286355cc2d55e7fc4cc0880bd7900728b795330f4de82139332cd63707c96da53bf6e075522a66eeb5761b6d96366dda656d6bae89ea6cc0ce35e9349fc286a1fdd7a28c3654331a5b3010b69c47bdc1e6449b7a9aeba3fb7d3ef51685642f9d2f0b955240a874e7bc5095e6f54023dd2321e4d94e5c03e8f5a8b15b2d3d841c796e2a12af0820aaee4bd6cd5419bbc0129ca1e4d778df6f3e303bda6a8164df72750ca94490b6c8f39c55a85a9fe921841466d5a9517045996f50d0be502604aa5d521a8204142807bbab8f51fd30110028a56d854c6aa72d47749505e46d2974908de8d2616c5655ce6b1ac19b2138bc78ec2dcb0299d1be3b4cf3b4aa7bd6c0fe3e54aaee83ada8c67c1c7688d8b406593f50ec95eab4f9a17d79dc61a2230440d040d2a442bc69462810b5e1cf655622ab4265ccfc0d3f29dfa814a278b8d8afd46aae297245c808cee42b3221e5f2b4de1eb1318d8b9dc58ba466df3eb3288241159a7012b2a437f35a073a15d8a6ce923c20df3a4db06d86b7d0c7eacccea228477f24b3bc0e53a7cafb151512d0369689d319df74ba5dbed17848d6c12eed1e31078b50f844183f0f9face214f614c29356b0c554f716c9c7f5984aeba5b3be5f61c6e11143dec8b04c852928e5ac438739ab8a5624855b38cae27e927a501b3741c2f76f0268b9705e416abcdd418400fe96d878d7b1c4a12fcea729c90a9ba13aa1ba6dc01dcc9e2292bba03ee74161ca0d909f680b71ae3fc03dcc3e326838348589bbac7288a610348bcb2d59e5655efd97d7f9bbeabaec3d6612814d787ce7ec854c8a101905727bdaff747543738712f86d30733c1b14d0178340f587277fdc3eaf35172db97b6dab9945e205c4e2f4591227410d6b6cc8f3cdeef5a79e8be2ea8e3b7a95893ea63f752a570a7595d0fc5527a2aa19368fe120600d6581b72127687dc4c005dda4c5f3c27464b4a06e00f0f25b986e179abfa2bf2c7847a96ad31a99b0aaaa5a8ef438950c59e3910ac07b0fa58ef8b3560dd0d5aeeb92871455f151518587f6eab1e10a1953f8908ace30bbf8a578216565c0d36f097323643c48f2cff61088f25e892814c9750ba4c4a329098a4ad7c593fe3bb459380b84e9e671930bfc833ded604449136bade903c54333cc25f9746ed0607f24331737a31a8051b7c2edf05d1890b01e67269d5795c4a86a411469679b9a0ad18123dc5dc1ff19e6a06dfc0780c28c7dc8731a05be0810325e902d8429d3e2d038e8f1798ce4d61d073f78aa4df371dd67fa0391281f5663182bb6b8e6f93fbbaf33fd81711d2856f9067c31806c4a2998bb237c5dfd4c15338f64a4284fbf6e0a8c074ddd5579be697c44f6047d650546fc4755adb590fc2735e912027ba076792ed7c28b77fc0ce6948d6a943a653cd36634319488f65b4946648db393eb0955785d853b72a9f9fdf8cf601a556a43b9dd5f76458038bb1ed0e4c86a8dfcbe50895971b6d9d6e81092c9a19157c69cef4bc06f8c1ae4aa0c9ff294f4c090f02babddcbe7d07ab68c91a1feffeb2177155e66a9bb20e87bca2251488183f568bb68f27c104089f4a1a6deaa8001370a5782f30a3b0565eaddd0041ded47764b105ab4884960cbf8a7f48c058233bf6150931239e16b848a199261eefcac75e6b0d795293528a37afdb715d459600094de62eb8b0414cd095ddbb06dd40a515773c5194401a41eae1f9549c7000f67ffb473829f4e6851e15115f54e060ca0ba601a229f799edc1dd88fe97434a859d20b208e13d87afff680f1f82193169ca7521f60939e2018be66ec29c44d73f8a4901313a31be36b0bd6bbec45991cfa2e791ae51d9bba1ba6258cda965d4a01cd92ceddc45bc4bd749674371ff057258ac2cb553a07677f1ea062f450a33bb99c6554a3ac51f0cd4c79def0da205596beb97985c567daeeb24bf9dde70fbc7c5dc989919da553117a48fe40995b82e8aeeb4ca6ee1913b3833623e447cc8a2038f366beedf371846642a8b5f4ed078136faa2ca3ade6d2571dbfc7c639aa32ff4dfe3e5a2f41ea95fdad99d4a7e4af762e696012380328a8031459c8efd58a6f678092bdcaf300e83e72c749d5768ac201486312d62acd90737c19795634263b4e8efcf1c34f55793ef21c8ff038e16aeb67fb56e19daf751d8072819b2cb8d9ef5c9abe6a112e50d5a68bfa0dcc97a758fcbc3f9edc9eef4567d534975af0711d47641aaeb69ab56fecf153b4b529245719248f9878999ed405cc955cf8a9c8bfab568e8909658a1d8b985e89c81bad41dec5c93467b6efd45bb1a788ca83e67ed37eba2fcad478efa7f1ece2aec2dac4e07f3aab0a1406ea7243c2330f34f151ac295031cd24c76d75733df7a680debc99caea67bfe1cc7b34953993248f76ca0fda9e0c47b37f56a62e321a3f9ec5d6e0d3d4af380ae2947b49cc731f44bc5477d85769c86cb16b20416b84c48eb6330254da62b865d148b0190e7c3f3df1bc32bb28b2747eea1715fc7c2cb48fb32d4d1412f8a47caeda55d1ad9521869949a89d93c934f0e85a657c076fe6e81364493823ac461bc32244aba46c0cd186bc099cbfb544f902ca7a697dc6455562de81486244cf642e49d670beb19bddc1aaacebe69b6bdf7db6a2e78df7ca7631fd739a263dd94697a00f984f2d53831da6310c26d23d5f2b90d8f143704a9bca9f3d3b35f9851b795c3ef3a857c62c91f58d5394a17e5f2032751fe9961111c249db21687fb782f760d125c2db771810cfdde4680508ea3e4e588a25a9c7d7141766975ea9cac3258bcf26322d2e9e5b8383f717f31cec80917cfab06e3ec36441b5b8c5e23d731fb668eacda8781876a89f30ee8d434c086a336766b6b1886e8b55632f8b20a13ecd986fef741c4b685368f8ca6699bdce05891eb1029f5d67c7d06e58c993869b93ffc2f15b8edfba8a777982b0d44d9d64c43b447d761dc88408227cef93544c9e46ed9435d672ce9913e16eb3ddbbeacee8de63c8db70d0bdd4b4390dbb0c078cddc2609bfdd30ab6dbf8aa4d5942513804606593669e80a3fbee5b83a49a2ca421909232de24591e8582c7046d7cc2fb3c98f83e2c20923d8fb3f59361d10a621b1a51d64c9ef40b54280612e531702d3a151394b2e37b97f0b16abcad7fe1e3b6abaf54e2e339d89c135c51d24ebcf46a827204d6c77db6558d1da4cc2bcbf59ce2343ae746be4e3755e1b434a95658c667a83544e97d66a8da8d6e10e85c10814bc6a36b9c29bc2744b6d19321f027aface4306112a68a96a259f2515fbac583cab90415077669be04981f8de3a9c4bc61121e0fbad004d6869a783201906b04f77c2be4b432e5a128fe0c073d9f9c7e4e8b1b61ba6252342b5869d21ec6242213360149162c78ea290fbc1cf08be16af4f1cb4aeffe6b3f144adae08290a2f668b6f16ff940e91ee5986d0848da11446d1a47b82de3249fdc9b2325e7d3e0880d715c9aad796c4b55912f217bafba262844008b2860a8f8c2c8f9079f777a21464a820d2b7bd52b7994e61f932e6b8f538ff1018761df932ff870af12983dcfbc78c799bf663b6ae457242c028e09c62fa0342ab00f699285543397294e15260f5a0634250e871653bc2a4b785f9d5cc912a86a375a6a23892f44d325f91eb832dad3c3cfe2dcf6d40587c0397d64f9ec4719be43a5c6a97dd15bc4b81457c9d504ae52c66e4e025aa77b88fa372f7a5963256795eb93671b0000198a5d8e8c8e368ef8c989c44c308a8013e136d6a7df64fa5b467623d052fc166d6487b795615fd871ea2b9def2306147555a502eb44576cefd641095ff5e7cb8061322d42cb84e1d91226f90daafb59b3513163f1b33a05c7f927146932a088300f933b3486a2c9253f251c67b86597ccdaaeb557423cb171a8b90238b8753a6df89dc713397d888e9e6fb24e7106e28013f875d1d17748695f47e220f170786907083e6c985db960e8334c232d296b96b4d012bb3e9b89cda6d654f0c184f14087f4b2cf75fa1ec920592b16dbb755c5fd9c8622cb05a68eda2995ecea5be09644fc6515a5c556a47a45d229d66e5a29519d2ca32e9bffc108911b48db7a0ad17662908d898376fdfeb5dc19e754e8065c2dad24e172be654150fc16f2ced7db88440eb31439c35431b577349eedb3f2c4df9dafa2f98178daa3afff1e4531cf588f2e1924dad5afeb9ccd96f1116354d57303f44c57d10979209313dc44971f651d15e4f7a510e4806a141aa953b10823536d7eace826eac6c567be899e892449b5b8db5dda082564790f170defc5c59aa1ed583880201aefd339fa6061c82cabacee737c89462bb365e00b2074aac6b413f44246c3c48f22a64cf8005e517acbb9fda9ac8debfec75ff2bbe68de01f076c88015f1a4dd3a6f18fa97d890af8e6b4c489ecbd17cccd83563f795bd81f2c435786d728555306f403c85783cc4c44486ca0b16e665d6b03e6d1dda58b8abe27c3051f9c8e2f377ba46050a1feb4fd0a87a97e106a2ecceb8286d5fe5646845c5a841b8fbe9dc9f4db3a0b160837a1e45d051c6590f1ca7d7f14ce8b73768fc9f30c681660f5e1efd23f8dcecdb0c0c14f5766a2449515bf3f428faa16745cf9ccac24c7de2a9a031b07b75611d2db257bf0274bd57c307a1c618a0b6c3c55024a9ba8056f433b19b93cc6d599eaff076181e7afab3069e3e9c8e3495a0c5387c6f980722c9eb4a9ee3e34315ca543826246618428aa6b33972c001f3fe6328e17ee45be46958fa1dbc2790f6946e2a79ba60bbb41e18ea422d5ee8c996b191109377c2fd7463f4d9b4ed50f1d6b09782ba2f06a6181abe82628b3110e263c156666a74ad68c2b4088c68a3c52eea3fee19e3056c854c0a2a1ac2bf599105a659af26eb1ef1d64135a71472cd314b99a9aefcc97611567a4c37298438dd54b0c2f12869d4be9d214ffb9e72addb9700d1a9b44a6ac97028fcfce7db380d9fa64a598a6bc40e2c1cb7b49ef2cc35426ff911d3312043a17794a95982bc3197bf8d5ff854106a8906a1189c6f6aaccb7203fe09aae0fb99bfce3531fc8f2bfcbdc067b3c4d3beace5d6d775768b8b746ba14d067279dd1a3c6c9b24febe76999760b8f457f0e3e8190451f1b71434dd45b8267be9566b95a0a5c29d990980d120cb8f1c677325ba54a0ce59f1407983e3267942e7debda67a4c761ca145e626ccbf45f6349c1e08bbeed6e86469bb6068ca1d1ecebb34752c5a95a65491e598e60bd5aca2a546d2d2d7117d5f3a5ad3b30a62d1e233c09cf4b79e11247412fdbf6571621953ae1ee8cb5eb2ac6aaacda10c5f7e9a7e6e228ecf1ff8aaaf44ac95e2567c5fc436daad534755dee7255af9d00a0f87f523b26aedce85218eac089286db61433fb0faef16783e14c0d045eb8c151009f051bc6ae81624b667b682539bc18b02869fd2bd9e21496f26372b8bd176e5f5e2d18e80bf1d60e23db66969909e161cf1d2bded7ffe6c839df219ab346fa30cf2acee5f061b7ba46ad6971f754718670cd08ea6b7966b00cf6ee209924b6bf128ef5d24480f8b9b1045a0f5dffe0eacc1c5ca0826c01d485213aab0898ffcb5915b12da8564c2f5b456184f02336ea92db891244845e7caf0a588ee8fe386df468ecd480449052fe650b4ab00d3d2f1aab7f6dbb09bdc9dfbcb609354e97ba1d143cfeef0d8670d0c39915ca99ea0f56a39683e215eeb00690ca49ab77d94784e94ddae31154b0758bccf65ea24677d5e88219404973008bd193ac0feb8121d51ecc416795da27fa70fe847705a64cb20a7dba920722b2dd9f1d802df8a7b32dacf6b55cd4a576de4ab10bee23a5d0741fb339e519349cacca6cea7501a69828c15e667231c8920ef2aac832effc3aeccb6a44699a7af9aa35ac8fcb57f8a1744d1098ff434230da38527e3f897db3cfdf5475434355e5c6d1b2ff33b9b90be860886ba2f622cf68d6107d9305f0e971ecfb32c38954bacee722b87a1d3a454eef8d5a0f21d2797b736b76c038e77b836f7b85813b46acdf923d43223bc125b4fe342f6fe00a596153eb2d1a3502bb7ca7895af54ca91e67f699430e455ca35ed86f7adc15fb02470a8b1ef312e29c3d9c0729261d73204c55c00545d31e43e629b45875e3f36db5056ded003abb82fcbcd48f9fccec533493521a30ecb4fd0709500dc4c14ca1e0cd16bdd151f80047cf04f7d36a2f600585443733a2f9ffbf24fa29f435d58e3605411b8c68b44096d051e0c033a764d9ae6a9f5cbfc1040b06845c02e29f9103800c5ecb79569b5dc3ac55f8d0a3a088f25115abcfb4b8c21ecdf119af88f51eabba5e0c97db4269921bf4435f2832a3ed189bec8c7a09d6d32c4437cb4709d9f5d9b0f3b5509045f3601b69741b8a5bfe842b5dd32aa51f0f2dc8ca63319388c05e5c70aba07a7c5fa7f9b93f6850aaf9ceef08b27b86a17cb03b95d5cc0f2683fb285ff533ee8be397db1eaffaeeec792417508c642efef9e2df2012e073caeb25657c713c1f5a450c38bd24f772c12e52a4888d66902ab9ba3cc4b40ad676d659502be8914750b5ddffc04c1d17bc41ded3a655923dd36417ca31b7f48d1ce6ad5196445de532c400196b135176d65345a7e626160556db5a60660a73c2795aa0d13b257e384b1a00328554c01b0242147379b1ff17421ac0e15b40daafbe7b3214dd29ced07166dc2edd7f90ec414e75345cc717d15c25bc97055dbcbb241e92bba38b16e0a6234ad8576042222c379e0a9a11780954a2ed486fbff3204f865929105a98c5e95e8788e80455ef8348acc4b765403a819bc0aba943a37dd181344fc4e32a99bc217d9a35cbf604eb9294ee7021df9620998f945e7712889bc6a63eb29095a821a40aba7bc7f77cc4c276d22e8155847968db98b680592b81823905a4914139e735f0a80252e015fdaf2dbf8cac971a637d8f217ff42682e1e21baa991d0c5ac7d514bc3985a853d6a57338171669c2eb8fc897f8ac212eb81072a07679641e69c59084ab083f2922b804f79c0212c7a03e0a96356aceacb5dc5553d4083a7c5adeaad5ca358c7d9f906b0fb728bbab93b4f74b033837e9312d312724bb7841913388a41027e3ce771bc2aba405df34a7b3532270aa594b3716a07522a613621be58f111a8df95b83af5118564394172511d937dcc68fbffb757b1ac0e0ff51f154570588fbca322fd441f09395fc0834fb65c3652f834d399f4a71931ab4a4a37a2cd33f5c76c4c8e3b20c431e0ef98ed92093036e98ff5a2ab752549dd0f5f96d52d208fc762eadb271fc5a2279f240d8a811154fd1303a7aa0f777f7429d36109fc10113edb703ac1e703f336290bb159b0f9a5553415af21e7152bb8a7617cd584bcc646b15dc2d963a3092da5cb189967e53d68450609d92c8ef62a3ee4923fdfc7a823044a12db48f0bf91178238790de4590c3be63354aeeb9ebb8bb6c28cb1f2071108a144c8e1149b2408f6fa8c8cb73ea4d34f68b568bdf7fe2d6784b16904844e90ac42a6b38681b6f6a27021b452e7a5821d4a79f651d98ad8c73c8d959bb04be8767af9700cdc7fb35990599c823b8548417baedec489a4e233dbe236dd32aa48900c6b76a2fa8375f776c12a1578fd6bb598fd60788105d00e5d287f6eb791ed8a070fce44e5862001aaebf33f0c002a0d4948e3ae375f163b3ee8632c8384d2a19ac6b96703217d9dedceb5d61b13594edc74ea43896ca02b6a9678018af5757129ab950c4a8affe4d6a58064d570de39521cdece092e3f31433315dc203f7664ba234812ad6094600cbd5e0116661817349dfe99138f1d0e94ba7432689b7077a220bfe587cf7533e9d279b2f10b1268683cb4257c4e7a653bf45ff24d916a6a3eba177e91c00a722818a3f9f8cbb4463a0e4bb370a8c4d859ec3c502b3c2fc1469186200363da27c5c7dd7a9889e23f302afeffe5225cec9aee6c7a0ebbdde1a32ac076958a588bc47b48a9463f279db38c30c010fc92f3144c38f5d4b667def448d45e26f568a557ad7d7f4fc85a808b2a5787cd457991b4a2833b5529d5859df72a58be1380236bcbadc0be6e270a6b7126f426b8fbd3572bc674160eeda935651699dee99f25192ddd58850bbee32a088f15ff01e9de22dac3479c216890c9e0487319f01e18b0da0256b6362dc06e6d0d2144b86ded0c039581073067fccd98063613b4ae2a88fc23c7e90dc65e04d3b66b405f60de553c3fc0dbe0d87c3ae070b0ccf31b88f83184a79522d7412a38e4f305e2e46c4c55047997c3e830743dac4e13924648c59cc40abb869aa8a56b07bedd1a5243a294260be0a81fe8a0afe003db35216834dc9fa32f5af0ec7ae846b780894f4820b631b52c4565e4cbc1e982bb6e4f5da95efe8bf70eab4477eb635501012dc5b0322d41b4b3e94d28c1f049464a40ed9667d13b78d1fb26d12d22a1207159513725c8b240bca6d697efac965dce0ac63f4ce9830d273b847190d8ed2993b831f31767c1425f0db45d9c3cae75956868d884c0122ed735f079947d778a02783f8ab60530abc698fe6ad7dedc3bb5f93c4ed7a4a30e883654d28edc35b01d51cd535df8240d629be84dce91a82fe8dc7bcef6636b7ebb8af9c796798320fd0b8e8a64a02c820f8f0960e4a3bc512686ef7c0fae4bf88ef17032c8ca6a7edfd1410ea37559fd0b5321f4ff6b77917bb135f436f064803ec8150a528a9c5f9beac0002dea334c8403ceed6d9910eac353f7822f1469b48b13e7c109f818061561736b7e16affeb085140b6e959fce4bf0418a1939c260385b0c2b478016e37a5851d917bdd65a9e8ccc8a1d2289bf23e9517b17d6f35b2536535ef0a1960172d92cb924324e05a3a6b71462a3a08c7a24f75f8b2dd5b0691836ee1719864649884e17a38e6fd0ee2843ba98e83b9b15d27a234380d9d1edea36195d288b2598fd77423a5c3a49bde889b78d597f57890c53bbc42ca6919910c6c61ad5a241a8204b7fe722d9646b524f1a248d3c444dba42b0d5ed6ddc78dc55f6ad1b8867698289f3485fbe9506ed5893104754d8984d1f08e2553b2d83ad688b06af98750fa0de769043f6250323681ca2a7f9e2f304788e9af8726b3dd7181300b6a86cb5994dedd9240d60adf3a3653daa8ff5caa0857f6716a6e1ef8b78fb2cdaa20db0335b562634726c1d5759bb8bb48af22315d4787a343fb5d06d1b8ad5d04a8026f80b1e5cd6995e09aa5c3c6880b7e71167fb44d65b4c7d4674e8330cb3bb31ecbb677d8656ade4c49d386b20a0ad54d7a0b1952cf1e98f3da9f7cd0dddad1c36e303ae9baecab112e8b57a6c74a542622672b29648cbb969c3335516c13c3ba18a8c2dfa6b263a6584942836ff899339be6facc2609976f9bc7eba88e05a0423f1683cbc1b415f62ad90390d976ec75d871715f54018a0a6e8134fda0ba690d0bae9be529772805f9bfac50eca1446c27eb779e17ad6fe32c81854270bf97c19426ea348d28099a4e5801ffcc794d9baa030c19d29ae13fb2536a76d8a648b4a0af05dd5cf2ab5bc9b7d23e29de3aeb532c7975642540d07d64e80b472efddeaf7491dd3466a5246b02b9b08b5b24b617a97b5c603073955239da12fa1df27f87d5d95d9bb51c31b00baf170fc084a9f3b2199881c525d3d6ea123b9944a7664c52f91f4970e38d28f15a686e7edf213af616bde2baece6c6f7e8bdb3756cf0976e8f5a138c13ccb32f986207ed80b6b890dd9d44f82e4654ff7e5c10eafb00b16c12090363462b2c86e834ffa45507e6b9219852f19d6b033957ce92da35177cead404126592a6146fb32958d8e195509d9beba11ef6d9ff90ddfcb866c40694239af856e4c9466875722c064dc32195b2db7647cf287dda183df335fd64ef1808a50350438d109b0a0ca527687723ad60f73b70763e3330aa3a2f12278c8d2c4fe5bf1e1e655ca40c7878b2e2da28956583a92b5c2c26a8a7a76db8ec8a4713bbbb946987a2a64621bb7b94373eda0195a0e7133c32a7d960e0f415d4252a716e35d994bd4e205fbc4e1c83cd84a63db95fde7ebcb11415c59ecd573758199f1c899a39a06cdd74ceba6949b3d819a119edccb45ecfde3f10768189c9dd3bb9ead8bd3f10719fd936c34db79bad0798b8b7e034d38caf20e4eaa6c1b69a523ec58860df0a825d5a07a2dfb3fde04d7cb849f99ca7b2ff25cd7dd674438f76e65645acc4b37e90d1ab27098ae699a1c26dc7ee7e3f9683d07e039c0c133b5d5da3f1ec96ed4f5b7a727ef7095652b086185336d7f17753e7a98e1bd51e5f3507dc9a0e61c65e0bef3b8f10c78fafdd25e83129106a96fb79a722bb9a9c4b8da8670c4ab5015355fa959f1aca2028c38a7e42e538c27207ca704d6131e0527737443c1444d21262e0deb85619aba9193be6efa4d9f85a7cbb468795dd2f15708ed6ae4c30c58d77ec593b724e1103e8c6e9117a66a3a466558195ff240971db261e690d3b58804d6f41da90ea0aeac4a840948db29a355107e35f02835ef251fd0f9c5f1f0512dc0c8b34bd3a4305742402723515f44f0c8677d8f390472418a56a0ff2348b8adbf7d2587d464eb45c5d78244ac227cfe36e0fefa7efcd4d3c79c5b58cea8225364fce1ac276b1bcbc9b6126c14360fa6c008dbb820498d365c77dc675f2098601803051528492d2df492adea51e1140ff2d66b2fa0e312b6e381ffff8bd76a0a17ebab5c81f12f93157300409b3c621555b198f1942467d4c557fd36b39859caa3c402db7b6cb4c49a9298b975aa328f3f288d6a9ebfda75a71d862d770c4264f82e2e2cd83f9be51419a488686b1f2d37f9cced11fbcaeb37c4e5109bc1e6dc88830227d1102f06abd2db1b90b43f4aad183dbd1339a9433e5e4b4bb14f2abf4daeea2b83216c09ac1f885a36a4169063975cb370ccf3867db7c385d18c2eee52b5ef15755b2846a5447fc64c3f09237bd8e575512a6995af5e078020eb0c263039a9091338e50498e01e7b06c07e8e5ceb0a66448c1b764dbe575145aaedc1ae4ce29e48cd519c99b8ebf4e2a528fa60b08951269899f25a62ff88339a3c9f7170c5b15a2181bd503db8a4496694ac00f981f412386d930127e2c2eeec73dec764e6c238a93b0f195376254ed1eecf0b928a1e63c7deedfd0f6ee531dd1469746792e7711a2f1199d84a5c4c6fdece2f152bc9157760b57f6d0ddbdf3da772e1e46e8825268d6567f96798f33afcb70b082669dcb81101fcb0fa9d5808d22ae0bfbacd9d4e9a35ae1523c3c2b88fbc3107d73bed65faa73bfd7bf58d0babb2630ae76b31ea75b9b2f6f53048f562d909f0eb75321b400e86aed94e9a6b809e546e26abe7a99e60051540163754f578d169d75dfef8eb29e6b49278c1f1d6e43e574170048844bb03eaf630db091eaae4033fa2fcf957aa2119915f4181574a86619cde87b505462625759a4ebd63df74193465b2247dfbca47741e7976307b671a4e5e772c16f5c7ef91f07c00ebd3126242679f076e6b8fcf18e0904f44ec22f00d892ce10e85c5119ce77f700e43a5c4dd8bc9fb39c12b8c10eeacc83b1ec0efbe757ba0de2b453f35320e33cb22a9131eb7399a64f6225d2bb87f39b3967aa772b837391d53692cd030762292650f605cf354ac711c875dbb4184ee1e7684f368d9b53483043ec3d0d3c30abfef07c279128ac0605d5288badfb8f1a2c37dca8a83d6229d0d68f67b38048c033258397fc5b7426b1ca7f5c5dd49a9eb6de094e837a7cc3691c417114e1919bb88d90e0ab8732451bfbfb18ffbf43586efcbb258cc6803b151ec3e025c6a2d93092f4f6fd30478543471feaa9d69404b6de3d39e0c625f64bc0f6a4fa7fb8fa6dfa48d4440e9320637a423840b5061be2dbde31eaf27bc680ce7af95cd52e43a078f60baf09ea6cb862c3b3a00eee555c20d4df4a07d070f54b3cccd4b37c45e26cec03fde0c3e2586d1368f6a4bd02535e0e2ebde4f2a10ba73d6df71e171acda974a534b3e0cfa929c09166661f6d109e41b4fb952ceb2e6670de82166268ddf7b298b8e233474c105cf264edb75de384bf4bee3bd431cddbbb0f946e5aded65f14bab2b657c17e7c0e6abd0ad8b0bc4f1485bf5d0fdec5174fb2164c1f08af6b98a2c08b4f4e536d54048c9bd99949c0abd8ab0da93083aa0eff6f608d382395baf6cf67699ff56c274bbfe5520dbd6a7cd24e71ff481419232bfa2177590722d99ca9659d0bd637dae2a099b212f7acba9f87766456160ee6ed63be59c635c20d4e26f8f9c4a94b4d2f7332c2d16618f1c590b68fe0c224842729dac33dd06142a4756dd8ee460c3d3232372599737867d1ac58bc944624fb5053fe1a140b4dc55485c86d8b7beef58ed36d642d9973192d0a06d75902353e91282cfadf77bb5c96595a16ac148bdc2eaca2c0d5b3aead87622708d50f18b7d6bd2ffe8822f9e10a55407099c35d6dbca7233be6485c44cffe87d365d5c62b7f57f4f6fd56acdb7c64a229c09b962dc65c8748c219f88ce01f402bb986f3529693b36e18d89664ef92d33426f02c8e2b5b7cc99600600e401f20c9a5dac3117cd8ba8acefbb56d1f9c3fbba50f82baefc38c9024adfeca716b791439d1e4b4febad7a92e35d74ce8e5afbacbafa9afbb6662c99b45741fc061555e56abed4e370b11fc25ce205d608e677e069976c52ea404ebdefd7980c26a3de7df8af58ed388c6e7e2fb0444e6d0bfd291db1a37568ae0fc76eab405b851043d72b71736ae276bd5c6f5d60e8a72d96820aab8e81fe5869fee045f476077e597ff87b6931c1020221e5086ab9165dc45a92acc3d19d783d88a2b5bd584875bd26305d2ced71d7f9be926a1a53447baedfc35134c83f9eddab3d9068a6fc8d5e7b9a71c191bb6ed9abe4c239362b32d79add670054217ba6a64dcab57c5f7508c6449817d304fcdb69e1bff4610542c76543592216bf4cb3fd1aa7bbe2ca3e7c55b0ac2f8fa10ae19d8a147370d51f6fcf4aa5834bcbcbefd0349c07553b2cf404c6d767773559a917c62a3bcab6a9ed6ad75e80e744dd2e747a5e8a5ab6363131cf46d8045b36b56f493509e559e6cac2f623f1714df05203fe0baf5bd9050c80ce39715a61e7922e16180a4341ba1dc3879ef43e40ae87569f95c58db14de0c359738262f89ca1240021b458c4cb8f840b9c17a9d860215c1907189b383673a2e262fa2f310a68d4ac206b325fc7222e09abba4987480b81a3d866416944919a417a0eb572c777133c0ad4146e0e5c6bd6325517bcabeec0ee2a69f5388a9e60f4597d0253ded3986d1635ae58722bc7ba4a1c0378085bf7cdf1b45728e4c8e991ac82aa123e45174183ada91fe6a5918a45d9a1682f1adaa4f83232727e4b3f2ec3c468e8919dd22d760cafddb613076e1fc6271944c7045beed9a3249250b6e56a4151b7c3aa400baf56efc27abd5a20d06adf75ef9cae9e14279c9ac80f68bb8643c44106334c50ae9751540b6ea8978d9719497364e06eddf6893f75066cbd3bc527b7238a164595b5a99e3964e473c87cd80e828713bea5a2bab909b9442ef43e52d669efd9e3bbb22cde7c1d6557e5fb171a286dc061a6b08287a3cd3f97cc92ea489b9aa93390a16e05543b68495855d8fb5670362db63dd5ec44018b0ca9c6803520df46b96e21f75b24c41d953c10e41415275afb91068f7524e506eca55cb07ffad5f1904782cdcc276880e6ee69ef6467b35b3e83c6e9d19ddc2d3e6150c26bcbcfed1d58e444e1aab560f753da5e8314b0779f0ec4620a2f805335f14a4135f3c54162aac5e479a125cf6e1f73b60121e2482bca76ecc8544e8d3f07113228f0ea7d4fcffee15cc3a1bed9d21f58c9ab2bf04ad392a22e6e26ad59fdcbaa2ddd0d0c67ce9095e7b6933ca0e586087c1f4a1b36c8e3277d495eb2c1d8bbabfe20effd78fa68bddd42a937b2130c4978274807222f28611d5e9595fa36b27a222da1855f7794506d6868ad7316c49fa975f27a745465db5ab4ffa6a137ae7c3aa1a81d548208a253ec6f83abb903e360ee3bdf59eaa625061608e1c63ad16e73583424da1a5c7389f8f2ca64525d9261e089a9aa01ffb2e6311d0d73776bfc947152cc8b0ead53a7e96ee15923f0dd1f4cfd11329da8ae41bb44ee749853ee7cdebe723b92f3284cbfacf60666e5173b8ec581385919ad299673e318417f5e48c549a8788943b2e356849d02f65935bb26bfb014b295be77345d5fa3684d136f23a1f69410896297ca06266cc45ab9ed861f1ffc8d5d27ad1212dab68b907784247c7af027a54c0ca6e2e9e5c5996bfc5101a2c890d5e3058519fd8c0addf8cee4a98c4fd53823fb91cb29d82a7d3c1ca7a61ad6fd8cb30b4726d647d23b5f628d368e21bf07d253b7ae206302618dfef3da1733217c3bfe9c2ba5d83a62cc73d9e9c4b1dc45b9dca7ed78e5b59be243a4a57510fd9e6c2e18514b69cf12f3e8d6b3da4f2cbd5cd3dd03b6bdd5698eff1e9c8e797c53ad68948ea63691bd52633f7abe89f64a6c261ef88c16d4aa41d777342041fa9f660c54c1044b56bb6850eeddc710364aa5a46e11eec50e3a7303cf83d64bfef944bd2f1ce20a803312bc37c3b6d1761ae52492ca4583574a1693b66732602fd56928f9e8fd5c9063e48e55719d82a3ad1536f9eb2742b645b98d5170e11ef2f8dd9154e0ffe74c839d7edcdd20f3f51f9350143f9e5e466681a9ff1b1c78add4951008535f8444d907a3b82cd143486a8cc1aca94e828825a59e71771d90b5a002bd880dedbdc8b5c2ce471c3f4180a06745c26211ba21b92b477a06c5568e70893e8831c741bb60d946941e94b9fa230ea76dc7c47cf489a702f3bcc967e4ef665fec406ff7f99a622afd4601ecfa89941435d81f05ec57aefc992fd6190bade2bb1c38e8844de9d0bf68511c363bc2ac8eb714f0fdf75241775f6194b63afb7a31ac49323aec1c63277dd1cd6756a31b079450e49b326c9e8abf1f2e38944acbf03d7dbf250eed865a7d63f8435dad4d5f7799444e6660759640e755bff1e01e3f7e9e5e9e71383f891e7a24a5bddcfc5c7af430806383d92fd6b582ee6403af9cb346e8b792521cf076865d4b7fd202584500d320b1d981f45fc937b60cbb87b0c5b513e0696bb6789945dcc58bdb4a4c404bbe8377edbe20125621b678d88a30d6445f58b353c7911b93231fd2b9b285c3fc69e32a07468e89608b108b86667df79c7e0f109b5c90e4b5ed964e66fa61eee2711b9758b65334101391337d646dccf484f0e25e4b54cbd208467276d5e7ea24ca8e100bde3a667bd5d7109fecedd7c88db234e7b90758a2303727b9d7e871df5d54e5de1baa1d829daaf7e66c116d086119c90467439cb6fd3311f40d61fe387ca33d5821b66239f5be58b9b4e4b738653d3e0205f01543713ed3e559a595c6ed1360d704560b8febf8488160793bd0f61bd5cade31618299ecf1cea7898720d96bbcfa56166d777491d4f031ce4d28c7319fea9ee48bb1a3aa5605d30a8fa9f6ef736c0a49df5d335a9b09c81ec5ce28665457575a95b186623664428c7ec079b7fddf36761f19405fdf9ed690246a231c33b61866f527753f32cd9a88b1c84cf05ebee98294b8df82aa161da2654c86f9b8508697dd2b9d7cd19357b06be848836cd48721a9dd9983ddd3ddbdbedc71f296d2d3a6fad40f2b3b92ce8ca7343457dfee9fd97f7570c29018569d32cd7d2691ed940003facc1762c3931c7165c7d83d677f9f9968741f90e47e2350620fdd235e8e02fee63b4cdd97ff458b324738aca0aace1c505c79d5d3036d88ec1804fc76b0d0f4b7cb964fb4db9ec165277e4559f832f2027e6ee7d852810d9517e11701731231dddab22ca2c9ed998a6e960aba88c15a3092d500c44ceb526c405388e66357e785705dfa0027bd90e76e8920db113977daf62503ec02b51e78d02bb552dd577c8b84e99cad1cba8ae1d87a3f490765041e2098495964cd950459d6cc7ac4583190a4cbac229552db6c9a22dc29837b236aae13a4beabedf6eb7741337d9147d2057bfda80ba878242654777c4875bdd4fe7e28efac03e2789a476d92621c0f67718710ef7c1a6f8b46c33fc25f25efaac8b046261ff7f2e67895b57f6edd1414ac60941c95fcda0aceab43890f24a0a9dcce994447c8b6258b419106afa51db84f696e5df4c8209768b01f5c1f9da662f7e11a8e283b2ff4eb2869d27dc570bae9bdf4ea90dd4c5d4c6165768b0cb013529d3f807affc538b8797b93022a0a79ee625f898ee83cb0048bc076d46a4ea5dd16ef5597b49440a152e0b436b363e9a493f06c74abae1ff3d1005222cebbd1d2b79108a94a203b388203f6b5b8cfdefbfff65aaf5e6fbed0b7ee3b196520816d8ac2c144d3be137c9c66c1c0d5d31a4412e11ead409e555097e63627db9850b5e4bef435f817e84466f639112b797620565db0c933fd9d10ddacf609d9b6f482e8db635e5199872051b86540d10fca2ff2ea00b576d207b2d21c8f32d165946d524ebbe55bad5ca492450cde5dc920da9bf78b9c9f3ec1152094e93ac7905b09cdb29682f17b6d630d72b26d15cf7a767804f43bd17b04d3f28433e9ef9df05318557b8b340d3c0bdf4d7fc49c3296ff6e0a87719489d4a4d055aff149d6e22713f86229c4bbfa4f47112d73278073e300b954cee8fb576e87dd3e7688a918317fce388cab6904f03e5aa8467810356ac5be659cbd399e35ece04270716f6a3830aeb5c972a6e6d83354fd6c3fc6e597ab70f5083853ef7adb0bc282f7fb57d887a9a43031ca75727ddb298932a1e2ec8710fcfbc4fe32d7f7d445a9d28980aed7a29166fe825e76f19afe38c0aace79236d8d7fc2a01047b233fb924e519fbf4b1057ca694c0a73d6ff6b20c84063163102839508ec66beae53a013be8634c063a099fedfbc470d6b7cc302311c0d0f6f9c3bdd49ecc4a2677a41c8e14856176113619013ba35acc79cb983024b33d6882d5d111874602d7828f3a460e56955d919fb5fc02938dcdc7da14974c43150934b7efa54eb7bab46130da02aef31a88ef80a7849779a6a8c9bc537c70c965a75aaa8e3da485807a1c95a0c2881f356560e8a29b74f835139b91a1911a7cf9ebcde2e2e4924bf95d1b4f2b76849705229ab89ea6d83fda193398302b622599bd184991f88882e9b4406acf5dd4afc7ca89d4e113d1a743952c7ca35e63e33696831b67704abd143872948cd1f2987d666011ba833b95b27ccab40f986ba8452fa510d86b33141909122ab830a2b5d67a781ec9eb0f4d835abc01e2fcf090397b429b4c7b4ceda3401dc9b4ec722f6c4bf38cdc9e804ca0427c4b57cf817a3db7aca49c25765d04325028ef19c46d02738ffb3ebf4594e43168b2132d0340312e7e0544dbc6c1715f32a00c69ce2aa34675cfe1d06d5dbb24fda16c7307113b8f5ff282423074115292d350df1cf1b0ee281910e5c22bddc54780c53a7f1e44addcd1d2d040410558808ea4bcdada5d27770d45913425c0915513c27a4b80f23cdb196eab5333899e87a80411e2b287d86b0ed07c9501eef9610790e4e5294f189e2111973aaf81e309d82692a2a77ff72f456779fa2894ed9a7fb127b9e8370d279e74c21ec3892c1a7bf4136bc436a1a04c490c496aa5dfe49b442eeebd15623c299ac9b897b3fe24afcfb80b668fa48c0b9544fb2470224b51f00c623370464f191c3ec5277108e1fcad2f73456fa5a0f149ba6366f1b9558485c18e35d8729e6dbe8d5cf5d0dac1a804814248e699e018a5593a442108cb604f478470e055f10b6f8909b9e2951359172977c622bb722855853680395214be36128923aa506e550b0140271c87b6044529b8bab3dfd4401cea01a8888c0b9df196d5fc4a97a3ab9e1c39cfc825ed8aa9fec08f67a01b9647f6edf6fcd7807dfe59ed3562861a4f6c4355da26e6c5cd10c6268060daf9f2aaf35028f4084871c4c544d1b9d7f5d094ac0ed992ec46ce390a58353acc4faf0f093b248f10f79047505b31167c2d6f41ec80986b58b76bd0fee014a61a553e41aa807cf3c5683578e98f5b54f1be4d600817b12f4e7a31fd5aab9c39080a56aef7fa19108fa5d97aa2cd9d326c3a3eb364cac148500188de3c922db19714d701baec2c716d8bcaf7f97053d7c7ff88b87f316f3c5b0fcba61e65a294e6c5c2900fc3411ebfad2ce11886c7462b340cd0fed134fffec4b92488660c166e8f34a568ec4e72f7db90ce64215ce2f7a2a90c5db33a24c36cfaf0bbe697087bbeda5bb0b96aec880b70bacdf32b82e1103fb968f59afb61e2694d0b591cd633edc99e00dc8173541c2e223b4ceb788f4c434b46672741d7cb197dad7af531a595c155d24c94d3c29357354faf4b3ea1b5cd5d57d3cb313186f71f808884ef7192f0162f21d86ffc655ae4260e77db17a925a92b64887f2be31606c8f6fb514fc11bf17b568e53938a90082d5eb02bb7eea8aa16cf807461e4d8eed0dd73f7c3ebd42065d08bc85ef2c8d0988ce99b640397f975376d3e058139210df71b9b96b9e029438012f70a75d683e34540d70d6d482d7b3234bf522ba6d3a07a92cd47817c99d01f248c230e3809fb9d9e1ef79c1012031f70243e261aacc339cce34ee9cbc6922c5b6f41c9ddfdc948db6485016f0111853e4f71be0bcd313459286e6f3999306bc83b0a0f5048c8e226474b0520fbf120215f3080fd382396ae95966828f54b2b9809a6669f1fc2c8df6dccdf5b123e5d7513eab31c7ac23b8c1d3c23117fa4e769aba1f62942830279b3f5d7622aedb1a93462a4d64d89ca94f0bc44bc27e0414bc76d5a10a8303604300208f121e14ca4a3922c787a4874f31ea79a02c99b42f3dfa69d89ffa335798843a91b1d84f6804a89d252efb75990f3f70b75ff5881e2ea7a4ca0f01ada9ac3aaac7a0d88eeed7d1cd32457411e71a8112c3ee8212dfdab5a1116255dea0b0ad35fc74c63a8860c9f4046941620c4fb7495763368c44403633c420a08c0ee452830a9e329c5a4c1dffc4b2f69d439c6a80c8ef4ef52a2ca8b45ddac82d3cefdf8e7671ccadccadeb59e9aa3a91288be1934b54e356c30b6a213514bd8a96ac26f799b0c1caa0cfefb9f9ad1d456c7b8cd71fbf54b9493fbcaa9fd1f39fd05953c7b4327efd24b0054bd79daaa4f6569bc14996aea96564ff456105afa4d1714b6544c4ec1d8ac8d423aeba0789d9246038f7f7ba42558320686a148f1ee5ec8e19892aa6202a9901208a17ffe9aac721933c435b212c36d1ee6f32cb796df56a88741e7d0f7d5ec2436078d5cba80ed585c2e27ae41be06fba2b8d1a5e307cd8910d4f931fe6299fdd9c37f3c15cb2466a9861f472af67ee51be55ee5dee67454cf345555818aab849fb03f5503bd463e160a32e6d8ffd90e250309df8329663bfd5ce8ea10788d6dd1b7b42844183927f6031cf047ebd36195fbdf8d09b62687c3135c161e2187552cde4d0af4d6c8c4f6c7c76cec6f72bea05ecc17a13a0467c288c6d2d62f86f6f60a1224a2c4f5bb42ea8752907b693b7f094e4fb36bd684c56105ea2c18a19510d018da09d55227533916d7cfe27c286e9425118f71352e7f7dfd9e0343c8417046eee86367faf58c3accfa0966b2353cbdf230e038d501a5a0e37c95d7dfecb0e446dcdfb9b5b816d8bcbb7f03307a92f8336ca1623f9b80ac07979c175b0566e3d3e058da92c33769dd6b5c172f81cbe447024b503d18f4372653e2a0704075d158f055d1f8a2f51b87a48a0bfc1128790e8893355488e1325e1965757d7d76a26743259d046daca6d8279cdb300cf2bd79273681432f64d8db14d3915597f50b9176386a275d16ffb772025a5e3696a7fbac01aa0bab1e65fe53248d2a6cb595393f84fb542d26333789c7d35cab47034a0b5406d7b57bf39af43fb5cb8f3149474cb508fda53fad3c60a8f33a918895c8962c750c1c382630d2fb13ef0cd7fd30197077339843b616fc9b0815dfae94829a20976f6ce1f3c97f7777ef624054576379beb7bd882d7aaaeb31a198002d70b6da36b7cb3e41b32ac3d96b7928bb5ac9f5918cbd337e2f3fa6ae7d8becb95f18072759bc68b4190948a8dbbd40e420abc95520a280ac54946c52f5cec844ca146dbd6b1caa5417f21cef8d904ac2394e6ff85ce7d91a1f13fdf386c9a372b6bddf78a455f46e88563aac42c69cbbcd6387bd548f84215aa9973bcfcb388fe2c161d39ad9bc2a5d963cab7d98606ff9caceee1529b11d311f4dc386fb91c402259a0d6bf8c3c4e18ab50059544bd78eb674bda961fdcfda1afce4955e174cfd8a1233b5c69d211c680addae2e44b616ae927b01fd727ab7344235d1919a74e6395680008c2482bfeb41930dd24c15f03ef501826e5d3a44cd0c4ef1af206ec8ea022ffe77b3f6962f2970641f99c052cc44b54fdda6cf66b3f245fd463ad3afcb12dde5542855dcfe822f05e5cf198c051e06f1f7a73f4ac2f730d67194c46c1c6efe3db8a5a6f0e0cf7f645429e26a4d92ed39676ce2c7ba8bd97de5f4ee7ff03da62143d5f99324719c0c08fe8f2d076c6dea06566ecbcd0c96038745ab7e242bcefab6d83171eccf5fe767e02d2be7df0ea81472772d38a20b65f19bafd3429ca8ee277552b5f1e7bebe20c91714ab6332c549d6f422da71be08515a0fb6aeb52221b93f60514114e0b702353929a000e145eb2bfa127e4c033f783acb6ec9b309a1a26abd4559013e4765c2aa29677a8eb2647cc921117c2f98a60186a6cc0a212444aacf8891a494fa08f1c776fc13fc49bf30421157d36b1ca0adb8d582e4a3e823ab86d578cb4abbe979c3dce3148edab5e7a9747376818081da23aee2c178c399add93111a566af17d419c185e13a35d1a32ab5866cd7b715bb80590468a56e6769920619b12c654786c03050aad31b15d8a137dde2593575ba8fc4b22b7651dc5fd4730b5522704e6ee42502e6c7409d3cdd28acdc3ff8746e6b65259ab2b6fe10db3c371a9d7565c53c76829f5e5587bd2cc2cdef770465efa238e790c2d6c482a53d5d6c5db724a799326acc26eea84dfadd2a3a6bd4499fff358ed1d67a12254413921035eeb9896547be75ef77663c25b35465ff8cf876cbadf11e9e133c477c11a8a1f44c75504a0a9667f9f3aa510690474c14782cb7618d998c513816dabf413fc2f8e9bc1c4ce11b7117927fcc79e3637ee504a9eb5e10a8e2c098ab56611e1d5db9d4f540cc629bcdd04b3f91292637098176082fda8e11a4c92db65d44cd8b04e92c6d780b7e8dc60c7a6bb7f91c09f48d3c20b20f36c9eae52e79fb121a3db9dc4bd2654789a745018babf177b84814694fbcc9f4273ee0c9bb1d4ce5f467d160381fb202f5217f96a1b3fe02f53d8e3c179374d36cda3161cdf4822461bac1d8592f54f7853f5d17f3101b601a45153d9727ccb05949f538011ac965a32098b59f2b451a6b851a73af78f9ecb93e6acbb8996118e51d409184da086c3917764c6a015bf0a532d272739bb0df78ddacc62b38fd1896e68ee4767a30ea23697e2cb3ced42d53f35612a7908e4228acdb55950adf1938306c3bf3282f65e57af39691d0fee43439581a691933a9d708191f8430916d5b77d105597315e7db5a7f05063b367bbe5421f364fcff6160a8cb963adc6d9b9f434d6836c55c82b9c96d8d031f6f9d284322c946b0a669fbb5565463364708428540ce68e193451cb8b2b2009457bf913f6f11f64ba3965d56b01c1ee2e3e2f59e6b42ea3db1dd62e8823f92592200774fb13d7e1ad3340f77fc997f52c90b6c8bcc936298562721c119b4bf2836b83fe3bcc7309e3e03d24f10a34e713d8e952c45df43aed4e9661213e7b1d1efadf6e8532acf53e7b266d9c98a4f2c4c44f4e337cbe019e5de20a4df11dd51d7fda96c1d43be9d657badc33c3a7c1b78654ca35e0420491b4259c1c015d1ce3002b6676f128eee9b6cdb61f69faaed0948c2dec440c31fb2dda9c54e74946ff4b3148c17f5c21af648ecf6a488cbc4d865ea1720624f94c6bb44217c4786b9af36aa4112846bf84f299bdf4306de826a181dfc1d987ccdfd84af86d0a3463341661b960d591e03ea8a2ff84c303f917f08e4fcb96b3a6142f6a356112d142fd9b8a40e0c9e7109ae178e3babf062b57774b3586f17102690b08b69649fe7aff3970d7d004df0a038d3dc1f8a5fbfc609fb4f2f9acd163abffd46dd85a4b83ff557d997217a4a1a05c37537d03cadf61e975dbb308cdb9d6d47dc4b053b712c04e227500b644e6c02c2db1f03a8bbc96d697595b69b7750552eb07b787f776b5e9755ff93698c4772a36b8ec0e4a29b7584012d9b1ff37951fdb97f74e8be990b8f29cec9aa1d50b08790290a53b19449a7e5ce92cf2faa456c5f34cf3eb16163a0c152f1e3f3c76bba38c50ade4148aea89ff4b13163ed1a19f044fe914abea02747175c0eb103967f4ab5504a2609da639701c741827bf944bb90fe94091208e91fe37b35acdba93f8077a38f9b3b4e7b15db338b5613693ee298d9b1a5b5b5596447817a6d5de1695c0549359c7674a02b7cacf9317f42a360a27e3787556185673fb581a92db2efc94230e72a0d7066fdb2c359b98185104b1e2d5909994d095c41acfcb572657cb74621c60cdab022f3a183f97a33f2012e9fc66e525f5143b789e3fe6e8c11f70321239c8cef550e5d7b2987e7e70495c75bb4b3345e6144e2d4ab4e7422a4b8642034a3c3b7d8834bf1e08b5e6f8d6c5d389ab79f955bc61d4a0125663e0a31c4675ce5bbf5ec0e76f13c48183a34945a3f928710c26086284b2b5a6d331c5dd487c3d8f063d0c595b9fffe2357225ad9d9e1cf752c169755cdca9feff37c1e3bd73a0c4a6238810eac06d8d224cadb9b8212da81bf5b1f00fd3b03a91cd140069508da0b4e497f22dbfce9ca7bba288213b44b75ddd4b6acff2f5c74f0fc40584cf37b9421f29d391f21a0f12fef3b7bd6b0f33514d00b13f035ef868c30aa4af174836f9374ee6ebfa26a655811f053f7a1e5da13351b4f329e4bcec58791a847ca0f07818b57307c05d414c4c45d3b053639de13962ebfc229e6fabd01a633eb278e3cc9d1933f9028fe126f0ae7159d8575781fb10777d3de90e64e49a43b9cdcf6c999ceafbf9089aa9a2ff1aa1ba6a7b9b683e856ceaa046e0bd109f71608ef660807bd8554602fd2e408eb86c9242f9b11cc105b8a964e913eb1bac6237777ace741fce73f6229412917e9e69f7aa2d9e89aebe87270651c79796dcc4a232e87b25569d1be8b82bddca0365ab89da58830b1f120143248c5dae57274c833f3c5d0d7088868097f462b4b8f3a21cbe1e0332f777d941b2e7de510ca07d01e9b64e900e9fad896d92e7e6d29db6d692122e56bb286de9803c2a6324f70e0daeed9f682b03b8450db10350c59c66a634e6a6d14a64c5a8fa6458efa7c9a16e1653f216d52c12880ecec9d0c5ef513679c87c0c0dabccd030242e632852a66986111b68a6b82e7d0b7163521a6a1738a3f377ea8be31aab4ae437ec4daf528f870636e3e9f6906a5f86637d20dd64187ffe5a7715ea17c91bfd403cfb5b23f1b6c5596f479bf3d2fe645f8f94482026db0c6865ae83076c2c134395eba8facf1db18593f3df1a965fa5e6a697cea5e805269320b4cfa592bab858a8387d92200735e81eccf5dc2efd432a7f576e6523664febcc9642dc9070e819e0d66f5d270d9e80b2cbcda7bd4011cd8efea854dfea0244d016f7b2ed038923d3dfbee431292356877671a4545e3fe0d0a597a7c437cc179492de89a39098476181ef5e2fb2b87af4e0326c797046dca4375bdfcdcaa37b872af7de552febf7b791e89552fc50c70b3385595c44463829124c9db1fdcadb4fa1733375f99fe36e15877d0413b9ba452f715931eee9df1e353cc2e46642ee23bde2744589706a4882a158befb756f918c4b5043bfe4d8dc90f411219d5c5d6051a1f0b4e5c5ca9465969bad527a702225e8f7ef0585c61a992c90844ebacdb67d6051d7463c0842c1b3ecfff6a1bd5ba49b438f5e6d4c46ed4a4c7b002e20f6024b0b8230d44bf91afdfa09ce21e46b35fc9fe90a7aaa55d8ccfa512e6335497345c8eea203c1498b7e100aa7834d53ff71cb9231bd068037f5ac66d48d81b2e5b0745d77c3fc86eb53e54d7413a14c3965ec6ce6cf5bc4b457d0b5108e7b6d77074259a920596d014ed693f681c929aff61a1d30590ecde49fbfee9530995e6ccba614d3949ee332a4480f433676f553350578ff5fe8d5a947a342f8019b9779993f938e748b613888509d91996b6a83a44a4d5fa8895e0d8eadab1be63cb24ad4df56812e7b3f3045630c908fbdf0b934a40a8e9b429054bb9562149e6339d769e6e9e058fa71364416d6d4675a9361aa6dc324619b33b9201c58a9df9e2ee1147ff17f14765235b2e344c7023451f7666b7adb72216f9bdbf58869f56ad32f5fe880198cfa637d948aa008e1d7b5c2e23b05ad26f489e996e412ec9c288548753f30a22ff25ba82a934192d748b1f0135c0a277588ef629e5af11e0cbbcf0348809158f0ec56b6a7b03875d4436a0c2d967c6b91915abb586fcd7755462dfd9eb216fac8b711810f6daf8f65a6dc38d7578b5fbf3f92a43a78846498339f50f7d85a4308833ab0ee92010fced31ccd31addc5bf8cd3fbaaf5e41a1129bd885c82099731bad83fe0cd9bb93be6b7e52500f5c445f0a3b44d83778a873a571902e17a6244ac7979dbc2396df331f279e9eccb3a7a5bb950ee30d0f578d413928ecfe917a36353b5750034a1feb38af247e0d90d155e55fa3ba82273f81c348f6cdd668f8a0b66cb7675ca7c86a624aa83c7c2f58701cffe8562c67e9f5ee533d7a76ba658d01a11db4a56130c0ec8442113a742693ecf0633aea5d3a33108d2c6f6a5077d1b3f69d84fd5d3b11ea74c9c87395c88f22bf5efdeb9af3a28c918d9ea657adcbf91a2a734bd3978130368b17a5fde2de4576a0731beae37a7172c40a226a0b5054d2fbb77557747016bd4d4a3641b20830a5a231cdfd07144ca34e65bbbb1a86fb9b880484440b19aba463230449371be8cf480af9cca59398873437d336f3d2fcbeb346da1199808986ba602222f9f2f1b9919df2f505bc35aca7e52899002a4424a2003ca86ee42b5fae8aa3ce72c1cbe09471022e9e118a6069b4c8038cd61f792f37899bd960f27dcd392e24fd9a68510dc9af6e47df5a83f6aa20114fb30078ceb8dc3d05009cc888d8f77ed653379ffa651351e60207131ebbc720f831c318a6ae631c24b089e917d240a769fbaa721606491235fb6a4193a353dc035305919677f862ebfd1fa062997bf054bbd34b06e3b3b598ca33f7d895d55e62ce4aaabcd39c420a7cffda1fcdb58a25798db7ecd978dc0996747e7cf5f07bad212cac8198bf309f8798ef63441926c039bb3808d9864907a69127508db7daa5e70ea661e18203894291e7ab7df7489e4f3f2a49c821ffcede0754a55ea803d5f56528112978cf478f15cb58ce00202d2a51e996ce15bf1d3a25ccc44dacf54095bf566c77b57eda876a8bc3235f6bfb6436c22167b916a0cdedba9ffa099556a8c016b1772bc68445aef8ced903b4b0a9b62ddfea46e4d05259a34427a89f103147d947cab853b85b2d459992e7f807c14a5f957d4e39aad1ff4df5c517a0eefcfd9e038462fd387eeb69bd50c7bae420fad072d0a4556edde5dd754f79ac5903dec80a43ef9179a1a2b76e8d1b93557b7210079528467b69605b10d9a35dad7fe3812273479e5c12ec0a4bfc3892eae068ba356eff482e17777161065ea92ccbdc96175fdfd4f58d4b75629999be74541cb4081ec32fcc050a5881d20d0e90a065c355764891ebde1d5987c1662c24582eac40c9ff7b667985395e7c48aada5f72fadc736939d9c65cee1968d6c3941b4dc04e37ff8741c860a8e13cdee1504ba47fa21bb1790107fba8c67c50439cac66dd7178faea4edf789ec5266c72bf9afe5b778f11df6ce27066ec60ef7dc74276445681245943c2dedea884f4dd63e6e90ca80b248625ba5ed3b73f7f44cbf001dc78741b57dd0177fea7c2b3731b0bcefd159e11c4c9bfb4696e3272e170407d8fedbec8c19538d4d4d2c7c6f410822b1e4846c44cbf799afc3cae246ea9072a40fe9776bc9045c2a1cd602f26b9d7e0d75010a88c5d07153b98cb7b094b8c96e764bce4cebdaff6d7806bfab490364ccfdf3af3cf36f33e7261cf02651fd006b1c744e1a04826df3fca2653001cbadba5b8969f463ce237d4b251e86f8f20fbf5806941f7abb37e2cf0eacd02b9dbcebd8f187012d3f9b8aeb759cb3838c49b4ff1358f7de3488db9769cc4f802b7826fe010feb54d13d3870c98d7a1e97b2ab4ea11fb2001d759d3fa7423d487df39e3cbc91c20282043fd0b513aee9d06db809757f5961dcdf929bbf39d0fbdeac269bf59d46b0b2fa3501677fff6752282c075799c55dc6d34eec0729bdc7d4b80d3b169002c52817f24e692cfb2434bb2df0d26eb2ed8610fc7d0232b6075b36adc1f336459818d27fa5b5aad32ef3e19b8828a590f8de6f49f588121e0c3e626609546e5db078453b424e7290e715e8a1e0ec93964d819e5d1f26436fc9b1849af85fc1d76f328eb6dc5847bfbea4136dc596af580d3ab464b3c3b32930de0c675af1098834826672192a94f895df48b700c95f13cdda79eaabf20df80e99fc58896c1d662f1e4e628e3581eee0b62b8aeafbc34966502ddbe0e9680d7d29b108a84aa5d8e9782101e2dd03bfe9b9ddfe7f89189e1682062d3dc747382e6fc34c6413f6ebcfbbbe2c007a639d28433ed9e1d5d51ee28d0e13cb934e5b00958d752cc9d80ac8762dcaac1ccad7500e9185e65b23c065423fc89faa0ae02b1810e478954b25781e27dd3fb867f45e36694322f599c3a79fcedf198cf52faa5fc84657d2a77f8ebfd930492a9499b7663358ef45def5bda4affce9f9e84632c4e2b7940e76d4cb8eba12b8433d237fc794e464bcb6cec8bb0a765965816d4da2591e6d2fbe9145848dbe8de4410c430cc06908261b85da0f517effcd7e4283ae72919c72bcc834619ee71f446e1ff15bf4ddb59d0aa1d1838fe6f1bcd77948e95970ce3df532222a5c18e27018e75ae8b9b07bd191e114893579c82a04a3cc55a044f67f1b7f8ec63f12728efba0af3725dd67fab4eceb48a26665a6264dfb78f1d9ac6a604dbca10d2b31a85359638e7fca7551ce88c88cdb741deb24f6a16c8e584a59490e36bdfc99019888795f0a697807d79d9f37ef89a7ed452f5356266ef29a3b3f5ec8ebf2c0fdbde55899ada3da9f84e6bb55de5361a32216f1599709574bd5f843e23a0e7af65ea0c6275b545f6307ee7a9e998b432ee171ad8c08421e819506b758b05f0394b50eb2135076bb4c8864ee3775fbd32bd8cc06ab536b10c2d2af34135092f4fea014288f57a4a82e8ddb9b88bb0b11f5f6bc23d271a9dbbd77d04e96a6f4f37b1ccc5c381dc448e1b6ac0f203884812c4fb335047652db5e86d7072c5f299d92a5549e9a8a89336d4d4e59a612eb9429a6cb31679c4ed7f281b18694a3892088bc2de3d72a70f4f4a3104a8db044d83893c7e73a8fbeea38c21c5418ed8c9e3305bd906ef06150348d47d17828969e0841c7599875bea6346acf62d8a667adb8529390b671b5b717718c7736535ee8b85a36c18b1e544132fbdcacf989b5f249bcbfaf23127882129c935f4467065de911fa526f7c717b4119e018f442f935c325a6855da88a741f8d89488cef6413901975d660ecaa937097c53edfd6477b5b4913961e6f0f852637ddc9b12c8cc39468be99329c759f7562181031c4a380a2fc7b08a55d7970ec2a35fd6a74a9cbbaa7e3bdbce31f5cb14bf94f7863d6621327edda927638801871c2826f015373ce94b10a53620eeb547dc5dc4f8e6daf860aaf8e9ff058b14a4495f854eaa7e3a3f8abc97ac9e5342dbd62fd5d005871c7bad3e42d0387b64f6ef95c51d772206e77335025be0dc759c6c3a9a65ea4df7dc849186980579965e3d3d9779806370dd89de49ed58bf320521b3c9ee6ee5ebcd1c1b4993dc7d5d67f76e58fa28556237537fb94edaf5a56b09dbb5fcc9d501a4e9470d140e357e24d3e0acfc1a8e9b7d95db94f241c5f5a6967189a70c3b5c6dc6ea9e2adf19caa2b20795c9f4514ed0d7404e8950440b822f32f9183464c3349261297989b411e2b61dbf1f15ab34ce84c8943618595b0593ed742cf3fd84101a4185e01bc84a9e0b12a03a1ef30eac1598876f3da48e80637c46fc1b7ba18266166443354705184cd6ee7b70c1bd6154742cd747d318c580a5402cdd314ffbe00fbaf5a729520769a1ccb7debd23485e38c5d94a60eaf70872fe5f6a1c18ef7f2d787c48a677d1eb66b5b476e90d9670876ef058e351af7bac99c31cf5b3291db71e6a9adbaeaa149a66a32a21b9d698d5bf6f95b8abffa93a58742a527c0f1d8564bd2d4dea29ce0c14139667dc6cdf2cf9c7d98f7a2bd4e3e28c32ce73bb0279adc29ea6ccb0ae8039b1810b8c29c8b9285ed8439cbd50fb685647d30f1e7ac8ea2c7ba18aa7d2d7fe3738d13d2b9ca1f5b84d55b5e28a082ee4af6510e0ffaf112f72ce91d9794dbdcc9703f4a4bf1a8ccafdabdfd9e1fcf173bf96990394f2562837e4225cc160d80279d1e3cb2cccbb1bdfe4a648c91a0628da9f0e19c5be4e967441724a2c488c57adc9b9b255db175c9062d091c87a5fa51f1698f102801753ec75d167f7a3817073e63c52e1b06383d4480c555a4ddf79acf21e58664c98039ffc624bc9fd3288baaab7b3e12eec5fb1a258f5b9895ad75d39682672a1d5f2c9e5ab9d6b605886abfee3ef593bf5c4f776583cef10cdccf2750ccfde261edecd0ea48f4f88434b94724b3778d200df1b7515362876b6ab7627447ffeaf25a840a09f8f06fe320505a7ab686860737bb425a095fc1dd161837a263bad883a0f52a360923bb8062c0a8deb724297e7f33555bd1e2a32a9d4c809585b6336e8888d24247d9b15466ada7441eb459b2fa22106dd62573d97fe9f20d01d638b8021ce9576395ff6bc95fe48e12285d50b7a20fa0e1a107b999f0fcaffb4be1ac903784e83d41045be3261871c6605e7f4cd8fa04ba740cc1f65da8650ff59bbda64cc9497413df1ce16c492bde13a4a50547ea019963e20460dbfe2bf5a4cf67a5ef4ce4ebae8869b9a05edfaf32ebfd5f7f180a16294673763c362d103036ffd6ea55bf1a33f52bee50974f9356b7b417a8771dc35f4f2636f87a18c47b0cd5a71112ce6e88ed1c7344daee9c9f115bfd7dd970d21e6eab3cff23e042843affb6cf471bc4d8e0cd7da4a85101b7e257874a6112b6c6cc51c300fc40e270464891a3a81c1c0eceb7f8f683a75fdaeeccbd8363c864dd9a98ac1fc6f551ab16c60e05330f0224dbc4a11b1a3017c80af690fcec2d7a2d79a67ced3060c9de46431160bfa709703c195aa30c31cccc27e9fb8fe580a2f14deaef58c655eddde9bbc7e9234b92b50114c10fe408f9b9e4970c6235c952011d026f183f6e9e132932fa04650220265bf523042dc3d21141ca278520c12a58b5710e89ae6eb113eecb64af971fe3b5a8ef6ea51100bbb999c9a789e8625ce1f32ccf16b780977ee1d97204cdf7180640c8b455157e19ac46e74915dd2ea68ec94e9c520572a4cefbafa6b6f9685ecf7622fff33419d288120fcae884a6fcb24b78c6b6a6fa68ee01945ad89b3b5e9dce7ddd6d72fdd2dfc62de5b9fd20a009420c6d3c2ca5aaffd77d6dbcc67b2f62ce8b07d2f2621df745e7093859b45e6efd7193b0831d02f59f46b899f171f7209493e0464631a20c942c74c0ffdad2a0a55af87fd6f2a6bf98cf48b118a97cc226d92fdbdcbb3bc854cae3f7e47e1dfe4fbbcb58b0d417df89f556b50b26f719b62c52ae53eb4a32eeb7b50c5c52c8e3cc9a758ce75c3003ec14831465fbec14e2d8de312c64e235870c64fcb1416d098ab01be0ed142cb6a642bad976bfbe60e504882eac3c0f608d483b50a5cce3d4283b2cec7c97743da8db666d1bbe7bf61fda3915d70d7bdad5ea8e477bde6b624f471103ee8a808c034a902bde09b2e673a6ccf759c0d19272a01ee8c45d91f4b6856548c6437d1a9607f2efec589293df993d88537c096f72470e30480902e19b0951a2577f845b2325ed97587db006a87bd20b5bcd39eb74d942f17f744ad9e0455147ca4f661373c206ab8aaa06ee8e7149419f3fd72bfc8d61d8f8df9d1320131eaa9a73f0cf66e2f1eef27723d84a5dff538f63b686ac7f17e84470b5591d97b636364696a709e3d86912c0df4e7161e1c5a830b81506e40a386572ba696e6c42eff84fe8d1d76def234f41369dc95da2dd357c30853956d6997d5bd84f791850c00290c9f8e6592201a50d7f6460e4d788f2f97069384bee8ff5786f3c7d38aa5dd69a7a40f39ae2392e5a9db920d4c5a58033422b304491ba9e390a1a336415dd09c233abb8bb4dd88c6cabe671b0c479f877b8392f92dd21d2eacf6585a4b01147f06c32d75fb616185196702b73fb64c56c7951f557d03923bfbf162e878ffe10fe196a37c56b3e832f8bbb91a5c7fd317300afb275f33c82cd6a92ee27f5cc86e26958395c4b9be25f69c443ab6756256f04f4c412b0753270e0108a6a1c8b6162162448965e62f7d81dd6a763df373d80c469bcf0ed59f3487622ad65ccd496045c964ed7957939ac160def15716611c4e1c1c279a35b80992060739c303dbf904bab93b7ba7b3aaa18d9d0ef0a4f6388e6c8bd94322934470be83854285741821c3c2e41c12522233ec681acc6322c29f6004446812cdb9b4309ca8289118ae9d7e8079dd975fd6be8244e380a6e1dca1fe2ff3c71ab4045f75f4455c182b783a48c5b9b375f62f42206093e28723772d4da9db45e74df0b746ad9caccac422c8b5919c8a59aa1593002d9cdd59adc4fd0ca5482148df8fbd09214481d346dae642ee818780540054602d0c3b20bf437eb3fa06af30df746072675966c8e92992aa111fc359ea2a95d7a8af97aca98234636969e444da99e2c9082194094ffa92603cbc54e165ea22704639463558f3c736d40b29089932015457646189c1a25a8d8791d29edff5dfc5024b43fa42c88e0841caafb7c5ec7e1c3f87b48c9a3acf027387cdab98f6fa44ae529631f8fe5c0adcc63ad1cf8d19e96f41f9f7444b7a5baf0189772e896beda8475c3bba49655ace41144754092c08fbbd7c770533b40ac9c0a3169e50e7e9f9a11d7ed2aa796aa154bb243f162a43a5a15211a2cc6a5ee8c96dba039c19831f822252e5fb2fe0cd991f35d136097d06a8146f2641cd4f445eecfd6195d8881ccc2233dbd53fca8bd6a9d56a8917fd0dd202e83546dd339b5f949ed95a1e519c4d9feb94acdcb8c48e44763dd04e5fd60f5f68ad713a521f110c0f6ef8760a22e107800fa76920bac51f764ca822a16f1c7f71be0e397e195c0551c7807dd895f1d30adae1cbf9bd88b676d55b86c581fd4b7629f7178b9445dc4cece4fdffefd349b2ef1c332ad3d7798de2e187098e7ca34d78d3e484afce2457d0cde39fd08f4f05496e5b59215fc8c202b5abcc4ea666279b2e59dd2357219797ff5f21d9bad7d24bbbfdbd87ec17c3f6d37337e4eec5ca5ee4ef3fbecfeac0d9ad1f0edad77f0d6f3bc26157bb0a2b72a94b84d0da22f88cf446a312bfff70633bf739eb0fad621f286bba1871dbb94e986a5dd45fcde788aef4de6983e5ac8143e27ac0f4348d8658af291eba531848538d001a8857f51872a45b417769d4b450e0977a0123dab62e11051e7207d6f170088312d677a9554cac2bb7579392965f4157e6dc9e2ab9ca08cfa23a9f184fee95d2e3caf8a0c5234cecca3c0205b163ef5f74d98fcb79ed0ffeadaa04f66244fb190578cc630f6645bb059a2900b497bf15d4ff8fb41c2babba38dee004ca0484abed08a58720e74d26f5e4e4ede56366d4944b05949c3f66bc2de5727591138b0c26e75d038e6775f517ea3c771caf0b07f68de6bf7f74da0d85d502cd33c30cf313fd1e6925cc24b89dfde2811ef55a92cc4a1542f0a69ea41b8ac3cc7f02a3aa58f8a13957e28ea4c6b83c2d1cbafdb546df0a6871a977dc57027ef70e86f78d952381cab691ba442f63d142ca13c7b881dfa3031d47e040e599b3a7b767eaac83dada9df69cdf5a5dbfe740af171b96846bce410fa7fe26425d35a5688c2acbd5eb4ed2e142f75feaea5055dade512f9ba28d64dca2fd9b84d819cd37f9e9e615fed3dfe385da1b16b1bbc72b200a017ade49537857364e420ebe7d7ff4e89af235af42dd76fad48507488448eb41aa449bfde4ed073157eedcbe1617a9e67f2616a88ec2a7da8768a87bb1d0b51f0630dabae5d61b9f97fbd9b3039d5ab2a8addf2864784086a7346a77559e3bee605645724ba791258c8db383f187e16d70254c2ca8dd49606aa5222daa070bbeec7a0c24630fa2b25d32db3e6601ae1c2dc46742354aa937f982db5902e3783903edc36b6fca70c35c109c77c42ddb978936cfd89f63acdf6128dc09b2434672e82b600326911494912037c99e7dd42fc86eaf4322a8f0850238d63cac97e9befe679e0a8e2de1aec67d1616dadd07468f777b33d9688cf9ae186f5d69d32aae42ccfea8203270951986ccfa550cbb56a0e8acb2fe183fec4f9e8137bc53dc4dd2ca4e1cb0de6c931e137a96af3c2b50acffb10d4ed680a4fd548324fad715eb01af540aaed5daf24684fe026d5075319277eacd78a8df1eb3fbcb147e80ab6493b558c59ae83441a4052954c24e6f2b8ff09f6508994c0b6464ead4757bef5421adc2ee9559030ff092a3590c94f4429b441b06c4bacdda4497e7dbfce1f3650c2e2c1bceecba72c47a8ddb7e3bd4ddc096bc0fd512f7dc32105bd871f90ae9f318f1fb57630a084b0e79c9b629ff919bd802a5f7a85355acc4b7294751b73ee3fc871c030b521c254ffdb056d9b91f9383d28d7ae3f9ef4acb057db2fd8acb1e40366df52eea2db65940631461012bfea83cf187dd05e5d41bdf28b3b3f0573f3ca91ffa94245e71b2b74fe1612b79fc553b11ede7028f1b6b7fbab23b995cf7cb12eff346efd47c4ed4db9379473025193260bad7a35c9eb4f77b17f169f7aaa0688e0b864f13b4ff5761f62b94e31f6a4226de02c2a4f2d16802af0c45b610f5e3bb3d9a5030df846e0755929a9f814c58d8839988315599b1cafa24fb111e6729d5fbc9524b22aa2f5e2692408721c6ed93bca2a595f0a811a0c1523294de1442520e5ca1e825675284c54a06d5466f81fd8d1010628c873da7995085565ca5a3eb13493d6937b6185c6f26658988a0cc308652341c1fc0c9899dfeb35b0a612b415fb81083a3f36ed5db170e20b533e0b171dd831aa28e2f2b9f9af43e99030441f10e506e0ae113865f008245b2fe265e68101a8ccc8ee890f95f4467eb1b5c24b87aea816539a6c3b99ff070eb56856dbb1425b2b68b34caba2acb4a7e1b1ecdeea33053b9a96c1820ce368f0ccdc1a49220d571c1960c103ca60d1eda40196e002529b8ed2e14a801a2045840270e93965f45da3c9c47fd5a6be72974802e2c9dbbc72f257b46526d82bb597265d69de4b271a91229b8a8fd346c10e47ac371741657379dd298d7f4cac55dc84c63532ea5ee03ef1d0065aa37f7987c44eb26247d4a85f2603065b82ef6440635f855674640b59fd229ca6b7961465a6c4c6c9f6ff1057dc9997db31f46b5cd9514d76e924f4ac2a1c705aa0f1a21235017f06d1ac84bff13453a37203707bef30e2fbe5b88fcc09a02720d794bcb1089250612383a2e313d7cdb1af5403f992ddd58d93a682c2edcfc73888d9ca6cf9aa242b910827536f8fd54912f0d5d97e6dcadbbffa4269bf348b24ffebf8a0125ff752e3718253b4a9ce3e3c845b08542c6c5d61f8998de55e2e08330fdb4fb2a0257ee01fb274df84aed754dd1a1df1eacb6a2dcd3c7384bdf332fa1d075735b89a25a405c4eade707deeaafc24e3f9b2867c36def2c0b45de39a357bf64752c8d65b290c547801703da019bc4b80593c439b2f058a45402b420a0636ba5224267f8421d0ee9f8ab0097cfc6013491a91bdb31dcae7dcd3da6e2fb2c5092ee83099e6807df51afce7540928730e50756e6d592b284a6d00b1aafc68b55d7f82cf1d0f638b1550d2f8082c38c99d670e529f6daabea5d4291b60e187cb4236d9943d886c0e4aaa4f0e026fb3368426901eeac22a9025ef90804f0c9479aaceb0428423d47beba638aedf4340cdf877324e6631dc79a12fecaaf66e236223f28848828b5bb17108131d9f712c8086795403a641c19a4a44f97ef792274f1dbd55baf545337c349d923de6e5ecb4bffe252b08a737734f369f753870ae209ff77abc10b69ae79cd68b5af8a4a9b7f23729146a38a17bbf98aebe2a11963fbf651be7ede57c510050bf943a334553d08ab9484561dd54dc2c5035a76c44cd971edb607685fb62ce665b2856aa8299419b5034392bbf17c9a349ca39c71a924d38f3e34d5c3158983058a78ad59bc936ffb76978a70916943df467d192287b61bf43c55a60f2824cd5e3820c3ac7f93226ba0305d2f04146a5ce2ef0f090c35ab368e67dc21935daf2ed4a178d1cb1149db78f946d6565a871f05e6d9a6427ea935eced859a090c24e90ce711ce56fdaa4d483c0a0b09ad276ee6a29d3269e55b9b92ad050ca6fa73c6e4d17dd07c5102ac1ef65908a78b83aab453e4054bcbdaaa70b4666036fc673136e92511aa5534d9cac9d517da6c3187fcc09b6cff96e26729c1e89dba9d54fb6052e6e76a0a5eb9f3b949e5b669511068bb0464af18d7cfe8a1587f78eb79c527b0a6476196b64f237a17f42b25024089e168784ed9eda29e7bcf090aeda76385330e1865f4582ac2431ea95ae0a89dfbb74d290d52268ade3e8c3809a70316f1359ced84419d280b0fedd40ba4dfab910ec5d5ba1cb69d29f882847749161e304b71d250a441b219688201134b66d6153b020076cb63e93a5eb36cb2bb2232ce830636ae7207b74f2e7fb9553944ba989b66ce068f8e76a86a8b0fdedf37e0b55db41c5a05689b904cd946c6e6b40629f3b0e5bde45bea50037e1c228571fcfcb1be55192624e208ef52bc867317f08820b807b4c96e16e53298276a8bd0d6f988641b394eb4d2da8f78cca2bd56138e07dd49aa4f03c37521ca03a4a3d76491950de0346e1f7ba8ab34b3b0af4bb243c85bf013f3ecc93e1afed564dbbed039bb7b7c9c26dc2733777a6ce374308b8ad65b3eb46d0f2dd4ff3fb2913ea609713f4ada0e7bc48fe3a4665741b37ac8630fe096874ff1f168e81906c95d86bfb6ae44b2129b390625aa9d035dfbbec014d08032d2d6f905d7eafc662e0b466eb3553a667ba2dc323c84c04231dc944620941953d15ecf8f79425acd1c3fbebd584a59ffe200791aeb6a07c95657991ba7c183b3107b71328e6672da089002c2bb984cee0af8f6fe3b1cc25f00f9e4503a064e892428900a6dfdcea8d7a67d13f7d7a2e7ca10bf24d969419fae77b2c6da83c928709c258f8eac16b6822dfbdb17c8d9a904b1b194bae1d3a0a91feb38fdb44e728cee31371348a803ae79b3babe4f67434eb687e38cb9a0132c818d4d8f8178bf838894fe0389b3085ac786e52da0babf2d510c0079b54fcd89b212e0313b9683a00bd6aea253c49657a12d7a249f0a8fe005b19481570de59fe009b69a6d5230057041cfa4d16211d8fbd9e262f9f76bbca824033a7cbc13ad2ad6e63476d5dc6f181243b8c9489bffcfb12c1435c11366d584afe23a5df7b3ae80247f6d759db06a59a576b85c064983fe7a10ea186f3c2fe916fc39b2302d8e091509afa507dad8e55179a987f0a5ea40a5f94621d6b923afd79361c4c44713dfe3642a927009c4ff5b29681b0d8203ba4b1788e33e27e3fa8094965af71655e4d21b3a55d37796bd22d4f9d0e40d88bb76558f2f564db492a12ebc12e444cdb4408f0ba716261e36c7d985d8d3b75bce62d1bf260d0920a854522de5d8d5d5dec5f176e458b25b4b2689a34bc8a9a5e99ae0dbf074400660da230259c625b3c2adfdd14e697a73e637260f9188315caaffcf82becf269085dcbcf2b6182bda8c79ca3ab9a0b703d747ee24ae1ef3dfebae72ea463d397b7f73234c899206faed13788c363af4a4a34404292594e40a43064b7e4bed5f5f21f316f8dd77eb081790704f16b09a442c0ba3a84de59454b500c82f9684458aa5d5b04331e47dcdf5f7b5588804c08b246f0b723d7b818a99d77beb47e0025c79ff58c4f205846138b70b337f307561ec3ffeb0a62879aee37fe0e697455b2d56a4d402b16d9bcb9254080c0a0a3b4e08ae28540ca36f056c8083144db2b01ebd88e02db89f99c6d0fcca2eb5db8523c1d7a9a62239e04e90ad10f8e288de98547b1a424fdd5838482b4a8846deec9a68b7b9421a22425326dadff4f57df869f67b92fefec12b6abe5f3ae2264348b0967a5dc38e50e35577254bed44a1938600d97beb27eb4ff66abed31b45f93a2c81142eb4a3c988bfe2d9d5e828cf2f0cefac74d1efc65f41c3b92c4ce4cd9977f210fc18b5a97c848a9d28e07e04a01f72aad4e56f45a8303a7df3cff138d12d7245114270832c9b50c332ec87cfeb73dcf9ea9c617c0a38d5193222b3d070baee578567b2d6921af0aa196032b0440a89ad7a1e34e2ec2fb3409047542bce2a1ac7427b02dc536ceb7f079d7017617a12b1d31a8d7043bfac97d77134f221dd19596172ab63ba64c2931428530bd6c282c558415615ccfa3ee52fce131b083a9bc5b430f43c756f3bdab65b20ced0b67f39facade7292a0adffb279e9eaa40a0372b432a052bb5009f3b5f8e47dbe1ff6d9eacf05057be7ef5dc33dfd6cbe1a0a1cafeea7b926ebed7acfa646d1e9bdea324e09785d04d97ed295076b8d4deac5ab62eb86fe92c6ef2393ef20d5299a55c97f7b20f61afbcb7ea345a7fd2d6b7122aef125d53559bd573d266c957b6b74964ebc4c810003b674da63714aa7a4d9d114bd7a47a2ecb4fe502824e166fcd6a14622d9771365720ce6b99e46f63315b0f7b2cb2d2cf888b015748757717236571927f0c7b1dbeae40726c34a48fc4c1f3e5cdae8f1e3ef96fd790099268aef8c9adceb0733f44d771b94373c7a534ccef17e02002a5c0d67a4e677e5330d74e621eac</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章被伏地魔封印了，需要咒语来解除！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习笔记</title>
      <link href="posts/b1b54fd/"/>
      <url>posts/b1b54fd/</url>
      
        <content type="html"><![CDATA[<h2 id="机器学习概述"><a href="#机器学习概述" class="headerlink" title="机器学习概述"></a>机器学习概述</h2><h3 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h3><p>我们可以将<strong>模型</strong>理解为一个函数，输入模型的数据，我们称为<strong>训练数据</strong>。由训练数据来确定函数的参数的过程就叫<strong>训练数据</strong>（其实就是解方程）。</p><p>通过不断训练，我们最终会得到一个合适的模型，从而可以对未知的数据先进行<u>预测</u>。其实这过程和咋们人类学习过程十分类似，只不人的认知与判断是通过经验得到，而机器是通过<u>数据</u>得到。</p><p>其中，用于训练模型得到的每条数据，我们成为一个<strong>样本</strong>，而样本中的每个属性，我们称为<strong>特征</strong>，每个样本的<u>目标输出值</u>，我们称为<strong>标签</strong>（监督学习），我们习惯使用 x 来表示特征，习惯使用 y 来表示标签。</p><p>其实，咋们在初中就会训练模型了，比如算一道已知两点求直线方程的数学题，这类题目已经包括了机器学习的2个重要步骤：</p><ol><li>训练</li><li>预测</li></ol><p>正如大家所感受的那样，机器学习就是<u>一个类似解方程</u>的过程。然而，现实中的数据不可能像求直线方程那么简单，模型也不可能总是通过肉眼能观察出来，这时就需要咋们通过<strong>机器学习算法</strong>来进行建模了。</p><h3 id="机器学习应用场景"><a href="#机器学习应用场景" class="headerlink" title="机器学习应用场景"></a>机器学习应用场景</h3><ol><li>语音识别技术、自然语言处理（ Siri ，小娜，小度，小艾同学）</li><li>人脸识别（张学友演唱会上逃犯落网）</li><li>汽车无人驾驶技术（百度 Apollo）</li><li>专家系统（AlphaGo）</li><li>推荐系统（电商）</li><li>搜索引擎（利用历史点击数据把用户经常点击的结果排在前面）</li><li>各种预测系统（天气预测，足球预测）</li></ol><h3 id="机器学习与人工智能"><a href="#机器学习与人工智能" class="headerlink" title="机器学习与人工智能"></a>机器学习与人工智能</h3><p><strong>人工智能（Artificial Intelligence, AI）</strong>是计算机科学的一个分支，目的是让计算机能够像人一样，对外界环境做出反应</p><p><strong>机器学习（Machine Learning, ML）</strong>，正是实现人工智能的一种方式。</p><p><strong>深度学习（Deep Learning, DL）</strong>是一种机器学习技术，基于神经网络，适用于处理音频、视频、语言理解等方面。</p><h3 id="机器学习分类"><a href="#机器学习分类" class="headerlink" title="机器学习分类"></a>机器学习分类</h3><p>机器学习的问题分为监督学习和非监督学习两大类：</p><ul><li><p><strong>监督学习</strong>（ supervised learning ）：学习样本中有标签，好比有老师告诉你正确答案</p><ul><li><p><strong>分类</strong>（classification）输出为有限的离散型变量，比如预测明天的天气类型： 晴天</p></li><li><p><strong>回归</strong>（regression）输出为连续型变量，比如预测明天的温度： 8-25°C</p><p>常用的监督学习算法 ：线性回归 、逻辑回归 、决策树 和 SVM（支持向量机）</p></li></ul></li><li><p><strong>无监督学习</strong>（unsupervised learning）：学习样本中无标签，靠机器观察自学，自己找模式和特征</p><ul><li><p><strong>聚类</strong>（clustering）</p></li><li><p><strong>降维</strong>（dimensionality reduction）</p><p>  常用非监督学习算法：K means、DBScan、PCA</p></li></ul></li></ul><h3 id="机器学习流程"><a href="#机器学习流程" class="headerlink" title="机器学习流程"></a>机器学习流程</h3><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713150646085.png" alt=""></p><p><strong>数据预处理</strong>：</p><p>数据集成：合并来自不同数据源的数据、处理冗余数据</p><p>数据清洗：缺失值、异常值</p><p><strong>特征工程</strong>：</p><p>特征选择：通过各种统计和模型评分等筛选出合适的</p><p>特征特征变换：将类别型特征转换为数值型特征</p><p>特征组合：结合业务数据，两两组合一阶离散特征形成高阶组合特征</p><p>特征降维：PCA、LDA等算法减少特征个数</p><p>特征归一化：消除数据特征之间的量纲影响，把特征值转变控制在 [0,1] 的区间</p><p><strong>数据建模</strong>：</p><p>选择模型→训练模型↔评估模型→部署模型</p><p><strong>处理类型型特征常用编码方式</strong>：</p><ul><li><strong>序号编码</strong>（Ordinal Encoding）<br>  通常用于处理类别间具有大小关系的数据。比如学历分为了专科、本科、硕士三档，那么<br>  用 3 表示<br>  硕士、 2 表示 本科、 1 表示 专科，转换后依然保留了大小关系。</li><li><strong>独热编码</strong>（One hot Encoding，用得较多）<br>  通常用于处理类别间不具有大小关系的特征。比如血型，一共有4 个取值（ A、B、AB、O ），独热<br>  编码会把血型变成一个 4 维稀疏向量， A 型血 →（1, 0, 0, 0），B 型血 →（0, 1, 0, 0），AB<br>  型血 → （0, 0, 1, 0），O 型血 →（0, 0, 0, 1）</li></ul><p><strong>模型评估</strong>：</p><ul><li><p><strong>留出法</strong>（Holdout）</p><p>  它将原始的样本集划分为训练集和测试集两部分：比如70% 用于模型训练， 30% 用于模型评估测试。缺点就是评估效果与原始分组有关系。为了消除随机性，就引入了“交叉检验”的思想</p></li><li><p><strong>交叉检验</strong>（Cross Validation）</p><ul><li><strong>𝑘折交叉验证</strong>（𝑘 𝑓𝑜𝑙𝑑）：首先将全部样本划分为 𝑘个大小相等的样本子集；依次遍历这 𝑘个子集，每次把当前自己作为验证集，其余所有子集作为训练集；最后 把 𝑘次 评估指标的平均值作为最终评估指标， k 经常取 10 。</li><li><strong>留一验证</strong>（ 𝑙𝑒𝑎𝑣𝑒 𝑜𝑛𝑒 𝑜𝑢𝑡）：每次留下一个样本作为验证集，其它所有样本作为训练集。如果有 𝑘个样本，则需要训练 𝑘次，测试 𝑘次。留一法计算最繁琐，但样本利用率最高。适合于小样本的情况。</li></ul></li><li><p><strong>自助法</strong>（Bootstrap）</p><p>  对于总数为𝑛的样本集合，进行 𝑛次有放回的随机抽样，被抽中的样本放入训练集，最终训练集的大小也是 𝑛。𝑛次采样过程中，有的样本会被重复抽中，有的从未被抽中，将这些从未被抽中的样本作为测试集。</p></li></ul><p><img align="right" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713154712777.png" style="zoom:70%;" /><strong>分类模型常用评估指标</strong>：</p><ul><li><p>准确率（正确率）<br>  $$<br>  A = \frac{TP+TN}{TP+FP+TN+FN}<br>  $$</p></li><li><p>精确率，是针对我们预测结果而言的<br>  $$<br>  P=\frac{TP}{TP+FP}<br>  $$</p></li><li></li><li><p>召回率，是针对我们原来的样本而言的<br>  $$<br>  R=\frac{TP}{TP+FN}<br>  $$<br>  P和 R 其实就是分母不同，一个分母是预测为正的样本数，另一个是原样本中所有正样本数</p></li><li><p>F1 Score，指标综合了 Precision 与 Recall 的结果<br>  $$<br>  F1=\frac{2PR}{P+R}<br>  $$<br>  F1-Score 的取值范围从 0 到 1 的， 1 代表模型的输出最好， 0 代表模型的输出结果最差</p></li></ul><p><strong>回归模型常用评估指标</strong>：</p><ul><li><p>MSE（Mean Squared Error）</p><p>  平均平方误差，为所有样本误差(真实值与预测值之差)的平方和，然后取均值</p><p>  <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713164044723.png" alt=""></p></li><li><p>RMSE（Root Mean Squared Error）</p><p>平均平方误差的平方根，即在MSE的基础上，取平方根</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713164157442.png" alt=""></p></li><li><p>MAE（Mean Absolute Error）</p><p>平均绝对值误差，为所有样本误差的绝对值和</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713164315186.png" alt=""></p></li><li><p>R^2</p><p>  决定系数，用来表示模型拟合性的分值，值越高表示模型拟合性越好，最高为1，可能为负值</p><p>  <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Machine_Learning/image-20210713164448876.png" alt=""></p></li></ul><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🤖机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrum敏捷开发模型</title>
      <link href="posts/9f42115c/"/>
      <url>posts/9f42115c/</url>
      
        <content type="html"><![CDATA[<h2 id="Scrum"><a href="#Scrum" class="headerlink" title="Scrum"></a>Scrum</h2><p><strong>Scrum是什么？</strong></p><p>敏捷开发的一个模型。应对客户快速变化的需求。</p><ol><li>迭代式开发</li><li>增量交付</li><li>开发团队和用户反馈推动产品开发</li><li>持续集成（DevOps）</li><li>开发团队自我管理</li></ol><p><strong>Scrum一般性流程</strong></p><p>一、整体需求分析和定义</p><p>项目破冰：所有人员达成一致目标，确定产品方向（项目远景/项目用例）</p><p>整体需求定义</p><p>需求优先级定义</p><p>二、每个迭代中的过程</p><p><strong>迭代开始</strong>：每个人挑选自己要完成的需求，并对每个需求划分任务和工时，负责对自己模块定义用例场景。产品经理汇总当前迭代需求，创建并维护 Sprint 待办列表，负责制定每个需求最后的测试依据</p><p><strong>迭代进行中</strong>：设计/开发/单元测试/修复Bug</p><p><strong>迭代完成</strong>：团队发布可运行版本，产品经理测试功能并决定、接受、拒绝本迭代结果</p><p>进入下一个迭代</p><p><strong>Sprint Backlog 是什么？</strong></p><p>是团队承诺在当前Sprint完成的任务列表。其中任务由产品Backlog选取的需求条目细化和分解而来，要确保将Backlog条目转化为潜在可交付的产品增量</p><p><strong>人员角色：</strong></p><p><strong>项目经理</strong>：整个团队的协调者和流程掌管者，需有耐心、细致和负责，全程参与</p><p><strong>技术主管</strong>：团队技术中坚力量，对技术类工作负责，热爱技术，喜欢编码和钻研问题，能解决问题，也能培训他人</p><p><strong>产品经理</strong>：要懂各种边缘学的东西，有商业意识，负责最后产品发布</p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ⌨开发模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用英语近义词的区别</title>
      <link href="posts/c4b107ae/"/>
      <url>posts/c4b107ae/</url>
      
        <content type="html"><![CDATA[<blockquote><p>咋们平时学习英语过程中，总能遇到一些最熟悉的陌生近义词，又不晓得啷个办，So let’s get started!</p></blockquote><h1 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h1><h2 id="work、job"><a href="#work、job" class="headerlink" title="work、job"></a>work、job</h2><p>job是可数名词，译为“工作”，强调职业。work是不可数名词，强调抽象的工作。work这个词比job更普遍，job是一种特定的职业，work是指为实现目标而进行的努力和活动，work既可以在正式工作中也可以在工作之外完成。</p><ol><li><p>job 与 work都是指工作，但job是可数名词，work是不可数名词。一般作为名词job更侧重种类，而work侧重于量。例如：</p><ul><li><p>He got a new job. 他找到了一份新工作。</p></li><li><p>He got some work to do. 他有一些工作要做。</p></li></ul></li><li><p>job表示职业。work表示日常的工作学习。</p></li><li><p>work多指体力的或脑力的努力或活动。job多指为换取报酬而进行的日常活动，尤指作为某人的手艺、行业或职业的工作。</p></li><li><p>job是名词，work既可以是名词也可以是动词。</p></li></ol><p>参考文章：<a href="http://www.chusan.com/zhongkao/92960.html">work和job的区别</a></p><h2 id="holiday、vacation"><a href="#holiday、vacation" class="headerlink" title="holiday、vacation"></a>holiday、vacation</h2><h1 id="形容词"><a href="#形容词" class="headerlink" title="形容词"></a>形容词</h1><h2 id="probable、possible"><a href="#probable、possible" class="headerlink" title="probable、possible"></a>probable、possible</h2><p>probable和possible的区别在于：</p><h3 id="词义的区别"><a href="#词义的区别" class="headerlink" title="词义的区别"></a>词义的区别</h3><p>possible意为“可能的，可能做到的”，表示可能性大于0，除了不可能发生的事情之外，任何事情都是possible,但发生的机率小于probable。</p><p>用法举例：</p><p>Mary told me that she would do everything possible to get married to Sam.　</p><p>玛丽告诉我，她将尽一切可能嫁给山姆。</p><p>probable意为“很可能的，很可能发生的，很可能真实的”，表示十之八九，至少都会超过五成，甚至六七成，因此发生的概率大于不发生的概率。</p><p>用法举例：</p><p>It is very probable that it will rain tonight.</p><p>今晚很可能会下雨。</p><h3 id="本质上的区别"><a href="#本质上的区别" class="headerlink" title="本质上的区别"></a>本质上的区别</h3><p>这两词的名词形式分别是：possibility 可能性；probability 概率，机率；</p><p>从本质上来说，possible表示定性，而probable表示定量，是从统计学的角度看，probable是possible的子集。</p><p>用法举例：</p><ol><li><p>It’s possible. = 有可能会发生</p></li><li><p>It’s not possible. = 完全不可能会发生</p></li><li><p>It’s probable. = 很有可能会发生</p></li><li><p>It’s not probable. = 发生的机会很小</p></li><li><p>It’s possible but not probable. = It’s possible but not likely.</p></li></ol><p>虽然世上，完全不可能发生的事情不多，但是这件事仍然不太有机会发生。</p><h3 id="常用的搭配区别"><a href="#常用的搭配区别" class="headerlink" title="常用的搭配区别"></a>常用的搭配区别</h3><ol><li><p>possible用来推测做一件事情或一个情况，不用来修饰人。</p><p> 常用法：</p><p> It is possible for sb. to do sth.</p><p> It is possible that 从句</p></li><li><p>probable后面只能加that从句，不能跟不定式短语，且多半用于肯定句。</p><p> 常用法：</p><p> It is probable that 从句</p></li></ol><p>参考文章：<a href="https://zhidao.baidu.com/question/810223066875359052.html">probable和possible的区别</a></p><h2 id="last是上一个or最后一个"><a href="#last是上一个or最后一个" class="headerlink" title="last是上一个or最后一个?"></a>last是上一个or最后一个?</h2><p>the last + n. 是最后一个，🌰：the last chance</p><p>last + time 是上一个，🌰：last night</p><h1 id="动词"><a href="#动词" class="headerlink" title="动词"></a>动词</h1><h2 id="study、learn"><a href="#study、learn" class="headerlink" title="study、learn"></a>study、learn</h2><p>参考文章：<a href="https://mp.weixin.qq.com/s?__biz=MjM5OTM1MzE2MA==&mid=2448382276&idx=1&sn=7e347e371c056e54ca3f05ff4ff65cad&chksm=b32737638450be75406e02f58f809bc8c46a757d20d7c476c5539a53fe6b0bed2303b1936b64&scene=132#wechat_redirect">你是在“study English”还是在“learn English”呢？区别看这里~！</a></p><h2 id="reserve、preserve"><a href="#reserve、preserve" class="headerlink" title="reserve、preserve"></a>reserve、preserve</h2><p>reserve = 保留</p><p>preserve = 保留 + 保护</p><h1 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h1><h2 id="little、few"><a href="#little、few" class="headerlink" title="little、few"></a>little、few</h2><h2 id="may、maybe"><a href="#may、maybe" class="headerlink" title="may、maybe"></a>may、maybe</h2><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言程序设计刷题笔记</title>
      <link href="posts/4f3779df/"/>
      <url>posts/4f3779df/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.hassanwong.top/#/Notes/C_Language/test_database">传送门🌀</a></p>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📜C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA相关问题合集</title>
      <link href="posts/5df05bd4/"/>
      <url>posts/5df05bd4/</url>
      
        <content type="html"><![CDATA[<h2 id="报错合集"><a href="#报错合集" class="headerlink" title="报错合集"></a>报错合集</h2><h3 id="启动时报错-Start-Failed"><a href="#启动时报错-Start-Failed" class="headerlink" title="启动时报错 Start Failed"></a>启动时报错 Start Failed</h3><p>部分报错代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Internal error. Please refer to http:&#x2F;&#x2F;jb.gg&#x2F;ide&#x2F;critical-startup-errors</span><br><span class="line">java.util.concurrent.CompletionException: java.net.BindException: Address already in use: bind</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/IDEA/image-20210624143236601.png" alt=""></p><p>方法一：重启电脑</p><p>方法二：使用<u>管理员身份</u>打开命令提示符，执行命令<code>net stop winnat</code>和<code>net start winnat</code>，不用重启</p><br><h2 id="问题合集"><a href="#问题合集" class="headerlink" title="问题合集"></a>问题合集</h2><h3 id="撤回还没有push的commit"><a href="#撤回还没有push的commit" class="headerlink" title="撤回还没有push的commit"></a>撤回还没有push的commit</h3><p>步骤：</p><ol><li>点击左下角的<code>Version Control</code></li><li>点击<code>Log</code></li><li>右键点击选中的commit记录，在弹出栏中点击<code>Undo Commit...</code>即可</li></ol><p>参考教程：<a href="https://blog.csdn.net/weixin_39903133/article/details/98867831">IDEA中commit之后还没有push的代码想撤回提交commit就这样做</a></p><br><h2 id="破解IDEA"><a href="#破解IDEA" class="headerlink" title="破解IDEA"></a>破解IDEA</h2><blockquote><p>该方法是19年记录的，目前未证实其有效性，若有更好的方法麻烦告诉我，谢谢！</p></blockquote><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><ol><li><p>下载jetbrains-agent.jar到任意位置</p><p> 链接：<code>pan.百度.com/s/1JXiQrP4KiSmwvUqjX53Sww</code> 提取码: mk9a</p></li><li><p>解压安装包</p></li><li><p>在C:\Users\Administrator路径下找到标题为软件名称的文件夹，并打开</p></li><li><p>打开 config（配置）文件夹</p></li><li><p>用记事本打开（软件名称）.exe.vmoptions</p></li><li><p>在最后一行加一行话（后面必须是jetbrains-agent.jar文件的正确地址，写错了IDE会打不开的）<br> 例如：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mac:      -javaagent:&#x2F;Users&#x2F;neo&#x2F;jetbrains-agent.jar</span><br><span class="line">linux:    -javaagent:&#x2F;home&#x2F;neo&#x2F;jetbrains-agent.jar</span><br><span class="line">windows:  -javaagent:C:\Users\neo\jetbrains-agent.jar</span><br></pre></td></tr></table></figure></li><li><p>重启你的IDE</p></li><li><p>点击IDE菜单 <code>Help</code> 👉 <code>Register...</code> 或 <code>Configure</code> 👉 <code>Manage License...</code></p><p> 支持两种注册方式：License server 和 Activation code:</p><p> 选择License server方式，地址填入：<a href="http://jetbrains-license-server">http://jetbrains-license-server</a> （应该会自动填上）</p><p> 或者点击按钮：”Discover Server”来自动填充地址</p><p> 注意：软件提示手动更新时，千万不要更新，直接关闭窗口，否则license server不起作用</p></li></ol><p>参考文章：<a href="https://www.sdbeta.com/wg/2019/0509/229677.html">https://www.sdbeta.com/wg/2019/0509/229677.html</a></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>如果你是老师或学生，你是可以去免费申请使用（在jetbrains官网里找的到），额外需要上传你的学生证高清照片，或者学信网的学籍证明pdf等等能证明你是学生的资料。我大概等了一周，正如官网所保证的那样。其实我在申请成功前一天就已经破解成功了，虽说方法一的确有效，就是不能更新。</p><p>对了，申请后只有一年使用时间，到时候再重新申请就好了。毕业后，如果申请不了的话，还是可以尝试下方法一</p><div class="note orange no-icon flat"><p>注意：</p><p>学生/老师申请成功后，如果你之前用的是破解版，建议把软件卸载重装，否则账号登录不进去，报错。</p></div>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🟦IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>芝士热狗棒，热量满满幸福满满</title>
      <link href="posts/120caa44/"/>
      <url>posts/120caa44/</url>
      
        <content type="html"><![CDATA[<blockquote><p>对的没错，这是一篇美食制作教程🎊！动机源于我昨夜在B站刷到的一条转载于油管的美食教学视频，我滴肚子咕咕叫了all night🐤，眼泪不争气地从口角流淌了出来，有时间一定要整活，孩子馋哭了😋（<del>戏过了</del>）</p><p>其实我不算是个吃货叭，但难得有食物如此吸引我，所以我赶紧记录下来，以备不时之需</p></blockquote><div style="position: relative; padding: 30% 45%;">  <iframe    style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"    src="//player.bilibili.com/player.html?aid=973618042&bvid=BV1j44y1B78T&cid=353497770&page=1&as_wide=1&high_quality=1&danmaku=1"    frameborder="no"    scrolling="no"    allowfullscreen="true"  >  </iframe></div><blockquote><p>原视频是要制作3种类型的芝士热狗棒，分别是<strong>土豆芝士棒</strong>、<strong>泡面芝士棒</strong>、<strong>经典热狗棒</strong></p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="食材准备"><a href="#食材准备" class="headerlink" title="食材准备"></a>食材准备</h3><ol><li>1颗常温鸡蛋</li><li>4g 活性干酵母</li><li>150g 高筋面粉</li><li>50g 米粉（可用低筋面粉代替）</li><li>3根香肠（12cm）</li><li>芝士（马苏里拉）</li><li>1颗土豆</li><li>淀粉（可以是玉米淀粉）</li><li>方便面</li><li>面包糠</li></ol><h3 id="配料准备"><a href="#配料准备" class="headerlink" title="配料准备"></a>配料准备</h3><ol><li>4g 盐</li><li>30g 糖</li><li>100ml 温水和半锅沸水</li><li>食用油</li><li>你喜欢的酱料（如番茄酱、芥末酱）</li></ol><h3 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h3><ol><li>3根大竹签</li><li>塑料袋</li><li>保鲜膜</li><li>刀、碗、蒸锅等基本厨房用具</li></ol><h2 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h2><h3 id="制作面团"><a href="#制作面团" class="headerlink" title="制作面团"></a>制作面团</h3><ol><li>打一颗鸡蛋到大碗里，搅拌均匀</li><li>倒入30g糖、4g活性干酵母，并搅拌均匀</li><li>倒入150g高筋面粉、50g米粉、4g盐，将盐稍微拌开</li><li>倒入100ml水，用手大力揉面，揉成面团状</li><li>盖上保鲜膜，将碗放在温暖的地方发酵至2-3倍大小（36℃~40℃）</li></ol><h3 id="处理食材，串上食材"><a href="#处理食材，串上食材" class="headerlink" title="处理食材，串上食材"></a>处理食材，串上食材</h3><ol><li>把3根香肠丢入烧开的沸水中焯1分钟，以去除腌肉味或表面的油</li><li>把3根香肠捞出来，其中2根都切成两半，另一根不用切</li><li>把芝士切成和半根香肠一样大小长宽</li><li>用大竹签把香肠和芝士串起来，另一根未切的香肠单独串起来</li></ol><h3 id="处理副食材"><a href="#处理副食材" class="headerlink" title="处理副食材"></a>处理副食材</h3><ol><li>将土豆切成8mm左右的小方块，并倒入水中，煮约3分钟</li><li>3分钟后沥干冷却</li><li>冷却后将其放入塑料袋中，再撒上1汤勺玉米淀粉</li><li>摇晃塑料袋，使淀粉均匀粘在土豆块表面</li><li>将干脆面放入塑料袋中，并打碎至大颗粒状即可，但不至于是粉末状</li></ol><h3 id="裹上面团及副食材"><a href="#裹上面团及副食材" class="headerlink" title="裹上面团及副食材"></a>裹上面团及副食材</h3><ol><li>大概1小时后，面团发酵好了，将其放入盘中</li><li>给完整香肠的那个串串裹上一层面团，裹完，手上沾点水再稍微薅掉香肠上多余的面团乃至完美的棒形，但注意面团不要裹太厚，因为会油炸时会膨胀</li><li>再均匀裹上一层面包糠</li><li>再就是对2根带有芝士的香肠串进行同步骤2的操作，这里需注意要包裹严密，因为油炸时芝士容易流出来</li><li>裹完面团后，其中一根裹上小土豆块，另一根裹上泡面碎儿，最后步骤同3</li></ol><h3 id="油炸和抹配料"><a href="#油炸和抹配料" class="headerlink" title="油炸和抹配料"></a>油炸和抹配料</h3><ol><li>将3根串串放入锅里开大火油炸乃至金黄色，转中火，炸至棕色时可以拿出来啦</li><li>抹上你喜欢的酱料，比如土豆芝士棒可以撒上一些番茄酱，这样就大功告成了嘿嘿！</li></ol><blockquote><p>你学废了没？<del>学废了快做给我吃</del>🤦‍</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎉图一乐 </tag>
            
            <tag> 🍱美味佳肴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思词伙大全</title>
      <link href="posts/974cbc6a/"/>
      <url>posts/974cbc6a/</url>
      
        <content type="html"><![CDATA[<blockquote><p>主要收集于《顾家北手把手教你雅思词伙 2.0》一书，外加其它渠道的收集整理，祝路过的烤鸭选手屠鸭顺利~</p></blockquote><h2 id="词伙的介绍"><a href="#词伙的介绍" class="headerlink" title="词伙的介绍"></a>词伙的介绍</h2><h3 id="什么是词伙？"><a href="#什么是词伙？" class="headerlink" title="什么是词伙？"></a>什么是词伙？</h3><p>词伙（collocations）无论是在<strong>写作</strong>还是<strong>口语</strong>中都很重要，剑桥雅思公布的官方评分标准明确指明考生需要展示词伙能力。词伙可以理解成咋们常说的“搭配”、“短语”，但与之不同的是，它有仨特点：</p><ol><li>与话题相关</li><li>不只是 2 个单词，可以由多个组成</li><li>需注意单复数、句子的位置和其它使用的特点</li></ol><h3 id="词伙的重要性"><a href="#词伙的重要性" class="headerlink" title="词伙的重要性"></a>词伙的重要性</h3><ol><li><p><strong>辨析单词</strong></p><p>通过记背词伙能更好理解单词。煮个栗子，electric 和 electrical，仅通过看单词长相或背释义很难去分清它们的区别，但通过记背词伙，electric cars（电动汽车），electrical equipment（电器），能更好去理解单词意思，还有 influence，impact，effect 等意思相近的词。其实我觉得非母语者学英语的方式完全可以和像母语者那样，你无需知道太多的规则，你用多了见多了自然就形成一种天然的语感，知道怎么使用怎么搭配就行。</p></li><li><p><strong>减少中式英文表达</strong></p></li><li><p><strong>使表达更加简洁</strong></p><p>咋们很多人在表达一件事时，都习惯于逐字翻译自己大脑中预设好的中文，这样很容易造成中式英文的产生和句子的冗长，相反你每次表达事物时，应该首先问自己有没有合适的词伙来表达这个 idea，这时，<del>词伙的 privilege 已尽数体现</del>。</p></li></ol><blockquote><p>你们还在疯狂背单词吗？每天定时打卡？到最后单词记住了吗？会灵活使用它吗？是时候花点时间背背词伙了 hh，无论是小初高英语，还是大学雅思托福，都会起到很大的作用。（<del>感觉我写个笔记，像打广告似的</del>）</p></blockquote><h3 id="词伙使用的注意事项"><a href="#词伙使用的注意事项" class="headerlink" title="词伙使用的注意事项"></a>词伙使用的注意事项</h3><ol><li>词伙使用的语境</li><li>词伙的正式与非正式使用场景</li><li>避免用过于极端和夸张的词伙</li><li>对词伙的正确理解</li></ol><br><h2 id="Academic-Skills"><a href="#Academic-Skills" class="headerlink" title="Academic Skills"></a>Academic Skills</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>research skills</td><td>研究能力</td></tr><tr><td>analytical skills</td><td>分析能力</td></tr><tr><td>search the web for information</td><td>上网找资料</td></tr><tr><td>do research</td><td>做调查</td></tr><tr><td>leadership skills</td><td>领导能力</td></tr><tr><td>leadership qualities</td><td>领导的素质</td></tr><tr><td>organizational skills</td><td>组织能力</td></tr><tr><td>academic skills</td><td>学术能力</td></tr><tr><td>problem-solving skills</td><td>解决问题的能力</td></tr><tr><td>gather information</td><td>收集信息</td></tr><tr><td>critical thinking skills</td><td>思辨能力</td></tr><tr><td>computer literacy</td><td>电脑能力 / 计算机素养</td></tr><tr><td>practical skills</td><td>实际工作能力</td></tr><tr><td>sharpen skills / add to the skill set</td><td>丰富技能</td></tr></tbody></table><h2 id="Air-Travel"><a href="#Air-Travel" class="headerlink" title="Air Travel"></a>Air Travel</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>travel by air</td><td>坐飞机出行</td></tr><tr><td>air transport</td><td>空运</td></tr><tr><td>make non-essential trips</td><td>进行非必要旅行</td></tr><tr><td>in the airline industry</td><td>在航空业</td></tr><tr><td>travel expenses</td><td>差旅费</td></tr><tr><td>tourist attractions</td><td>旅游景点</td></tr><tr><td>greenhouse gases</td><td>温室气体</td></tr><tr><td>trap heat from the sun</td><td>从太阳吸收热量</td></tr><tr><td>unusually warm conditions</td><td>异常温暖的气候</td></tr><tr><td>air travel</td><td>空航</td></tr><tr><td>transport … by air</td><td>通过飞机运输</td></tr><tr><td>price war</td><td>价格战</td></tr><tr><td>air fares</td><td>机票费用</td></tr><tr><td>on holiday</td><td>度假</td></tr><tr><td>a source of pollution</td><td>污染源</td></tr><tr><td>build up in the atmosphere</td><td>聚集在大气中</td></tr><tr><td>extreme weather conditions</td><td>极端天气</td></tr></tbody></table><h2 id="Animal-Testing"><a href="#Animal-Testing" class="headerlink" title="Animal Testing"></a>Animal Testing</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>animal tests/experiments</td><td>动物实验</td></tr><tr><td>conduct experiments</td><td>做实验</td></tr><tr><td>develop a new drug</td><td>研发一种新药</td></tr><tr><td>side effect</td><td>副作用</td></tr><tr><td>medical tests</td><td>药物实验</td></tr><tr><td>medical products</td><td>医用品</td></tr><tr><td>animal welfare groups</td><td>动物权益团体</td></tr><tr><td>show promising results</td><td>有好结果</td></tr><tr><td>exposed to abuse</td><td>受到虐待</td></tr><tr><td>alternative methods of research</td><td>可代替的研究方法</td></tr><tr><td>skincare products</td><td>护肤品</td></tr></tbody></table><h2 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>historic building</td><td>历史建筑</td></tr><tr><td>heritage building</td><td>古建筑</td></tr><tr><td>cultural site</td><td>文化遗址</td></tr><tr><td>historic site</td><td>历史遗址</td></tr><tr><td>cultural attraction</td><td>文化胜地</td></tr><tr><td>architectural landmark</td><td>建筑地标</td></tr><tr><td>architectural treasure</td><td>建筑瑰宝</td></tr><tr><td>make a trip</td><td>进行一次旅行</td></tr><tr><td>in ancient times</td><td>在古时候</td></tr><tr><td>cultural heritage</td><td>文化遗产</td></tr><tr><td>worth a visit</td><td>值得去看看</td></tr><tr><td>a memorable experience</td><td>一次难忘的经历</td></tr><tr><td>visual experience</td><td>视觉体验</td></tr></tbody></table><h2 id="Behavioral-Problems"><a href="#Behavioral-Problems" class="headerlink" title="Behavioral Problems"></a>Behavioral Problems</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>good role models / example</td><td>好榜样</td></tr><tr><td>copy behavior</td><td>模仿行为</td></tr><tr><td>behave badly</td><td>表现得很差</td></tr><tr><td>behavioral problems</td><td>行为问题</td></tr><tr><td>show good manners</td><td>表现出礼貌行为</td></tr><tr><td>show respect to (somebody)</td><td>表现出尊敬</td></tr><tr><td>send / take children to school</td><td>送孩子去学校</td></tr><tr><td>pick up children</td><td>接孩子</td></tr><tr><td>first educators / teachers</td><td>第一个老师（启蒙老师）</td></tr><tr><td>domestic violence</td><td>家暴</td></tr><tr><td>poor behavior</td><td>不良行为</td></tr><tr><td>show aggression</td><td>有暴力倾向</td></tr><tr><td>social norms</td><td>社会规范</td></tr><tr><td>speak politely/in a friendly manner</td><td>说话有礼貌</td></tr></tbody></table><h2 id="Business"><a href="#Business" class="headerlink" title="Business"></a>Business</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>competitive advantages</td><td>竞争优势</td></tr><tr><td>satisfy the needs</td><td>满足需求</td></tr><tr><td>stand out from the crowd</td><td>脱颖而出</td></tr><tr><td>run a successful business</td><td>经营一个成功的生意</td></tr><tr><td>make profits</td><td>赚取利润</td></tr><tr><td>go bankrupt</td><td>破产</td></tr><tr><td>go bust</td><td>破产（口语）</td></tr><tr><td>good value for money</td><td>性价比很高</td></tr><tr><td>business plans</td><td>商业计划</td></tr><tr><td>intense competition</td><td>激烈的竞争</td></tr><tr><td>serve a niche market</td><td>服务小众市场</td></tr><tr><td>set up a company</td><td>创立一个公司</td></tr><tr><td>running cost</td><td>运营成本</td></tr><tr><td>make ends meet</td><td>收支相抵</td></tr><tr><td>cost reduction measures</td><td>减少成本的措施</td></tr><tr><td>handle complaints</td><td>处理投诉</td></tr></tbody></table><h2 id="Car-Emissions"><a href="#Car-Emissions" class="headerlink" title="Car Emissions"></a>Car Emissions</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>curb car use</td><td>限制汽车的使用</td></tr><tr><td>create exhaust fumes</td><td>产生废气</td></tr><tr><td>car emissions</td><td>汽车尾气</td></tr><tr><td>cause air pollution</td><td>引起空气污染</td></tr><tr><td>dangerous to our health</td><td>对我们健康产生危害</td></tr><tr><td>tackle pollution</td><td>解决污染问题</td></tr><tr><td>poor air quality</td><td>空气质量差</td></tr><tr><td>suffer from poor health</td><td>忍受身体不适</td></tr><tr><td>mitigate problems</td><td>缓解问题</td></tr><tr><td>a bad harvest in agriculture</td><td>农业收成不好</td></tr><tr><td>increase the health cost</td><td>增加医疗费用</td></tr><tr><td>global warming</td><td>全球变暖</td></tr><tr><td>climate change</td><td>气候变化</td></tr></tbody></table><h2 id="Celebrities"><a href="#Celebrities" class="headerlink" title="Celebrities"></a>Celebrities</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>self-made celebrities</td><td>靠自己努力成名的人</td></tr><tr><td>start from scratch / nothing<br />from rags to riches</td><td>白手起家</td></tr><tr><td>lead a life of luxury</td><td>过奢侈的生活</td></tr><tr><td>live a frugal life</td><td>过节约的生活</td></tr><tr><td>designer clothes</td><td>名牌衣服</td></tr><tr><td>drive prestigious/luxury cars</td><td>开豪车</td></tr><tr><td>extravagant parties</td><td>奢华派对</td></tr><tr><td>set a bad example</td><td>树立坏榜样</td></tr><tr><td>positive role models</td><td>正面的榜样</td></tr><tr><td>pursue material goods</td><td>追求物质的东西</td></tr><tr><td>admire celebrities</td><td>羡慕名人</td></tr><tr><td>rock singers</td><td>摇滚歌手</td></tr><tr><td>pop singers</td><td>流行歌手</td></tr><tr><td>famous entertainers</td><td>知名娱乐圈人士</td></tr><tr><td>movie stars</td><td>电影明星</td></tr><tr><td>achieve fame</td><td>成名</td></tr><tr><td>devoted fans</td><td>忠实粉丝</td></tr><tr><td>the young(er) generation</td><td>年青一代</td></tr><tr><td>the old(er) generation</td><td>老一代人</td></tr><tr><td>famous sportspeople</td><td>著名运动员</td></tr><tr><td>sports stars</td><td>体育明星</td></tr><tr><td>inspire the next generation</td><td>激励下一代</td></tr><tr><td>develop skills</td><td>培养技能</td></tr><tr><td>develop talents</td><td>发展天赋</td></tr><tr><td>become world famous</td><td>变得世界闻名</td></tr><tr><td>emulate idols</td><td>模仿偶像</td></tr><tr><td>role models</td><td>楷模</td></tr><tr><td>a good influence</td><td>积极的影响</td></tr><tr><td>demonstrate determination</td><td>表现出决心</td></tr><tr><td>encounter difficulties</td><td>遇到问题</td></tr><tr><td>achieve success</td><td>获得成功</td></tr></tbody></table><h2 id="Charity"><a href="#Charity" class="headerlink" title="Charity"></a>Charity</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>charitable organizations</td><td>慈善组织</td></tr><tr><td>raise funds</td><td>筹钱</td></tr><tr><td>mobilise resources</td><td>调拨资源</td></tr><tr><td>international aid</td><td>国际援助</td></tr><tr><td>medical aid</td><td>医疗救助</td></tr><tr><td>people in need / needy people</td><td>有需要的人，穷人</td></tr><tr><td>live in poverty</td><td>生活贫穷的人</td></tr><tr><td>impoverished countries</td><td>贫穷国家</td></tr><tr><td>Third World countries</td><td><span class='nota' data-nota='第三世界是亚洲、非洲、拉丁美洲以及其它地区中的发展中国家，它们构成第三世界。'>第三世界国家</span></td></tr><tr><td>basic necessities</td><td>日常生活用品</td></tr><tr><td>get rid of poverty</td><td>摆脱贫穷</td></tr></tbody></table><h2 id="Clothes"><a href="#Clothes" class="headerlink" title="Clothes"></a>Clothes</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>follow the dress code</td><td>遵守着装要求</td></tr><tr><td>wear uniforms</td><td>穿制服</td></tr><tr><td>dress formally</td><td>穿着正式</td></tr><tr><td>casual dress</td><td>休闲服装</td></tr><tr><td>present a professional image</td><td>展现专业形象</td></tr><tr><td>make a good impression</td><td>留下好印象</td></tr><tr><td>social rules</td><td>社会规则</td></tr><tr><td>social norms</td><td>社会规范</td></tr><tr><td>social etiquette</td><td>社交礼仪</td></tr><tr><td>public places/spaces</td><td>公共场所</td></tr></tbody></table><h2 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>face-to-face communication</td><td>面对面交流</td></tr><tr><td>communication skills</td><td>交流能力</td></tr><tr><td>human interaction</td><td>人际交往</td></tr><tr><td>interpret messages</td><td>解释信息，翻译信息</td></tr><tr><td>facial expression</td><td>面部表情</td></tr><tr><td>body language</td><td>肢体语言</td></tr><tr><td>avoid misunderstandings</td><td>避免误解</td></tr><tr><td>a sign of respect</td><td>以示尊敬</td></tr><tr><td>listen to others</td><td>倾听别人</td></tr><tr><td>a good listener</td><td>一个好的听众</td></tr><tr><td>a good communicator</td><td>良好的沟通能力，出色的沟通者</td></tr><tr><td>form strong relationships</td><td>形成牢固的关系</td></tr><tr><td>live alone</td><td>独居</td></tr><tr><td>live far away from family</td><td>住的离家很远</td></tr><tr><td>social activity</td><td>社交活动</td></tr><tr><td>family life</td><td>家庭活动</td></tr></tbody></table><h2 id="Community"><a href="#Community" class="headerlink" title="Community"></a>Community</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>charity work</td><td>慈善工作</td></tr><tr><td>charity groups</td><td>慈善团体</td></tr><tr><td>community cohesion</td><td>社区凝聚力</td></tr><tr><td>give a helping hand</td><td>给予帮助</td></tr><tr><td>experience difficult times</td><td>经历困难时期</td></tr><tr><td>gain support</td><td>获得帮助</td></tr><tr><td>members of community</td><td>社区的成员</td></tr><tr><td>part of community</td><td>社区的一分子</td></tr><tr><td>bring people together</td><td>让人们聚在一起</td></tr><tr><td>a sense of community</td><td>社区的感觉</td></tr><tr><td>musical shows</td><td>音乐表演</td></tr><tr><td>raise money</td><td>筹款</td></tr></tbody></table><h2 id="Computers"><a href="#Computers" class="headerlink" title="Computers"></a>Computers</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>computer games</td><td>电脑游戏</td></tr><tr><td>educational games</td><td>教育类游戏</td></tr><tr><td>computer skills</td><td>电脑技能</td></tr><tr><td>computer literacy</td><td>计算机素养</td></tr><tr><td>connect to the internet</td><td>连网</td></tr><tr><td>download software</td><td>下载软件</td></tr><tr><td>use online communication tools</td><td>使用在线交流工具</td></tr><tr><td>store information</td><td>存储信息</td></tr><tr><td>process documents</td><td>处理文件</td></tr><tr><td>edit photos</td><td>编辑照片</td></tr><tr><td>produce videos</td><td>制作视频</td></tr></tbody></table><h2 id="Consumer-Society"><a href="#Consumer-Society" class="headerlink" title="Consumer Society"></a>Consumer Society</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>consumer societies</td><td>消费型社会</td></tr><tr><td>buy more than they need</td><td>买的东西多过于自己需要的</td></tr><tr><td>spend more than they earn</td><td>入不敷出</td></tr><tr><td>excess shopping</td><td>过度购物</td></tr><tr><td>the latest gadgets</td><td>最新的电子设备</td></tr><tr><td>get into debt</td><td>负债</td></tr><tr><td>pay off debts</td><td>还清债务</td></tr><tr><td>financial problems</td><td>经济问题</td></tr><tr><td>low income families</td><td>低收入家庭</td></tr><tr><td>economic pressure</td><td>经济压力</td></tr></tbody></table><h2 id="Creativity"><a href="#Creativity" class="headerlink" title="Creativity"></a>Creativity</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>attend courses</td><td>上课</td></tr><tr><td>improve job skills</td><td>提高工作能力</td></tr><tr><td>apply skills to work</td><td>将技能用于工作</td></tr><tr><td>increase productivity</td><td>增加产出</td></tr><tr><td>come up with creative ideas</td><td>想出有创意的点子</td></tr><tr><td>tackle problems creatively</td><td>有创造性地解决问题</td></tr><tr><td>unconventional measures</td><td>非常规手段</td></tr><tr><td>achieve creative potential</td><td>发挥创造力</td></tr><tr><td>use imagination</td><td>运用想象力</td></tr><tr><td>brain development</td><td>大脑发育</td></tr><tr><td>educational toy</td><td>益智玩具</td></tr><tr><td>have a good grasp of advanced technology</td><td>很好地掌握先进科技</td></tr><tr><td>foster innovation</td><td>促进创新</td></tr><tr><td>stifle creativity</td><td>扼杀创造力</td></tr><tr><td>make profits</td><td>创造利润</td></tr></tbody></table><h2 id="Crime"><a href="#Crime" class="headerlink" title="Crime"></a>Crime</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>a deterrent effect</td><td>威慑作用</td></tr><tr><td>escape punishment</td><td>逃避惩罚</td></tr><tr><td>think twice</td><td>再三考虑</td></tr><tr><td>prevent crime</td><td>阻止犯罪</td></tr><tr><td>curb crime</td><td>遏制犯罪</td></tr><tr><td>combat crime</td><td>打击犯罪</td></tr><tr><td>commit a crime</td><td>犯罪</td></tr><tr><td>break laws</td><td>违反法律</td></tr><tr><td>violate laws</td><td>触发法律</td></tr><tr><td>catch criminals</td><td>抓捕罪犯</td></tr><tr><td>an escaping criminal</td><td>在逃罪犯</td></tr><tr><td>armed police</td><td>武装警察</td></tr><tr><td>carry weapons</td><td>携带武器</td></tr><tr><td>pay a fine</td><td>支付罚款</td></tr><tr><td>serve a prison term</td><td>服刑</td></tr><tr><td>work as a volunteer</td><td>作为志愿者</td></tr><tr><td>reduce poverty</td><td>减少贫穷</td></tr><tr><td>vocational/job training</td><td>职业培训</td></tr><tr><td>surveillance cameras</td><td>视频监控</td></tr></tbody></table><h2 id="Discipline"><a href="#Discipline" class="headerlink" title="Discipline"></a>Discipline</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>do some activities</td><td>做一些活动</td></tr><tr><td>develop positive habits</td><td>培养良好的习惯</td></tr><tr><td>from an early age</td><td>从幼年开始</td></tr><tr><td>improve literacy</td><td>提高文学素养</td></tr><tr><td>start school</td><td>开始上学</td></tr><tr><td>maintain discipline</td><td>维持纪律</td></tr><tr><td>parenting styles</td><td>父母管教的方式</td></tr><tr><td>behavioral problems</td><td>行为问题</td></tr><tr><td>impose sanctions on</td><td>施加惩罚</td></tr><tr><td>impart a clear code of conduct</td><td>传授明确的行为规范</td></tr><tr><td>act as acceptable members of society</td><td>成为社会的好公民</td></tr><tr><td>good manners</td><td>有礼貌</td></tr><tr><td>grounding and detention</td><td>罚站和留堂（留校）</td></tr></tbody></table><h2 id="Educational-Equality"><a href="#Educational-Equality" class="headerlink" title="Educational Equality"></a>Educational Equality</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>from less <span class='nota' data-nota='意思是富裕的、顺利的'>well-off</span> backgrounds</td><td>来自贫穷的家庭</td></tr><tr><td>disadvantaged students</td><td>贫穷的学生</td></tr><tr><td>children from poor homes</td><td>来自贫穷家庭的孩子</td></tr><tr><td>children from deprived backgrounds</td><td>贫穷的孩子</td></tr><tr><td>from less well-off families</td><td>来自普通家庭</td></tr><tr><td>exempted from tuition fees</td><td>免除学费</td></tr><tr><td>drop out of school</td><td>辍学</td></tr><tr><td>educational equality<br />the equal access to education</td><td>教育公平</td></tr><tr><td>study at university</td><td>在大学学习</td></tr><tr><td>free-interest loans</td><td>无息贷款</td></tr><tr><td>financial support</td><td>财政支持</td></tr><tr><td>the cost of learning</td><td>学习的成本</td></tr><tr><td>break the circle of poverty</td><td>摆脱贫穷</td></tr><tr><td>reduce poverty</td><td>减少贫穷</td></tr><tr><td>vocational / job training</td><td>职业培训</td></tr><tr><td>bridge the gap between rich and poor<br />close the economic divide</td><td>减少贫富差距</td></tr><tr><td>the education system</td><td>教育系统</td></tr><tr><td>the school system</td><td>学校系统</td></tr><tr><td>higher education</td><td>高等教育</td></tr><tr><td>receive a good education</td><td>接受好的教育</td></tr><tr><td>a <u>well-educated</u> workforce</td><td><u>受到良好教育的</u>劳动力队伍</td></tr><tr><td>public schools</td><td>公立学校</td></tr><tr><td>set scholarships</td><td>设立奖学金</td></tr><tr><td>student loans</td><td>学生贷款</td></tr><tr><td>free education</td><td>免费教育</td></tr><tr><td>free access to knowledge</td><td>免费获取知识</td></tr><tr><td>broadband Internet services</td><td>宽带服务</td></tr></tbody></table><h2 id="Energy-Consumption"><a href="#Energy-Consumption" class="headerlink" title="Energy Consumption"></a>Energy Consumption</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>alternative energy sources</td><td>可替代能源</td></tr><tr><td>renewable resources</td><td>可再生能源</td></tr><tr><td>clean energy</td><td>清洁能源</td></tr><tr><td>energy conservation</td><td>能源保护</td></tr><tr><td>energy consumption</td><td>能源消耗</td></tr><tr><td>generate electricity</td><td>发电</td></tr><tr><td>natural light</td><td>自然光</td></tr><tr><td>sustainable materials</td><td>可持续材料</td></tr><tr><td>electric cars</td><td>电动汽车</td></tr><tr><td>hybrid cars</td><td>混合能源汽车</td></tr><tr><td>car giants</td><td>汽车业巨头</td></tr><tr><td>traditional fossil fuels</td><td>传统化石燃料</td></tr><tr><td>environmentally friendly materials<br />environment-friendly materials</td><td>环保材料</td></tr><tr><td>energy efficiency</td><td>节能</td></tr><tr><td>energy-saving technology</td><td>节能科技</td></tr></tbody></table><h2 id="Environmental-Problems"><a href="#Environmental-Problems" class="headerlink" title="Environmental Problems"></a>Environmental Problems</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>environmental problems</td><td>环境问题</td></tr><tr><td>environmental issues</td><td>环境议题</td></tr><tr><td>environmental impacts</td><td>环境的影响</td></tr><tr><td>environmental destruction</td><td>环境的破坏</td></tr><tr><td>cause damage to the environment</td><td>对环境造成破坏</td></tr><tr><td>drop litter</td><td>扔垃圾</td></tr><tr><td>awash with rubbish</td><td>充满了垃圾</td></tr><tr><td>clear forest</td><td>清理森林</td></tr><tr><td>destroy wetlands</td><td>破坏湿地</td></tr><tr><td>damage the beautiful landscape</td><td>破坏美好的风景</td></tr></tbody></table><h2 id="Environmental-Protection"><a href="#Environmental-Protection" class="headerlink" title="Environmental Protection"></a>Environmental Protection</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>go green</td><td>绿色环保，变得环保</td></tr><tr><td>environmental friendly</td><td>环保的</td></tr><tr><td>environmental protection</td><td>环境保护</td></tr><tr><td>environmental benefits</td><td>环境效益</td></tr><tr><td>live a sustainable life</td><td>过环保的生活</td></tr><tr><td>launch massive campaigns</td><td>开始大规模活动</td></tr><tr><td>environmental awareness</td><td>环境意识</td></tr><tr><td>educate the public about</td><td>给大众提供……方面的教育</td></tr><tr><td>impose heavy fines</td><td>大额罚款</td></tr><tr><td>recycle waste</td><td>回收垃圾</td></tr><tr><td>rubbish bins / dustbin</td><td>垃圾箱</td></tr><tr><td>household waste/rubbish</td><td>家庭垃圾</td></tr></tbody></table><h2 id="Exams"><a href="#Exams" class="headerlink" title="Exams"></a>Exams</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>devote time</td><td>付出时间</td></tr><tr><td>prepare for exams</td><td>准备考试</td></tr><tr><td>revise for exams</td><td>复习备考</td></tr><tr><td>exam factories</td><td>考试工厂（只关注考试的地方）</td></tr><tr><td>exam grades/results</td><td>考试成绩</td></tr><tr><td>workload increases</td><td>工作量增加</td></tr><tr><td>do homework</td><td>做家庭作业</td></tr><tr><td>learn facts by heart</td><td>背东西</td></tr><tr><td>rote learning</td><td>死记硬背</td></tr><tr><td>find enjoyment</td><td>发现乐趣</td></tr><tr><td>extra-curricular activities</td><td>课外活动</td></tr><tr><td>pursue a hobby</td><td>追求一种爱好</td></tr><tr><td><u>combine work with pleasure</u></td><td><u>劳逸结合</u></td></tr></tbody></table><h2 id="Family"><a href="#Family" class="headerlink" title="Family"></a>Family</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>family life</td><td>家庭生活</td></tr><tr><td>spend quality/precious time</td><td>度过宝贵时光</td></tr><tr><td>achieve a <u>work-life</u> balance</td><td>实现<u>工作和生活</u>的平衡</td></tr><tr><td>family commitment</td><td>家庭责任</td></tr><tr><td>family dinners</td><td>家庭聚餐</td></tr><tr><td>family ties/relationship</td><td>家庭关系</td></tr><tr><td>family activities</td><td>家庭活动</td></tr><tr><td>a loving family</td><td>一个有爱的家庭</td></tr><tr><td>feel lonely</td><td>感到孤独</td></tr><tr><td>a sense of loneliness</td><td>孤独感</td></tr><tr><td>a sense of isolation</td><td>孤立感</td></tr><tr><td>emotional support</td><td>情感上的支持</td></tr></tbody></table><h2 id="Film"><a href="#Film" class="headerlink" title="Film"></a>Film</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>the film industry</td><td>电影行业</td></tr><tr><td><u>top-grossing films</u></td><td><u>最卖座的电影</u></td></tr><tr><td>go to the cinema</td><td>去电影院</td></tr><tr><td>big-budget films</td><td>大预算电影</td></tr><tr><td>special effects</td><td>特效</td></tr><tr><td><span class='nota' data-nota='由...担任主角'>star</span> famous actors</td><td>由巨星主演</td></tr><tr><td>the box office</td><td>票房</td></tr><tr><td>talented filmmakers</td><td>有天赋的电影人（制片人）</td></tr><tr><td>produce high-quality films</td><td>制作高质量电影</td></tr><tr><td>domestically produced films</td><td>国产电影</td></tr><tr><td>locally produced films</td><td>当地制作的电影</td></tr></tbody></table><h2 id="Food"><a href="#Food" class="headerlink" title="Food"></a>Food</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>cook a meal</td><td>做饭</td></tr><tr><td>cooking skills</td><td>做饭技能</td></tr><tr><td>life skills</td><td>生活技能</td></tr><tr><td>prepare meals</td><td>准备饭菜</td></tr><tr><td>fruits and vegetables</td><td>水果和蔬菜</td></tr><tr><td>a healthy diet</td><td>健康的饮食</td></tr><tr><td>a balanced diet</td><td>均衡的饮食</td></tr><tr><td>eat fatty food</td><td>吃脂肪过多的食物</td></tr><tr><td>fast food</td><td>快餐</td></tr><tr><td>fish and chips</td><td>鱼和薯条</td></tr><tr><td>fizzy drinks<br/>carbonated beverage</td><td>碳酸饮料</td></tr><tr><td>high in salt and sugar</td><td>高盐高糖的</td></tr><tr><td>fresh ingredients</td><td>新鲜的食材</td></tr><tr><td>combat obesity</td><td>对抗肥胖问题</td></tr></tbody></table><h2 id="Food-Technology"><a href="#Food-Technology" class="headerlink" title="Food Technology"></a>Food Technology</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>increase yields</td><td>增加产量</td></tr><tr><td>food production</td><td>食品生产</td></tr><tr><td>grow/cultivate crops</td><td>种庄稼</td></tr><tr><td>a good harvest</td><td>收成很好</td></tr><tr><td>chemical fertilizers</td><td>化肥</td></tr><tr><td>apply pesticides</td><td>使用杀虫药</td></tr><tr><td>pest disease</td><td>病虫害</td></tr><tr><td>food price</td><td>食品价格</td></tr><tr><td>GM food / genetically modified food</td><td>转基因食品</td></tr><tr><td>genetic engineering</td><td>基因工程</td></tr><tr><td>high-yield crops</td><td>高产量的庄稼</td></tr><tr><td>resistant to pests</td><td>抗虫害</td></tr><tr><td>intensive farming</td><td>高密度农场</td></tr><tr><td>use preservatives</td><td>使用防腐剂</td></tr><tr><td>mechanized farming</td><td>机械化种植</td></tr><tr><td>grow faster</td><td>生长得更快</td></tr><tr><td>food shortage</td><td>食物短缺</td></tr></tbody></table><h2 id="Friends"><a href="#Friends" class="headerlink" title="Friends"></a>Friends</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>circle of friends</td><td>朋友圈</td></tr><tr><td>be good friends</td><td>成为好朋友</td></tr><tr><td>build up a network of contacts</td><td>建立关系网</td></tr><tr><td>form a good relationship</td><td>形成良好的关系</td></tr><tr><td>develop a lifelong friendship</td><td>发展一段终生的友谊</td></tr><tr><td>a lasting friendship</td><td>持续的友谊</td></tr><tr><td>peer pressure</td><td>同辈的压力</td></tr><tr><td>hang out with friends</td><td>与朋友出去玩</td></tr><tr><td>socialize with neighbors</td><td>与邻居交往</td></tr><tr><td>close friends</td><td>亲密的朋友</td></tr><tr><td>gain financial support</td><td>获得经济支持</td></tr><tr><td>business opportunities</td><td>商业机会</td></tr></tbody></table><h2 id="Gender-Discrimination"><a href="#Gender-Discrimination" class="headerlink" title="Gender Discrimination"></a>Gender Discrimination</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>gender discrimination<br />discrimination on the grounds of sex</td><td>性别歧视</td></tr><tr><td>gender bias</td><td>性别偏见</td></tr><tr><td>gender equality</td><td>性别平等</td></tr><tr><td>the equal access to education</td><td>教育公平</td></tr><tr><td>gender difference</td><td>性别差异</td></tr><tr><td>gender gap narrows</td><td>缩小性别差距</td></tr><tr><td>managerial skills</td><td>管理技能</td></tr><tr><td>business leaders</td><td>商业领袖</td></tr><tr><td>members of the board</td><td>董事会成员</td></tr><tr><td>shatter the glass ceiling</td><td>（女性）打破职位提升的障碍<br />直译：打碎玻璃天花板</td></tr><tr><td>enter the workforce/workplace</td><td>进入职场</td></tr><tr><td>close the gender gap</td><td>减少男女歧视</td></tr><tr><td>raise a family</td><td>养家糊口</td></tr></tbody></table><h2 id="Global-Warming"><a href="#Global-Warming" class="headerlink" title="Global Warming"></a>Global Warming</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>global warming</td><td>全球变暖</td></tr><tr><td>climate change</td><td>气候变化</td></tr><tr><td>greenhouse <u>gases</u></td><td>温室气体</td></tr><tr><td>build up in the atmosphere</td><td>聚集在大气中</td></tr><tr><td>trap heat from the sun</td><td>存储来自太阳的热量</td></tr><tr><td>extreme weather conditions</td><td>极端天气条件</td></tr><tr><td>unusually warm conditions</td><td>异常温暖的气候条件</td></tr></tbody></table><blockquote><p>Q：为什麽 gases 是复数唉？</p><p>A：因为这里是强调温室气体里<u>有不同的种类</u>啊，比如水蒸气、二氧化碳、氧化二氮等等。当然厚，gas 具体到某一种气体时就不可数了 🤦‍♀️</p></blockquote><h2 id="Government-Intervention"><a href="#Government-Intervention" class="headerlink" title="Government Intervention"></a>Government Intervention</h2><table><thead><tr><th align="left">词伙</th><th>释义</th></tr></thead><tbody><tr><td align="left">government intervention</td><td>政府介入</td></tr><tr><td align="left">government action</td><td>政府行为</td></tr><tr><td align="left">launch awareness campaign</td><td>发起宣传活动</td></tr><tr><td align="left">introduce laws</td><td>颁布法律</td></tr><tr><td align="left">make laws</td><td>制定法律</td></tr><tr><td align="left">tighten regulations on…</td><td>在…方面加紧监管</td></tr><tr><td align="left">impose a tobacco tax</td><td>征收烟草税</td></tr><tr><td align="left">curb smoking</td><td>控制吸烟</td></tr><tr><td align="left">stay healthy</td><td>保持健康</td></tr><tr><td align="left">prevention is more important than the cure</td><td>预防比治疗重要</td></tr><tr><td align="left">fall ill</td><td>生病</td></tr></tbody></table><h2 id="Green-Spaces"><a href="#Green-Spaces" class="headerlink" title="Green Spaces"></a>Green Spaces</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>public gardens</td><td>公共花园</td></tr><tr><td>do outdoor activities</td><td>做户外运动</td></tr><tr><td>go for a jog</td><td>慢跑</td></tr><tr><td>feel relaxed</td><td>感觉放松</td></tr><tr><td>reduce stress</td><td>减轻压力</td></tr><tr><td>keep fit</td><td>保持身材、保持健康</td></tr><tr><td>flowering plants</td><td>开花植物</td></tr><tr><td>evergreen trees</td><td>常青树</td></tr><tr><td>beautiful landscape</td><td>美丽的风景</td></tr><tr><td>enjoy the scenery</td><td>欣赏风景</td></tr><tr><td>take in the scenery</td><td>领略风光</td></tr><tr><td>admire the scenery</td><td>赞美景色</td></tr><tr><td>stunning scenery</td><td>极好的景色</td></tr></tbody></table><h2 id="Happiness"><a href="#Happiness" class="headerlink" title="Happiness"></a>Happiness</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>achieve happiness</td><td>获得幸福（结果）</td></tr><tr><td>experience happiness</td><td>感受幸福（过程）</td></tr><tr><td>find enjoyment/joy</td><td>找到乐趣</td></tr><tr><td>cover basic needs</td><td>满足基本需求</td></tr><tr><td>improve living standards</td><td>改善生活水平</td></tr><tr><td>a higher standard of living</td><td>更高的生活水平</td></tr><tr><td>live comfortably</td><td>过上舒适的生活</td></tr><tr><td>feel stressed out</td><td>感到紧张</td></tr><tr><td>non-financial factors</td><td>非经济因素</td></tr><tr><td>family life</td><td>家庭生活</td></tr><tr><td>social life</td><td>社会生活</td></tr><tr><td>feel lonely</td><td>感到孤独</td></tr><tr><td>earn a decent income</td><td>有体面的收入</td></tr><tr><td>earn money</td><td>挣钱</td></tr><tr><td>achieve career success</td><td>实现职场成功</td></tr><tr><td>enjoy a happy retirement</td><td>享受快乐的退休时光</td></tr><tr><td>donate money</td><td>捐钱</td></tr></tbody></table><blockquote><p>都看到这里了，你应该感受到了学习词伙的happiness了吧？祝好运~</p></blockquote><h2 id="Health"><a href="#Health" class="headerlink" title="Health"></a>Health</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>keep healthy</td><td>保持健康</td></tr><tr><td>endanger health</td><td>危害健康</td></tr><tr><td>harmful to health</td><td>对健康有危害</td></tr><tr><td>a sedentary lifestyle</td><td>一个久坐的生活方式</td></tr><tr><td>concentrate on work</td><td>专注于工作</td></tr><tr><td>suffer from heart diseases</td><td>患上心脏病</td></tr><tr><td>improve physical health</td><td>促进身体健康</td></tr><tr><td>sick leave</td><td>病假</td></tr><tr><td><span class='nota' data-nota='易于遭受；有做...倾向的；俯卧的'>prone</span> to health problem</td><td>容易有健康问题</td></tr><tr><td>see doctors</td><td>看医生</td></tr><tr><td>realize one’s dream</td><td>实现自己的梦想</td></tr><tr><td>achieve one’s goals</td><td>实现自己的目标</td></tr><tr><td>economic value</td><td>经济价值</td></tr></tbody></table><h2 id="Housing"><a href="#Housing" class="headerlink" title="Housing"></a>Housing</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>housing shortage</td><td>住房短缺</td></tr><tr><td>urban planning</td><td>城市规划</td></tr><tr><td>densely populated cities</td><td>人口很多的城市</td></tr><tr><td>redevelop run-down urban areas</td><td>重新开发破旧城区</td></tr><tr><td>make room for</td><td>为…腾出空间</td></tr><tr><td>residential buildings</td><td>住宅楼</td></tr><tr><td>the housing market</td><td>住房市场</td></tr><tr><td>provincial towns</td><td>乡镇</td></tr><tr><td>state housing</td><td>国家房，即有政府补贴的“公租房”，福利房</td></tr><tr><td>pay a mortgage</td><td>付按揭款，还房贷</td></tr><tr><td>housing developers</td><td>房产开发商</td></tr><tr><td>high-rise buildings</td><td>高层建筑</td></tr><tr><td>accommodate people</td><td>住人</td></tr><tr><td>low-density neighborhoods</td><td>低建筑密度的社区</td></tr><tr><td>land-scarce cities</td><td>土地稀缺城市</td></tr><tr><td>meet the growing demand for housing</td><td>满足对住房日益增长的需求</td></tr><tr><td>demolish old buildings</td><td>拆除老房子</td></tr></tbody></table><h2 id="Internet"><a href="#Internet" class="headerlink" title="Internet"></a>Internet</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>network technology</td><td>网络科技</td></tr><tr><td>work from home</td><td>在家里工作</td></tr><tr><td>teleworking, telecommuting, work at home</td><td>远程办公</td></tr><tr><td>shop online</td><td>上网购物</td></tr><tr><td>attend online courses</td><td>上网课</td></tr><tr><td>travel to work</td><td>去公司</td></tr><tr><td>travel a long distance to work</td><td>上班路程远</td></tr><tr><td>save time</td><td>省时间</td></tr><tr><td>face-to-face communication</td><td>面对面的交流</td></tr><tr><td>attend meetings</td><td>开会</td></tr><tr><td>avoid rush-hour traffic</td><td>避开交通高峰时段</td></tr><tr><td>in a formal setting/occasion</td><td>正式的场合</td></tr><tr><td>watch videos online</td><td>在网上看视频</td></tr><tr><td>social networking websites / social media sites</td><td>社交媒体网站</td></tr><tr><td>video chat programme/software</td><td>视频聊天软件</td></tr></tbody></table><h2 id=""><a href="#" class="headerlink" title=""></a><span class='nota' data-nota='创造就业机会'>Job Creation</span></h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>lose jobs</td><td>失去工作</td></tr><tr><td>out of work</td><td>失业</td></tr><tr><td>jobless/unemployment rate</td><td>失业率</td></tr><tr><td>reduce unemployment</td><td>减少失业问题</td></tr><tr><td>create jobs</td><td>创造就业机会</td></tr><tr><td>provide job opportunities</td><td>提供就业机会</td></tr><tr><td>make a living</td><td>谋生/维持生计</td></tr><tr><td>earn salaries</td><td>赚取薪水</td></tr><tr><td>earn money</td><td>赚钱</td></tr><tr><td>feed family</td><td>养家</td></tr><tr><td>live comfortably</td><td>生活过得好/过上好日子</td></tr><tr><td>economic recession<br />economic crisis</td><td>经济危机</td></tr><tr><td>population ageing</td><td>老龄化</td></tr><tr><td>foreign products</td><td>外国产品</td></tr></tbody></table><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><span class='nota' data-nota='工作满意度'>Job Satisfaction</span></h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>well-motivated employees</td><td>很积极的员工</td></tr><tr><td>a good motivator</td><td>一个好的激励因素</td></tr><tr><td>improve motivation</td><td>提高积极性</td></tr><tr><td>a sense of progress</td><td>进步感</td></tr><tr><td>live a comfortable life</td><td>过舒服的生活</td></tr><tr><td>raise a family</td><td>养家糊口</td></tr><tr><td>pay rise</td><td>加薪</td></tr><tr><td>a sense of belonging</td><td>归属感</td></tr><tr><td>a good working environment</td><td>一个好的工作环境</td></tr><tr><td>obtain job satisfaction</td><td>获得工作满意度</td></tr><tr><td>inspire loyalty</td><td>让员工更加忠诚</td></tr><tr><td>achieve ambition</td><td>实现个人的野心</td></tr><tr><td>the atmosphere in the workplace<br />working environment</td><td>工作环境</td></tr><tr><td>working conditions</td><td>工作条件</td></tr><tr><td>flexible patterns of work</td><td>灵活的工作模式</td></tr><tr><td>working relationship</td><td>工作关系</td></tr><tr><td>a steady career</td><td>稳定的职业</td></tr></tbody></table><h2 id="-2"><a href="#-2" class="headerlink" title=""></a><span class='nota' data-nota='求职'>Job Seeking</span></h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>labor market</td><td>劳动力市场</td></tr><tr><td>intensely competitive</td><td>竞争激烈</td></tr><tr><td>intense competition</td><td>激烈的竞争</td></tr><tr><td>improve job security</td><td>提高工作的稳定性</td></tr><tr><td>find work</td><td>找到工作</td></tr><tr><td>lose jobs</td><td>失业</td></tr><tr><td>steady income</td><td>稳定的收入</td></tr><tr><td>increase earnings</td><td>增加收入</td></tr><tr><td>cover living expenses</td><td>支付生活费</td></tr><tr><td>undergo training</td><td>接受培训</td></tr><tr><td>complete a degree</td><td>获得一个学位</td></tr><tr><td>meet requirements</td><td>符合要求</td></tr><tr><td>sharpen skills<br />add to the skill set</td><td>丰富技能</td></tr></tbody></table><h2 id="Knowledge"><a href="#Knowledge" class="headerlink" title="Knowledge"></a>Knowledge</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>read books</td><td>读书</td></tr><tr><td>read articles online</td><td>在线阅读文章</td></tr><tr><td>knowledge-based economy</td><td>知识型经济</td></tr><tr><td>acquire knowledge</td><td>获得知识</td></tr><tr><td>increase knowledge</td><td>增长知识</td></tr><tr><td>a vital source of knowledge</td><td>一个重要的知识来源</td></tr><tr><td>digital books</td><td>数字图书</td></tr><tr><td>broaden horizons</td><td>开阔眼界</td></tr><tr><td>broaden minds</td><td>开阔思路</td></tr><tr><td>keep up to date with what is happening in the outside world</td><td>了解外界最新发生的事情</td></tr><tr><td>keep well-informed about</td><td>对…保持消息灵通</td></tr><tr><td>educational programmes</td><td>教育类电视节目</td></tr></tbody></table><h2 id="Language"><a href="#Language" class="headerlink" title="Language"></a>Language</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>international language</td><td>国际语言</td></tr><tr><td>global language</td><td>全球性的语言</td></tr><tr><td>less spoken language</td><td>很少人说的语言</td></tr><tr><td>minority language</td><td>少数民族语言、小语种</td></tr><tr><td>endangered language</td><td>濒临消失的语言</td></tr><tr><td>mother tongue</td><td>母语</td></tr><tr><td>a means of communication</td><td>交流方式</td></tr><tr><td>cultural identity</td><td>文化认同</td></tr><tr><td>preserve traditions</td><td>保护传统</td></tr><tr><td>preserve language diversity</td><td>保护语言多样性</td></tr><tr><td>protect languages</td><td>保护语言</td></tr><tr><td>cultural diversity</td><td>文化多样性</td></tr><tr><td>celebrate festivals</td><td>庆祝节日</td></tr><tr><td>traditional food</td><td>传统食物</td></tr></tbody></table><h2 id="Laws"><a href="#Laws" class="headerlink" title="Laws"></a>Laws</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>commit crimes</td><td>违法</td></tr><tr><td>make fast money</td><td>快速赚钱</td></tr><tr><td>break the law</td><td>触犯法律</td></tr><tr><td>violate laws</td><td>违反法律</td></tr><tr><td>obey laws<br />comply with laws</td><td>遵守法律</td></tr><tr><td>face any punishment</td><td>面对惩罚</td></tr><tr><td>a prison sentence</td><td>监禁</td></tr><tr><td>severe consequences</td><td>严重后果</td></tr><tr><td>youth crime<br />juvenile delinquency</td><td>青少年犯罪</td></tr><tr><td>young offenders</td><td>年轻的罪犯</td></tr><tr><td>petty crimes</td><td>轻微的犯罪</td></tr><tr><td>serious crimes</td><td>严重的犯罪</td></tr><tr><td>racial tensions</td><td>种族矛盾，种族关系紧张</td></tr></tbody></table><h2 id="Lifestyle"><a href="#Lifestyle" class="headerlink" title="Lifestyle"></a>Lifestyle</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>lead a hectic life</td><td>过着忙碌的生活</td></tr><tr><td>live a healthy life</td><td>过健康的生活</td></tr><tr><td>live an active life</td><td>喜欢运动</td></tr><tr><td>live an inactive life</td><td>不喜欢运动</td></tr><tr><td>exercise regularly</td><td>经常运动</td></tr><tr><td>play sport</td><td>做运动（美式常用）</td></tr><tr><td>do sport</td><td>做运动（英式常用）</td></tr><tr><td>indoor activities</td><td>室内活动</td></tr><tr><td>access to exercise equipment</td><td>有健身设备</td></tr><tr><td>green space</td><td>绿地</td></tr><tr><td>make way for modern buildings</td><td>被现代建筑取代</td></tr></tbody></table><h2 id="Living-Standards"><a href="#Living-Standards" class="headerlink" title="Living Standards"></a>Living Standards</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>steady jobs</td><td>稳定的工作</td></tr><tr><td>steady income</td><td>稳定的收入</td></tr><tr><td>a well-paid job</td><td>收入很高的工作</td></tr><tr><td>cover living expenses</td><td>支付生活费</td></tr><tr><td>live comfortably</td><td>过很舒适的生活</td></tr><tr><td>afford tuition fees</td><td>支付学费</td></tr><tr><td>pay bills</td><td>支付生活杂费</td></tr><tr><td>pay off the mortgage</td><td>还清房贷</td></tr><tr><td>lead a happy life</td><td>过快乐生活</td></tr><tr><td>financial difficulties</td><td>经济困难</td></tr></tbody></table><h2 id="Materialistic-World"><a href="#Materialistic-World" class="headerlink" title="Materialistic World"></a>Materialistic World</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>material possessions</td><td>物质财产</td></tr><tr><td>live in a materialistic world</td><td>生活在物质的社会</td></tr><tr><td>up-to-date equipment</td><td>时尚的设备</td></tr><tr><td>hi-tech products</td><td>高科技产品</td></tr><tr><td>purchase the advanced model</td><td>买最先进的版本</td></tr><tr><td>status symbol</td><td>身份的象征</td></tr><tr><td>the middle class</td><td>中产阶级</td></tr><tr><td>buy more than they need</td><td>买的的东西多过自己需要的</td></tr><tr><td>in a consumer culture</td><td>消费社会</td></tr><tr><td>improve self-esteem</td><td>提升自信</td></tr><tr><td>find contentment</td><td>开心和满足</td></tr><tr><td>behind the times</td><td>过时</td></tr><tr><td>out of touch with world</td><td>与世隔绝</td></tr></tbody></table><h2 id="-3"><a href="#-3" class="headerlink" title=""></a><span class='nota' data-nota='机械化'>Mechanization</span></h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>improve productivity</td><td>提高生产力</td></tr><tr><td>improve efficiency</td><td>提高效率</td></tr><tr><td>do repetitive tasks</td><td>执行重复任务</td></tr><tr><td>replace human labor</td><td>取代人类劳动力</td></tr><tr><td>reduce the workforce</td><td>减少劳动力</td></tr><tr><td>mechanize tasks</td><td>机械化任务</td></tr><tr><td>mechanized assembly lines</td><td>机械化装配线</td></tr><tr><td>mechanized farming</td><td>机械化耕作</td></tr><tr><td>automate the process</td><td>过程自动化</td></tr><tr><td>done by hand</td><td>手工完成</td></tr><tr><td>computerize the service</td><td>服务电脑化</td></tr><tr><td>industrial robots</td><td>工业机器人</td></tr><tr><td>reduce the labor cost</td><td>减少劳动力成本</td></tr><tr><td>grow the economy</td><td>促进经济</td></tr></tbody></table><h2 id="Medical-Services"><a href="#Medical-Services" class="headerlink" title="Medical Services"></a>Medical Services</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>easier access to medical services</td><td>更加容易接触医疗服务</td></tr><tr><td>public hospitals</td><td>公办医院</td></tr><tr><td>medical equipment</td><td>医疗设备</td></tr><tr><td>clinical experience</td><td>临床经验</td></tr><tr><td>receive medical treatments</td><td>接受医疗</td></tr><tr><td>contract an illness</td><td>患病</td></tr><tr><td>high medical expenses</td><td>高医疗费用</td></tr><tr><td>a long waiting list</td><td>排长队</td></tr><tr><td>medical research</td><td>医疗调查</td></tr><tr><td>improve our health</td><td>促进我们的健康</td></tr><tr><td>in the pharmacy industry</td><td>在医药行业</td></tr><tr><td>invent new drugs</td><td>发明新药物</td></tr><tr><td>cure diseases</td><td>治愈疾病</td></tr><tr><td>previously incurable diseases</td><td>以前不可治疗的疾病</td></tr><tr><td>waste management</td><td>垃圾管理</td></tr><tr><td>spread of diseases</td><td>传播疾病</td></tr><tr><td>infectious/contagious diseases</td><td>传染病</td></tr><tr><td>healthy living</td><td>生活健康</td></tr><tr><td>improve life expectancy</td><td>延长寿命</td></tr><tr><td>boost public health</td><td>提升大众健康</td></tr></tbody></table><h2 id="Motivated-Students"><a href="#Motivated-Students" class="headerlink" title="Motivated Students"></a>Motivated Students</h2><table><thead><tr><th>释义</th><th>词伙</th></tr></thead><tbody><tr><td>传统的教室</td><td>traditional classroom</td></tr><tr><td>独立学习</td><td>study independently</td></tr><tr><td>提供指导</td><td>provide instruction</td></tr><tr><td>在一对一的基础上</td><td>on a one-on-one basis</td></tr><tr><td>建立信心</td><td>build confidence</td></tr><tr><td>保持对学习的热情</td><td>maintain enthusiasm for studies</td></tr><tr><td>培养强烈的兴趣</td><td>develop a strong interest</td></tr><tr><td>保持学生的兴趣</td><td>keep students interested</td></tr><tr><td>保持热情</td><td>stay self-motivated</td></tr><tr><td>对于学业的负面态度</td><td>a negative attitude towards schooling</td></tr><tr><td>缺乏自制力</td><td>lack self-discipline</td></tr><tr><td>分心</td><td>get distracted</td></tr></tbody></table><h2 id="Museums"><a href="#Museums" class="headerlink" title="Museums"></a>Museums</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>art museums</td><td>艺术博物馆</td></tr><tr><td>war museums</td><td>战争博物馆</td></tr><tr><td>exhibit artefacts</td><td>展览文物</td></tr><tr><td>organize an exhibition</td><td>举办一个展览</td></tr><tr><td>a connection to the past</td><td>连接历史</td></tr><tr><td>cultural heritage</td><td>文化遗产</td></tr><tr><td>enrich cultural lives</td><td>丰富文化生活</td></tr><tr><td>admission ticket</td><td>门票</td></tr><tr><td>admission fees</td><td>入场费</td></tr><tr><td>open to the public</td><td>对公众开放</td></tr><tr><td>free admission</td><td>免费入场</td></tr><tr><td>free entry</td><td>免费进入</td></tr></tbody></table><h2 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>folk songs</td><td>民族歌曲</td></tr><tr><td>pop songs</td><td>流行歌曲</td></tr><tr><td>rock misic</td><td>摇滚歌曲</td></tr><tr><td>rap songs</td><td>说唱歌曲</td></tr><tr><td>classical music</td><td>古典音乐</td></tr><tr><td>hit songs</td><td>热门歌曲</td></tr><tr><td>pop stars</td><td>流行歌手</td></tr><tr><td>music lover</td><td>音乐爱好者</td></tr><tr><td>musical instruments</td><td>乐器</td></tr><tr><td>integrate musical styles</td><td>综合各种音乐风格</td></tr><tr><td>cultural differences</td><td>文化差异</td></tr><tr><td>differ from culture to culture</td><td>文化与文化之间的差异</td></tr><tr><td>western countries</td><td>西方国家</td></tr></tbody></table><h2 id="News"><a href="#News" class="headerlink" title="News"></a>News</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>news reports</td><td>新闻报道</td></tr><tr><td>news outlets</td><td>新闻机构</td></tr><tr><td>news organization</td><td>新闻组织</td></tr><tr><td>news media</td><td>新闻媒体</td></tr><tr><td>professional reports</td><td>专业报道</td></tr><tr><td>gather first-hand information</td><td>收集第一手消息</td></tr><tr><td>broadcast news</td><td>播放新闻</td></tr><tr><td>a reliable source of information</td><td>一条有可靠来源的信息</td></tr><tr><td>increase ratings</td><td>提高收视率</td></tr><tr><td>expand the readership</td><td>拓展读者群体</td></tr><tr><td>sensationalize crimes</td><td>夸大犯罪事实</td></tr><tr><td>cover up political scandals</td><td>掩盖政治性的丑闻</td></tr><tr><td>mislead the public</td><td>误导公众</td></tr><tr><td>fake news</td><td>虚假新闻</td></tr><tr><td>political pressure</td><td>政治压力</td></tr><tr><td>in an opinionated way</td><td>带有主观看法</td></tr><tr><td>on the spot</td><td>现场</td></tr><tr><td>conceal/hide the truth</td><td>隐瞒真相</td></tr></tbody></table><h2 id="Older-People"><a href="#Older-People" class="headerlink" title="Older People"></a>Older People</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>the elderly</td><td>老者</td></tr><tr><td>senior citizens</td><td>年长者</td></tr><tr><td>the older generation</td><td>老一辈</td></tr><tr><td>out of touch with the world</td><td>跟不上时代，与世界脱节</td></tr><tr><td>resistant to change</td><td>抵触改变</td></tr><tr><td>old-fashioned ideas</td><td>过时的观念</td></tr><tr><td>fit into the modern world</td><td>适应现代社会</td></tr><tr><td>adopt advanced technology</td><td>采用高科技</td></tr><tr><td>sensible advice</td><td>明智的意见</td></tr><tr><td>life experience</td><td>生活经历</td></tr><tr><td>take risks</td><td>冒险</td></tr><tr><td>make a rash decision</td><td>做轻率的决定</td></tr><tr><td>a source of income</td><td>收入来源</td></tr><tr><td>hold back social progress</td><td>阻碍社会进步</td></tr><tr><td>a financial burden on</td><td>财政负担</td></tr></tbody></table><h2 id="Online-News"><a href="#Online-News" class="headerlink" title="Online News"></a>Online News</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>read news online</td><td>在网上看新闻</td></tr><tr><td>read news stories</td><td>看新闻</td></tr><tr><td>check online news</td><td>阅读网上新闻</td></tr><tr><td>have free time</td><td>空闲时间</td></tr><tr><td>keep up to date with what is happening</td><td>了解最近发生的事情</td></tr><tr><td>watch videos online</td><td>看网络视频</td></tr><tr><td>have faster access to news in real time</td><td>更快了解到实时新闻</td></tr><tr><td>the live coverage of</td><td>实况转播</td></tr><tr><td>TV news</td><td>电视新闻</td></tr><tr><td>news programmes</td><td>新闻节目</td></tr></tbody></table><h2 id="Online-Shopping"><a href="#Online-Shopping" class="headerlink" title="Online Shopping"></a>Online Shopping</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>run an online business</td><td>经营网络商务</td></tr><tr><td>a business owner</td><td>公司老板</td></tr><tr><td>online shops</td><td>网店</td></tr><tr><td>e-commerce websites</td><td>电商网站</td></tr><tr><td>retail outlets</td><td>零售店</td></tr><tr><td>running cost</td><td>运营成本</td></tr><tr><td>place an order</td><td>下单</td></tr><tr><td>make a payment</td><td>付款</td></tr><tr><td>offer a replacement</td><td>换货</td></tr><tr><td>grow business</td><td>扩大业务</td></tr><tr><td>in the comfort of my home</td><td>在家里</td></tr><tr><td>fit into my schedule</td><td>融入自己的日程表</td></tr><tr><td>fake products</td><td>假货</td></tr><tr><td>faulty goods</td><td>有问题的产品</td></tr><tr><td>shoddy goods</td><td>劣质产品</td></tr><tr><td>genuine goods</td><td>真货</td></tr><tr><td>consumer rights</td><td>消费者权益</td></tr><tr><td>buying decisions</td><td>购买的决定</td></tr><tr><td>a code of practice</td><td>行业规范</td></tr></tbody></table><h2 id="Partying"><a href="#Partying" class="headerlink" title="Partying"></a>Partying</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>throw/host a party</td><td>举办派对</td></tr><tr><td>go to a party / attend parties</td><td>出席派对</td></tr><tr><td>office party</td><td>公司派对</td></tr><tr><td>dinner party</td><td>家庭聚餐</td></tr><tr><td>birthday party</td><td>生日宴会</td></tr><tr><td>birthday cake</td><td>生日蛋糕</td></tr><tr><td>birthday present</td><td>生日礼物</td></tr><tr><td>light candles</td><td>点蜡烛</td></tr><tr><td>blow out candles</td><td>吹蜡烛</td></tr><tr><td>refreshing drinks</td><td>清凉饮料，提神饮料</td></tr><tr><td>serve drinks</td><td>提供酒水</td></tr><tr><td>karaoke party</td><td>K歌派对</td></tr><tr><td>farewell party</td><td>告别宴会</td></tr></tbody></table><h2 id="Photos"><a href="#Photos" class="headerlink" title="Photos"></a>Photos</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>take photos/pictures</td><td>拍照</td></tr><tr><td>take a selfie</td><td>自拍</td></tr><tr><td>a photo album</td><td>相册</td></tr><tr><td>portable device</td><td>可移动设备</td></tr><tr><td>capture special moment</td><td>捕捉特别的瞬间</td></tr><tr><td>relive experiences</td><td>重温一些（美好的瞬间或日子）</td></tr><tr><td>upload photos</td><td>上传相片</td></tr><tr><td>social networking websites</td><td>社交网站</td></tr><tr><td>digital cameras</td><td>数码相机</td></tr><tr><td>edit images</td><td>编辑相片</td></tr><tr><td>brighten colors</td><td>让颜色更加鲜艳</td></tr><tr><td>make slow motion movies</td><td>制作慢动作电影</td></tr></tbody></table><h2 id="Practical-work"><a href="#Practical-work" class="headerlink" title="Practical work"></a>Practical work</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>do practical work</td><td>做实际工作</td></tr><tr><td>prepare for working lives</td><td>为工作做准备</td></tr><tr><td>practical/hands-on experience</td><td>实践经验</td></tr><tr><td>pursue a career</td><td>从事一份工作</td></tr><tr><td>well-suited to a job</td><td>很适合一份工作</td></tr><tr><td>improve practical skills</td><td>提高实践能力</td></tr><tr><td>do part-time work</td><td>做兼职工作</td></tr><tr><td>adapt to the workplace</td><td>适应职场</td></tr><tr><td>graduate from university</td><td>大学毕业</td></tr><tr><td>finish high school</td><td>高中毕业</td></tr><tr><td>leave school</td><td>毕业</td></tr><tr><td>take a gap year</td><td>高中毕业后的间隔年</td></tr></tbody></table><h2 id="Qualities"><a href="#Qualities" class="headerlink" title="Qualities"></a>Qualities</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>the education system</td><td>教育系统</td></tr><tr><td>the school system</td><td>学校系统</td></tr><tr><td>higher education</td><td>高等教育</td></tr><tr><td>receive a university education</td><td>接受大学教育</td></tr><tr><td>receive training</td><td>接受培训</td></tr><tr><td>moral principles</td><td>道德准则</td></tr><tr><td>a sense of responsibility</td><td>责任感</td></tr><tr><td>instill virtues into</td><td>向…灌输美德</td></tr><tr><td>productive members of society</td><td>对社会有贡献的人</td></tr><tr><td>build character</td><td>塑造个人品质</td></tr><tr><td>develop qualities</td><td>培养素质</td></tr><tr><td>in difficult situations</td><td>在恶劣的环境下</td></tr><tr><td>show determination to win</td><td>必胜的决心</td></tr><tr><td>show perseverance</td><td>坚韧不拔</td></tr></tbody></table><h2 id="Reduce-Poverty"><a href="#Reduce-Poverty" class="headerlink" title="Reduce Poverty"></a>Reduce Poverty</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>disadvantaged students</td><td>贫穷的学生</td></tr><tr><td>children from poor homes</td><td>来自贫穷家庭的孩子</td></tr><tr><td>exempted from tuition fees</td><td>免除学费</td></tr><tr><td>drop out of school</td><td>辍学</td></tr><tr><td>educational equality</td><td>教育的公平</td></tr><tr><td>study at university</td><td>在大学学习</td></tr><tr><td>free-interest loans</td><td>无利息贷款</td></tr><tr><td>financial support</td><td>财政支持</td></tr><tr><td>break the cycle of poverty</td><td>摆脱贫穷</td></tr><tr><td>reduce poverty</td><td>减少贫穷</td></tr><tr><td>bridge the gap between rich and poor<br />close the economic divide</td><td>减少贫富差距</td></tr><tr><td>public schools</td><td>公立学校</td></tr><tr><td>set scholarships</td><td>设立奖学金</td></tr><tr><td>student loans</td><td>学生贷款</td></tr><tr><td>free education</td><td>免费教育</td></tr><tr><td>free access to knowledge</td><td>免费获取知识</td></tr><tr><td>maintain a basic standard of living</td><td>维持基本生活水平</td></tr><tr><td>die needlessly</td><td>不必要的死亡</td></tr><tr><td>people with disabilities</td><td>残疾人</td></tr><tr><td>suffer from poor health</td><td>生病</td></tr><tr><td>afford basic neccessities</td><td>买得起基本生活必需品</td></tr><tr><td>receive vocational training</td><td>接受职业培训</td></tr><tr><td>improve job skills</td><td>提高工作能力</td></tr><tr><td>close the gap between haves and have-nots</td><td>减少贫富差距</td></tr><tr><td>racial discrimination</td><td>种族歧视</td></tr></tbody></table><h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>obey rules | comply with rules</td><td>遵守规则</td></tr><tr><td>break/violate rules</td><td>破坏规则</td></tr><tr><td>establish/set rules</td><td>建立规则</td></tr><tr><td>ground rules</td><td>基本的规则</td></tr><tr><td>break school rules</td><td>破坏校规</td></tr><tr><td>violate norms</td><td>不遵守社会规范</td></tr><tr><td>adhere to cultural norms</td><td>遵守文化规范</td></tr><tr><td>show good behavior</td><td>讲礼貌</td></tr><tr><td>develop positive habits</td><td>形成好的习惯</td></tr><tr><td>company regulations</td><td>公司的规定</td></tr></tbody></table><h2 id="Selfish-People"><a href="#Selfish-People" class="headerlink" title="Selfish People"></a>Selfish People</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>give a helping hand</td><td>伸出援手</td></tr><tr><td>with a heart of gold</td><td>有颗金子般美好的心</td></tr><tr><td>show compassion</td><td>同情</td></tr><tr><td>responsive to emotional needs</td><td>响应情感需求</td></tr><tr><td>behave selfishly</td><td>做事自私</td></tr><tr><td>driven by self-interest</td><td>受自身利益驱使</td></tr><tr><td>motivated by greed</td><td>出于贪婪</td></tr><tr><td>cheat in exams</td><td>在考试中作弊</td></tr><tr><td>gain an unfair advantage over …</td><td>获取不公平的优势</td></tr><tr><td>make easy money</td><td>不劳而获</td></tr><tr><td>teach moral values</td><td>灌输道德观</td></tr><tr><td>traditional values</td><td>传统的价值</td></tr></tbody></table><h2 id="Shopping"><a href="#Shopping" class="headerlink" title="Shopping"></a>Shopping</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>a strong appetite | a growing demand</td><td>需求很高</td></tr><tr><td>consumer goods</td><td>消费品</td></tr><tr><td>electrical equipment</td><td>电子设备</td></tr><tr><td>household appliances</td><td>家庭用具</td></tr><tr><td>shop online</td><td>网络购物</td></tr><tr><td>online stores</td><td>网络商店</td></tr><tr><td>online retailers</td><td>网络零售商</td></tr><tr><td>in the comfort of their homes</td><td>在舒适的家里</td></tr><tr><td>on high streets</td><td>在购物街</td></tr><tr><td>shopping malls</td><td>购物中心</td></tr><tr><td>shopping streets</td><td>购物街</td></tr><tr><td>buy … on impulse</td><td>冲动买…</td></tr><tr><td>steep discounts</td><td>大降价</td></tr><tr><td>consumer society</td><td>消费社会</td></tr><tr><td>consumer culture</td><td>消费文化</td></tr><tr><td>pay by credit card</td><td>用信用卡付账</td></tr></tbody></table><h2 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>educational games</td><td>教育游戏</td></tr><tr><td>outdoor games</td><td>户外运动</td></tr><tr><td>set rules</td><td>设定规则</td></tr><tr><td>express ideas</td><td>表达观点</td></tr><tr><td>good listening skills</td><td>良好的倾听技巧</td></tr><tr><td>improve soft skills</td><td>改善软技能</td></tr><tr><td>communication skills</td><td>交流能力</td></tr><tr><td>interpersonal skills</td><td>人际能力</td></tr><tr><td>leadership skills</td><td>领导能力</td></tr><tr><td>physical skills</td><td>运动技能</td></tr><tr><td>life skills</td><td>生活技能</td></tr><tr><td>basic skills</td><td>基本技能</td></tr><tr><td>young players</td><td>年轻球员</td></tr></tbody></table><h2 id="Social-Activities"><a href="#Social-Activities" class="headerlink" title="Social Activities"></a>Social Activities</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>keep fit</td><td>保持身材</td></tr><tr><td>lead a healthy life</td><td>过健康的生活</td></tr><tr><td>social activity</td><td>社会活动</td></tr><tr><td>gather together</td><td>聚一起</td></tr><tr><td>make new friends</td><td>交新的朋友</td></tr><tr><td>go out for a meal</td><td>外出聚餐</td></tr><tr><td>eat out</td><td>外出就餐</td></tr><tr><td>have a coffee</td><td>喝咖啡</td></tr><tr><td>talking points</td><td>话题</td></tr><tr><td>sports fans</td><td>体育迷</td></tr><tr><td>watch soccer games</td><td>看足球比赛</td></tr><tr><td>live events</td><td>直播赛事</td></tr></tbody></table><h2 id="Social-Life"><a href="#Social-Life" class="headerlink" title="Social Life"></a>Social Life</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>cultural activities</td><td>文化活动</td></tr><tr><td>do social activities</td><td>参加社会活动</td></tr><tr><td>social life</td><td>社会生活</td></tr><tr><td>mix with others</td><td>和他人来往、相处</td></tr><tr><td>socialize with neighbors</td><td>和邻居来往</td></tr><tr><td>cut stress</td><td>减少压力</td></tr><tr><td>release stress</td><td>释放压力</td></tr><tr><td>tasks at hand</td><td>手边的工作</td></tr><tr><td>forget about work</td><td>忘记工作</td></tr><tr><td>reduce anxiety</td><td>缓解紧张情绪</td></tr><tr><td>join the choir</td><td>参加合唱团</td></tr><tr><td>a pleasurable experience</td><td>非常有趣的经历</td></tr><tr><td>visit art galleries</td><td>参观艺术馆</td></tr><tr><td>join a band</td><td>参加乐队</td></tr></tbody></table><h2 id="Social-Norms"><a href="#Social-Norms" class="headerlink" title="Social Norms"></a>Social Norms</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>conform to social norms</td><td>遵守社会规范</td></tr><tr><td>follow social rules</td><td>遵守社会规则</td></tr><tr><td>show good manners</td><td>有礼貌</td></tr><tr><td>show respect to others</td><td>尊重他人</td></tr><tr><td>complete work an time</td><td>准时完成工作</td></tr><tr><td>arrive punctually</td><td>准时到</td></tr><tr><td>handle enquiries politely</td><td>礼貌地处理咨询</td></tr><tr><td>late for work</td><td>上班迟到</td></tr><tr><td>good work ethic</td><td>好的职业道德</td></tr><tr><td>build good working relationships</td><td>建立好的工作关系</td></tr><tr><td>a sense of responsibility</td><td>责任感</td></tr></tbody></table><h2 id="Space-Technology"><a href="#Space-Technology" class="headerlink" title="Space Technology"></a>Space Technology</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>space missions</td><td>太空任务</td></tr><tr><td>space exploration</td><td>太空探索</td></tr><tr><td>space science</td><td>太空科学</td></tr><tr><td>advance knowledge</td><td>先进的知识</td></tr><tr><td>habitable planets</td><td>适合居住的星球</td></tr><tr><td>population explosion</td><td>人口增长</td></tr><tr><td>provide shelter for</td><td>为…提供避难所</td></tr><tr><td>sustain our civilization</td><td>保护我们的文明</td></tr><tr><td>used commercially</td><td>商业化地使用</td></tr><tr><td>protective clothes</td><td>保护衣</td></tr><tr><td>in the hostile environment</td><td>在恶劣的环境里</td></tr><tr><td>on the ground</td><td>在地面上</td></tr><tr><td>travel in outer space</td><td>太空旅行</td></tr><tr><td>an immediate pay off</td><td>马上有回报</td></tr></tbody></table><h2 id="Sport"><a href="#Sport" class="headerlink" title="Sport"></a>Sport</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>play sport</td><td>做运动</td></tr><tr><td>gentle physical exercise</td><td>温和的身体锻炼</td></tr><tr><td>moderate intensity activities</td><td>强度适中的运动</td></tr><tr><td>mild exercise</td><td>温和的锻炼（不刺激的运动）</td></tr><tr><td>go for a jog</td><td>去慢跑</td></tr><tr><td>take a brisk walk</td><td>去快跑</td></tr><tr><td>go for a swim</td><td>去游泳</td></tr><tr><td>burn calories</td><td>燃烧卡路里</td></tr><tr><td>increase blood circulation</td><td>促进血液循环</td></tr><tr><td>build strength</td><td>增强体力</td></tr><tr><td>keep a good body shape</td><td>保持好的身材</td></tr><tr><td>improve health</td><td>促进身体健康</td></tr><tr><td>lead an inactive life</td><td>不运动的生活</td></tr><tr><td>suffer injuries</td><td>受伤</td></tr><tr><td>extreme sports</td><td>极限运动</td></tr><tr><td>professional trainers</td><td>专业的教练</td></tr></tbody></table><h2 id="Stress"><a href="#Stress" class="headerlink" title="Stress"></a>Stress</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>economic pressure</td><td>经济压力</td></tr><tr><td>financial difficulties</td><td>财政困难</td></tr><tr><td>combine work and family commitments</td><td>协调好工作和家庭之间的关系</td></tr><tr><td>work commitments</td><td>工作投入</td></tr><tr><td>a fight schedule</td><td>时间很紧</td></tr><tr><td>find time</td><td>找到时间</td></tr><tr><td>put a severe strain on</td><td>对…施加更大的压力</td></tr><tr><td>reduce stress</td><td>减少压力</td></tr><tr><td>cope with stress</td><td>应付压力</td></tr><tr><td>a source of stress</td><td>压力的来源</td></tr><tr><td>feel stressed</td><td>感到压力</td></tr><tr><td>feel relaxed</td><td>感到轻松</td></tr><tr><td>cost of living</td><td>生活费用</td></tr><tr><td>material goods</td><td>物质的东西</td></tr><tr><td>avoid procrastination</td><td>避免拖延</td></tr><tr><td>time management skills</td><td>时间管理</td></tr></tbody></table><h2 id="Study-Abroad"><a href="#Study-Abroad" class="headerlink" title="Study Abroad"></a>Study Abroad</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>go overseas</td><td>到国外</td></tr><tr><td>study abroad</td><td>出国学习</td></tr><tr><td>in a globalized world</td><td>在全球化的世界中</td></tr><tr><td>from diverse backgrounds</td><td>来自不同背景</td></tr><tr><td>master another language</td><td>精通另一门语言</td></tr><tr><td>pick up a foreign language</td><td>学习一门外语</td></tr><tr><td>fluent in the first language</td><td>母语流利</td></tr><tr><td>immerse themselves in a foreign language</td><td>将他们自己浸泡在一门外语里</td></tr><tr><td>language skills</td><td>语言能力</td></tr><tr><td>multinational enterprises</td><td>跨国企业</td></tr><tr><td>prestigious universities</td><td>著名大学</td></tr><tr><td>expand horizons</td><td>开阔视野</td></tr><tr><td>have a broader view of life</td><td>人生的视野更加开阔</td></tr><tr><td>experience the world</td><td>感受世界</td></tr></tbody></table><h2 id="Talent"><a href="#Talent" class="headerlink" title="Talent"></a>Talent</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>specialize in a subject</td><td>专注于一个学科</td></tr><tr><td>study a subject</td><td>学习一门学科</td></tr><tr><td>career prospects</td><td>职业前景</td></tr><tr><td>well-paid jobs</td><td>待遇优厚的工作</td></tr><tr><td>career students</td><td>工作机会</td></tr><tr><td>develop a talent</td><td>发展特长</td></tr><tr><td>bright</td><td>聪明的学生</td></tr><tr><td>academically gifted</td><td>学习上有天赋</td></tr><tr><td>a natural talent in</td><td>在…方面天生的才能</td></tr><tr><td>mathematical talents</td><td>数学才能</td></tr><tr><td>do calculations</td><td>做计算</td></tr><tr><td>build expertise</td><td>建立专业知识</td></tr><tr><td>put … in an advantages position</td><td>把…放在有利位置</td></tr><tr><td>a tedious job</td><td>一个乏味的工作</td></tr></tbody></table><h2 id="Teachers-Schools"><a href="#Teachers-Schools" class="headerlink" title="Teachers/Schools"></a>Teachers/Schools</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>teach courses/subjects</td><td>教课</td></tr><tr><td>the school/education system</td><td>教育系统</td></tr><tr><td>receive a well-rounded education</td><td>学习全面的知识</td></tr><tr><td>start/attend school</td><td>上学</td></tr><tr><td>attend university</td><td>上大学</td></tr><tr><td>the school curriculum</td><td>学校课程/课程大纲</td></tr><tr><td>core subjects</td><td>主科</td></tr><tr><td>lively and stimulating</td><td>生动又新颖的</td></tr><tr><td>motivate children</td><td>激励孩子们</td></tr><tr><td>class activities</td><td>课堂活动</td></tr><tr><td>curriculum content</td><td>课程内容</td></tr><tr><td>learning outcomes</td><td>学习效果</td></tr></tbody></table><h2 id="Teamwork"><a href="#Teamwork" class="headerlink" title="Teamwork"></a>Teamwork</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>work collaboratively</td><td>一起工作</td></tr><tr><td>work closely with</td><td>和…密切合作</td></tr><tr><td>work as a team</td><td>一个团队一起工作</td></tr><tr><td>team projects</td><td>团队项目</td></tr><tr><td>team assignments</td><td>团队作业</td></tr><tr><td>team sport</td><td>团队运动</td></tr><tr><td>raising money for charity</td><td>为慈善机构筹款</td></tr><tr><td>collaborative teamwork</td><td>团队合作</td></tr><tr><td>save/shorten time</td><td>节省时间</td></tr><tr><td>divide the effort</td><td>分担任务</td></tr><tr><td>complete a project</td><td>完成项目</td></tr><tr><td>embark on another team project</td><td>开始另一个团队项目</td></tr><tr><td>make decisions as a group</td><td>团队一起做决定</td></tr></tbody></table><h2 id="Technology"><a href="#Technology" class="headerlink" title="Technology"></a>Technology</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>technological advances</td><td>科技的进步</td></tr><tr><td>state-funded scientific research</td><td>政府资助的科学研究</td></tr><tr><td>scientific institutions</td><td>科学机构</td></tr><tr><td>medical advances</td><td>医学进步</td></tr><tr><td>technological innovations</td><td>技术的创新</td></tr><tr><td>technological change</td><td>技术的改变</td></tr><tr><td>advanced technology</td><td>先进科技</td></tr><tr><td>new technology</td><td>新技术</td></tr><tr><td>cutting-edge technology</td><td>高新技术、前沿技术</td></tr><tr><td>technological breakthroughs</td><td>技术突破</td></tr><tr><td>the hi-tech industry</td><td>高新技术产业</td></tr><tr><td>improve the environment</td><td>保护环境</td></tr><tr><td>reduce diseases</td><td>减少疾病</td></tr><tr><td>fight hunger</td><td>较少饥荒</td></tr><tr><td>space technology</td><td>太空技术</td></tr></tbody></table><h2 id="Telecommunications"><a href="#Telecommunications" class="headerlink" title="Telecommunications"></a>Telecommunications</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>telecommunications technology</td><td>电信技术</td></tr><tr><td>use a mobile phone</td><td>使用移动电话</td></tr><tr><td>mobile devices</td><td>移动设备</td></tr><tr><td>text messages</td><td>短信</td></tr><tr><td>instant messages</td><td>即时消息</td></tr><tr><td>via email</td><td>通过电子邮件</td></tr><tr><td>on the phone</td><td>在手机上</td></tr><tr><td>on the computer</td><td>在电脑上</td></tr><tr><td>fax machines</td><td>传真机</td></tr><tr><td>online services</td><td>在线服务</td></tr><tr><td>the access to Internet services</td><td>接入互联网服务</td></tr><tr><td>travel by air</td><td>乘飞机旅行</td></tr><tr><td>maintain a lifelong relationship</td><td>保持终身的关系</td></tr><tr><td>forge a strong relationship</td><td>形成牢固的关系</td></tr><tr><td>stay in touch with</td><td>和…保持联系</td></tr></tbody></table><h2 id="Teleworking"><a href="#Teleworking" class="headerlink" title="Teleworking"></a>Teleworking</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>work from home</td><td>在家远程办公</td></tr><tr><td>work at home</td><td>在家工作</td></tr><tr><td>paperless office</td><td>使用现代办公设备（无纸办公室）</td></tr><tr><td>travel to and from work</td><td>上下班</td></tr><tr><td>show discipline</td><td>自律</td></tr><tr><td>stay self-motivated</td><td>保持积极性</td></tr><tr><td>show initiative</td><td>表现主动性</td></tr><tr><td>enter the workforce</td><td>参加工作</td></tr><tr><td>combine work and raising a family</td><td>兼顾工作和家庭</td></tr><tr><td>flexible working hours</td><td>灵活的工作时间</td></tr><tr><td>work commitments</td><td>工作的责任</td></tr><tr><td>sacrifice family life</td><td>牺牲家庭生活</td></tr></tbody></table><h2 id="Tourism"><a href="#Tourism" class="headerlink" title="Tourism"></a>Tourism</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>create revenues</td><td>产生收入</td></tr><tr><td>attract tourists</td><td>吸引游客</td></tr><tr><td>tourist attractions</td><td>旅游胜地</td></tr><tr><td>tourist destinations</td><td>旅游目的地</td></tr><tr><td>the tourist sector</td><td>旅游业</td></tr><tr><td>go sightseeing</td><td>去观光</td></tr><tr><td>a driver of economic growth</td><td>一个经济增长的驱动力</td></tr><tr><td>an important part of the economy</td><td>经济的重要组成部分</td></tr><tr><td>a source of income</td><td>收入来源</td></tr><tr><td>create jobs</td><td>创造就业机会</td></tr><tr><td>charge admission fees</td><td>收取门票</td></tr><tr><td>creative industry</td><td>创意产业</td></tr></tbody></table><h2 id="Traffic-Congestion"><a href="#Traffic-Congestion" class="headerlink" title="Traffic Congestion"></a>Traffic Congestion</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>reduce traffic congestion</td><td>减少交通阻塞</td></tr><tr><td>cope with traffic jams</td><td>处理交通阻塞</td></tr><tr><td>rush-hour traffic</td><td>高峰期的交通</td></tr><tr><td>cycle to work</td><td>骑自行车去上班</td></tr><tr><td>within walking distance</td><td>步行就可以到</td></tr><tr><td>driving test</td><td>驾照考试</td></tr><tr><td>driving license</td><td>驾驶执照</td></tr><tr><td>curb private car use</td><td>限制私人汽车的使用</td></tr><tr><td>car ownership</td><td>拥有汽车</td></tr><tr><td>fuel tax</td><td>汽油税</td></tr><tr><td>congestion tax</td><td>交通阻塞税</td></tr><tr><td>broaden roads</td><td>扩宽道路</td></tr><tr><td>build new roads</td><td>修路</td></tr><tr><td>raise standards</td><td>提升标准</td></tr><tr><td>use public transport</td><td>使用公共交通</td></tr><tr><td>pedestrianized streets</td><td>步行街</td></tr><tr><td>car pooling</td><td>拼车</td></tr><tr><td>reduce car emissions</td><td>减少汽车尾气</td></tr></tbody></table><h2 id="Transportation"><a href="#Transportation" class="headerlink" title="Transportation"></a>Transportation</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>drive cars</td><td>开车</td></tr><tr><td>travel by car</td><td>开车旅行</td></tr><tr><td>travel by air</td><td>坐飞机</td></tr><tr><td>travel by tube</td><td>坐地铁</td></tr><tr><td>private car use</td><td>私家车的使用</td></tr><tr><td>means/modes of travel</td><td>旅行方式</td></tr><tr><td>ways to get around</td><td>出行的方式</td></tr><tr><td>use public transport</td><td>使用公共交通工具</td></tr><tr><td>get to and from work</td><td>上下班</td></tr><tr><td>daily commuters</td><td>上班族</td></tr><tr><td>travel a long distance</td><td>走很长的路程</td></tr><tr><td>suburban commuters</td><td>郊区的上班族</td></tr><tr><td>travel to the central office</td><td>去中心办公区</td></tr></tbody></table><h2 id="Trees"><a href="#Trees" class="headerlink" title="Trees"></a>Trees</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>plant trees</td><td>种树</td></tr><tr><td>cut down trees</td><td>砍树</td></tr><tr><td>tree-lined avenues</td><td>林荫大道</td></tr><tr><td>lined with trees</td><td>（街道）两边种满了树</td></tr><tr><td>a view of nature</td><td>自然景观</td></tr><tr><td>feel close to nature</td><td>亲近自然</td></tr><tr><td>provide the shade</td><td>提供阴凉</td></tr><tr><td>provide shelter</td><td>提供休憩处</td></tr><tr><td>absorb dust</td><td>吸尘</td></tr><tr><td>ever-green trees</td><td>常青树</td></tr><tr><td>plant life</td><td>植物</td></tr><tr><td>flower garden</td><td>花园</td></tr></tbody></table><h2 id="University-Subjects"><a href="#University-Subjects" class="headerlink" title="University Subjects"></a>University Subjects</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>offer employment possibilities</td><td>提供就业机会</td></tr><tr><td>complete degree courses</td><td>完成学业</td></tr><tr><td>an investment of time and money</td><td>投入时间和金钱</td></tr><tr><td>take subject courses</td><td>上专业课</td></tr><tr><td>fill knowledge gap</td><td>填补（劳动力市场上的）知识空白</td></tr><tr><td>pursue a career</td><td>从事一份工作</td></tr><tr><td>vocational courses</td><td>职业课程</td></tr><tr><td>academic courses</td><td>学术课程</td></tr><tr><td>areas of knowledge</td><td>领域知识</td></tr><tr><td>preferred areas of study</td><td>偏爱的学习领域</td></tr><tr><td>match interests</td><td>符合兴趣</td></tr><tr><td>passionate about</td><td>对…有热情</td></tr><tr><td>study with enthusiasm</td><td>有兴趣去学习</td></tr><tr><td>develop talents</td><td>发掘天赋</td></tr><tr><td>career success</td><td>事业上的成功</td></tr><tr><td>financial circumstances</td><td>财政情况</td></tr></tbody></table><h2 id="Urbanization"><a href="#Urbanization" class="headerlink" title="Urbanization"></a>Urbanization</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>relocate to cities</td><td>搬去城市</td></tr><tr><td>employment opportunities</td><td>就业机会</td></tr><tr><td>keep pace with the demand</td><td>满足需求</td></tr><tr><td>reduce the quality of life</td><td>影响生活质量</td></tr><tr><td>afford home ownership</td><td>买得起房子</td></tr><tr><td>a growing population</td><td>不断增长的人口</td></tr><tr><td>population expansion</td><td>人口扩张</td></tr><tr><td>put pressure on</td><td>增加压力</td></tr><tr><td>public transport service</td><td>公共交通服务</td></tr><tr><td>transport costs</td><td>交通费用</td></tr><tr><td>population is mobile</td><td>人口是流动的</td></tr><tr><td>valuable/essential services</td><td>和民生有关的服务</td></tr></tbody></table><h2 id="Waste"><a href="#Waste" class="headerlink" title="Waste"></a>Waste</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>consumer goods/products</td><td>消费者商品</td></tr><tr><td>household goods</td><td>家庭用品</td></tr><tr><td>end up in landfill sites</td><td>填埋在垃圾场</td></tr><tr><td>contaminate the environment</td><td>污染环境</td></tr><tr><td>household waste/rubbish</td><td>家庭垃圾</td></tr><tr><td>industrial waste</td><td>工业浪费</td></tr><tr><td>drop litter</td><td>扔垃圾</td></tr><tr><td>dump waste</td><td>焚烧垃圾</td></tr><tr><td>dispose of waste</td><td>处理垃圾</td></tr><tr><td>enter the food chain</td><td>进入食物链</td></tr><tr><td>hazardous waste</td><td>有害的垃圾</td></tr></tbody></table><h2 id="Water"><a href="#Water" class="headerlink" title="Water"></a>Water</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>fresh water</td><td>淡水</td></tr><tr><td>tap water</td><td>自来水</td></tr><tr><td>a threat to public health</td><td>一个对公众健康的威胁</td></tr><tr><td>water pollution</td><td>水污染</td></tr><tr><td>contaminate water</td><td>污染水</td></tr><tr><td>underground water</td><td>地下水</td></tr><tr><td>heavily polluted</td><td>污染严重</td></tr><tr><td>boil water</td><td>开水</td></tr><tr><td>a clean water supply</td><td>一个干净的水源</td></tr><tr><td>poor sanitation</td><td>恶劣的卫生状况</td></tr><tr><td>bottled water</td><td>瓶装水</td></tr><tr><td>water consumption</td><td>耗水量</td></tr><tr><td>soil erosion</td><td>水土流失</td></tr><tr><td>efficiency in water use</td><td>有效用水</td></tr><tr><td>untreated sewage</td><td>未经处理的废水</td></tr></tbody></table><h2 id="Wildlife-Preservation"><a href="#Wildlife-Preservation" class="headerlink" title="Wildlife Preservation"></a>Wildlife Preservation</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>human activities</td><td>人类活动</td></tr><tr><td>poor farming practices</td><td>不好的耕种模式</td></tr><tr><td>destroy the forest</td><td>破坏森林</td></tr><tr><td>mine coal</td><td>开采煤田</td></tr><tr><td>oil drilling</td><td>开采石油</td></tr><tr><td>animal die out</td><td>动物灭绝</td></tr><tr><td>biodiversity loss</td><td>生物多样性下降</td></tr><tr><td>intensive farming</td><td>密集耕种</td></tr><tr><td>the loss of biodiversity</td><td>生物多样性的缺失</td></tr><tr><td>improve biodiversity</td><td>改善生物多样性</td></tr><tr><td>endangered species</td><td>濒危物种</td></tr><tr><td>rare animals</td><td>稀有物种</td></tr><tr><td>cause damage to the environment</td><td>对环境造成危害</td></tr><tr><td>toxic chemicals</td><td>有毒的化学品</td></tr><tr><td>habitat destruction</td><td>栖息地破坏</td></tr><tr><td>face a high risk of extinction</td><td>面临很高的灭绝风险</td></tr><tr><td>on the verge of extinction</td><td>濒临灭绝</td></tr></tbody></table><h2 id="Women-in-the-Workforce"><a href="#Women-in-the-Workforce" class="headerlink" title="Women in the Workforce"></a>Women in the Workforce</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>male-dominated industries</td><td>男性占主导地位的行业</td></tr><tr><td>clerical work</td><td>白领工作</td></tr><tr><td>juggle different roles</td><td>扮演不同角色</td></tr><tr><td>balance work and family commitments</td><td>平衡工作和家庭责任的关系</td></tr><tr><td>domestic responsibilities</td><td>家庭责任</td></tr><tr><td>domestic work</td><td>家务活</td></tr><tr><td>child-rearing duties</td><td>抚养孩子的责任</td></tr><tr><td>raise children</td><td>抚养孩子</td></tr><tr><td>high-paying industries</td><td>高薪行业</td></tr><tr><td>advance one’s career</td><td>发展某人的事业</td></tr><tr><td>a fulfilling career</td><td>令人满意的事业</td></tr><tr><td>career success</td><td>事业成功</td></tr><tr><td>maternity leave</td><td>产假</td></tr><tr><td>physically demanding jobs | manual work</td><td>体力活</td></tr><tr><td>career choices</td><td>职业选择</td></tr></tbody></table><h2 id="Work-Overtime"><a href="#Work-Overtime" class="headerlink" title="Work Overtime"></a>Work Overtime</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>work unsocial hours</td><td>非正常时间上班</td></tr><tr><td>work overtime</td><td>加班工作</td></tr><tr><td>work long hours</td><td>长时间工作</td></tr><tr><td>high-stress jobs</td><td>压力大的工作</td></tr><tr><td>lack of sleep | sleep deprivation</td><td>缺乏睡眠</td></tr><tr><td>suffer from insomnia</td><td>失眠</td></tr><tr><td>do exercise</td><td>运动</td></tr><tr><td>physical activity</td><td>身体锻炼</td></tr><tr><td>in poor health</td><td>身体状况不好</td></tr><tr><td>health problems</td><td>健康问题</td></tr></tbody></table><h2 id="Zoo"><a href="#Zoo" class="headerlink" title="Zoo"></a>Zoo</h2><table><thead><tr><th>词伙</th><th>释义</th></tr></thead><tbody><tr><td>animal in captivity</td><td>被关住的动物</td></tr><tr><td>locked in cages</td><td>被关在笼子里</td></tr><tr><td>lose freedom</td><td>失去自由</td></tr><tr><td>freedom is restricted</td><td>自由受到限制</td></tr><tr><td>natural behavior</td><td>天生的行为</td></tr><tr><td>hunting instincts</td><td>狩猎的天性</td></tr><tr><td>fierce animals</td><td>猛兽</td></tr><tr><td>reintroduce species</td><td>将动物放回（野外）</td></tr><tr><td>in the wild</td><td>在野外</td></tr><tr><td>human-caused disturbances</td><td>人类（对动物造成）的干扰</td></tr><tr><td>artificial environment</td><td>人工环境</td></tr><tr><td>illegal hunting</td><td>非法狩猎</td></tr><tr><td>exhibit animals</td><td>展出动物</td></tr><tr><td>animal testing</td><td>动物实验</td></tr><tr><td>kill animals for meat</td><td>杀动物来吃肉</td></tr><tr><td>raise pets</td><td>养宠物</td></tr></tbody></table><blockquote><p>码字太累了，前前后后耗时四个月哈哈哈，不过边码字边记背，也挺不错的，而且还能练习打字速度哈哈哈，机考党狂喜~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office三剑客相关问题合集</title>
      <link href="posts/bf33e044/"/>
      <url>posts/bf33e044/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>收集了我使用微软Office办公软件时常见问题的解决方案</p></blockquote><h1 id="Office-所有办公软件"><a href="#Office-所有办公软件" class="headerlink" title="Office 所有办公软件"></a>Office 所有办公软件</h1><h2 id="Office-显示文件修复不了怎么办？"><a href="#Office-显示文件修复不了怎么办？" class="headerlink" title="Office 显示文件修复不了怎么办？"></a>Office 显示文件修复不了怎么办？</h2><p>我在网上搜索了很多方法，对我来说没有半点用，大概分为两种：</p><ol><li><p>将受保护的视图的权限全部勾掉</p></li><li><p>右键文件属性取消阻止/解除锁定，第一种方法没有用，第二种，我右键根本没有选项。之所会 Office 文件修复不了，是因为很大可能对方传给你的文件是用 WPS 编辑的，两者不兼容</p></li></ol><p><strong>解决办法</strong>：<br>在 Office 文件内点击另存为，然后打开另存为后的文件，即为正常打开。</p><h2 id="🔥激活-Office-软件"><a href="#🔥激活-Office-软件" class="headerlink" title="🔥激活 Office 软件"></a>🔥激活 Office 软件</h2><p>强推以下良心教程👍</p><p>视频教程：<a href="https://www.bilibili.com/video/BV1Lf4y1S7e2/?spm_id_from=autoNext">Office Tool Plus 系列教程之白嫖Office</a></p><p>安装教程：<a href="https://www.coolhub.top/archives/11">[安装 Office] Office Tool Plus 入门教程</a></p><p>激活教程：<a href="https://www.coolhub.top/archives/14">[激活 Office] Office Tool Plus 入门教程</a></p><h1 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h1><p><a href="https://jingyan.baidu.com/article/5d6edee2b4503c99eadeecc0.html">word怎样自动生成目录</a></p><p><a href="https://blog.csdn.net/lord_is_layuping/article/details/90959617">word中设置标题级别的快捷键</a></p><p><a href="https://zhidao.baidu.com/question/1500418098791106499.html">word插入图片显示不全</a></p><p><a href="https://jingyan.baidu.com/article/495ba84124f17479b30edec2.html">怎么在word中插入一张横向文档</a></p><p><a href="https://jingyan.baidu.com/article/ce4366494f80023772afd34e.html">word 文档中代码块样式制作</a></p><h3 id="Word文档缩小时显示多页"><a href="#Word文档缩小时显示多页" class="headerlink" title="Word文档缩小时显示多页"></a>Word文档缩小时显示多页</h3><p>步骤：</p><ol><li>点击右下角<strong>缩放比按钮</strong></li><li>点击<strong>多页</strong>按钮</li></ol><p>参考教程：<a href="https://jingyan.baidu.com/article/48b37f8ddc4cbb1a646488b9.html">设置word缩放时，可以显示多页</a></p><h1 id="PPT"><a href="#PPT" class="headerlink" title="PPT"></a>PPT</h1><p>暂无</p><h1 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h1><p>暂无</p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 👓Win10 </tag>
            
            <tag> 💼工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美式黑人口语</title>
      <link href="posts/e43a6529/"/>
      <url>posts/e43a6529/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不知道喜欢听黑怕的友友们，尤其还听美式黑怕的，或者玩过 GTA 的，有没有想到过要模仿老黑说英语的那个范儿，个人感觉是特别酷且有趣的事情。本篇收集并总结了一些美式黑人常用口语（部分不限于美国黑人，其他英语母语者也会使用），本篇仅当图一乐，不要在歪果仁面前胡用噢~</p><p>本篇内容含有粗鄙之语，可能会引起不适，请谨慎食用（dog.jpg）</p></blockquote><h1 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h1><h2 id="朋友，兄弟"><a href="#朋友，兄弟" class="headerlink" title="朋友，兄弟"></a>朋友，兄弟</h2><ol><li><p>bro / bruh</p></li><li><p>son</p><p>这里虽说翻译过来是儿子，但歪果仁所表达的含义就是兄弟，他们可没有喜欢互相当爹的习惯。</p></li><li><p>dog / dawg</p><p>小弟，兄弟之意。硬要直译的话，我觉得狐朋狗友比较贴切。</p></li><li><p>homie / homes</p></li><li><p>buddy</p></li><li><p>dude</p></li></ol><h2 id="美女"><a href="#美女" class="headerlink" title="美女"></a>美女</h2><ol><li>shortie</li><li>hottie</li><li>bae</li><li>beautiful</li><li>gorgeous</li><li>sexy</li></ol><blockquote><p>形容词做名词使用，类似于 the old（老人）</p></blockquote><h2 id="厉害，酷毙了"><a href="#厉害，酷毙了" class="headerlink" title="厉害，酷毙了"></a>厉害，酷毙了</h2><ol><li>dope</li><li>sick</li><li>legit</li><li>sweet</li><li>phat</li><li>lit</li><li>kickin’</li></ol><h2 id="其他常见单词-俚语"><a href="#其他常见单词-俚语" class="headerlink" title="其他常见单词/俚语"></a>其他常见单词/俚语</h2><ol><li><p>eye-popping / jaw-dropping</p><p>令人震惊的，目瞪口呆的，瞠目结舌的</p></li><li><p>ditch</p><p>抛下，摆脱</p></li><li><p>ball</p><p>美好时光</p><p><strong>造句</strong>：</p><ul><li>we had a ball last night at the party（昨晚的派对也太炸了吧）</li></ul></li><li><p>digits</p><p>电话号码（数字）</p></li></ol><br><h1 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h1><h2 id="打招呼"><a href="#打招呼" class="headerlink" title="打招呼"></a>打招呼</h2><blockquote><p>官方用语：how are you</p><p>我将称之为美式黑人口语最基本的元素 – 打招呼</p></blockquote><ol><li><p>What’s up?</p><p>咋样？</p><p>还有很多缩写方式，如：Wassup、Wazzup、Sup 等</p></li><li><p>How u doin’?</p><p>最近咋样？</p></li><li><p>What’s goin’ on?</p><p>发生甚么事了？（也可用来打招呼）</p></li><li><p>What’s good</p><p>怎么样？（也是打招呼常用）</p></li><li><p>What’s poppin’ yo</p></li></ol><h2 id="表示惊讶"><a href="#表示惊讶" class="headerlink" title="表示惊讶"></a>表示惊讶</h2><ol><li><p>holy sh*t / holy crap</p><ul><li><p>天哪</p></li><li><p>见鬼了</p></li><li><p>我靠</p></li></ul></li><li><p>wtf</p><ul><li>卧槽</li></ul><p>也就是我们常看到的<del>王德发</del></p></li><li><p>Jesus Crist / oh jeez / oh geez</p><ul><li>我的天哪</li></ul><p>直接喊出耶稣基督的名字，意思类似于我的天哪</p></li><li><p>omg / oh my gosh / oh my goodness / oh my godness</p><ul><li>我的天哪</li></ul><p>这三种表达没有那么“黑化”，在英语母语者面前是通用的</p></li></ol><h2 id="不用谢"><a href="#不用谢" class="headerlink" title="不用谢"></a>不用谢</h2><blockquote><p>官方用语：you’re welcome</p></blockquote><ol><li><p>It’s all good man, no worries</p><ul><li>整挺好，别担心</li></ul></li><li><p>Yeah, no problem man, u got it</p><ul><li>害，没关系，兄弟</li></ul></li><li><p>Come on man, no big deal, u nam mean?</p><ul><li>别这样兄弟，没什么大不了的啦，晓得我意思伐？</li></ul></li></ol><h2 id="其他常见句子-俚语"><a href="#其他常见句子-俚语" class="headerlink" title="其他常见句子/俚语"></a>其他常见句子/俚语</h2><ol><li><p>Man, u outta ur goddamn mind?</p><ul><li><p>侬脑子瓦特了？</p></li><li><p>你疯了？</p></li></ul></li><li><p>Whachu doin’ foo</p><ul><li>你搁这干啥呢？</li></ul></li><li><p>u nam sayin’</p><ul><li>你晓得我在说啥子事情噢？</li><li>你造吗？</li></ul></li><li><p>u nam mean</p><ul><li>懂我意思？</li><li>晓得不？</li></ul></li><li><p>I ain’t got no time for da</p><ul><li>我没得啥子时间做那事儿哟</li></ul><p>这里是常见的双重否定，与中文不同，这里的双重否定有加强否定语气的作用</p></li><li><p>&lt;XXX&gt; before I blast/smash/smack/kick/… ur ass</p><ul><li>在我揍你之前，&lt;XXX&gt;</li></ul><p><strong>造句</strong>：</p><ul><li>u should stay at home before I blast ur ass（你该待在家里，否则我干 s 你）</li><li>get ur ass over here before I smash ur ass（最好给我滚过来，否则我揍 s 你）</li></ul></li><li><p>You got ten seconds to get the fxxk out my face before I kill you</p></li><li><p>y’all know what time is it</p><ul><li>你们知道现在是该干什么的时间吗？</li></ul><p>一般不是真的在问时间哈，通常被问者会回答<u>现在是游戏时间</u>或<u>现在是我们的 show time</u> 之类的相似表达</p></li><li><p>Imma smack the sh*t outta ur ass</p><ul><li>我要把你打出翔来</li></ul></li><li><p>U wanna hit the bar / club tonight?</p><ul><li>晚上想去酒吧/夜店吗？</li></ul></li><li><p>Get the hell outta here, foo</p><ul><li>给我爬，憨批</li></ul></li><li><p>Shut the f**k up</p><ul><li>闭嘴</li></ul></li></ol><br><h1 id="常见缩写"><a href="#常见缩写" class="headerlink" title="常见缩写"></a>常见缩写</h1><blockquote><p>附带些常用缩写叭，以防想了解的友友们看不懂句子</p></blockquote><table><thead><tr><th>缩写</th><th>全称</th></tr></thead><tbody><tr><td>u / ya</td><td>you</td></tr><tr><td>ur</td><td>your</td></tr><tr><td>yup</td><td>yes / yeah</td></tr><tr><td>prolly</td><td>probably</td></tr><tr><td>cuz</td><td>because</td></tr><tr><td>doin’（包括所有带 in’ 的单词）</td><td>doing <br>（因为他们不发后鼻音，故把 ing 写成 in’ ）</td></tr><tr><td>da / dat</td><td>that</td></tr><tr><td>dawg</td><td>dog</td></tr><tr><td>bro / bruh</td><td>brother</td></tr><tr><td>sis</td><td>sister</td></tr><tr><td>mula</td><td>money</td></tr><tr><td>dola</td><td>dollar</td></tr><tr><td>ya’ll</td><td>you will</td></tr><tr><td>y’all</td><td>you all</td></tr><tr><td>outta</td><td>out of</td></tr><tr><td>gotta</td><td>get to / got to</td></tr><tr><td>gotcha</td><td>got you / got it</td></tr><tr><td>gonna / gon’</td><td>going to</td></tr><tr><td>wanna</td><td>want to</td></tr><tr><td>tryna</td><td>trying to</td></tr><tr><td>kinna</td><td>kind of</td></tr><tr><td>lemme</td><td>let me</td></tr><tr><td>gimme</td><td>give me</td></tr><tr><td>omg</td><td>oh my god</td></tr><tr><td>wtf</td><td>what the f**k</td></tr><tr><td>Imma</td><td>I am going to</td></tr><tr><td>u nam sayin’</td><td>you know what I’m saying</td></tr><tr><td>u nam mean</td><td>you know what I mean</td></tr></tbody></table><h1 id="和谐表达"><a href="#和谐表达" class="headerlink" title="和谐表达"></a>和谐表达</h1><blockquote><p>神马是和谐表达？就好比咋们中文里的<code>卧槽</code>、<code>煞笔</code>，其实这种和谐表达咋们见多了还是感觉有点不适，但像<code>我草</code>就有很多更和谐的表达，索性不谐音，直接换韵母或声调一样的词，如十年前的<code>我靠</code>、<code>我擦</code>、<code>我去</code>到近几年的<code>我丢</code>、<code>我透</code>、<code>我淦</code>。</p></blockquote><table><thead><tr><th>和谐前</th><th>和谐后</th></tr></thead><tbody><tr><td>f**k</td><td>fudge</td></tr><tr><td>what the f**k</td><td>what the frick</td></tr><tr><td>what the hell</td><td>what the heck</td></tr><tr><td>oh sh*t</td><td>oh shoot</td></tr></tbody></table><br><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>B 站 UP 主<a href="https://space.bilibili.com/410226356">Musti 撕口语</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎉图一乐 </tag>
            
            <tag> 🙉说唱 </tag>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库笔记</title>
      <link href="posts/aaba1da3/"/>
      <url>posts/aaba1da3/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.hassanwong.top/#/Notes/Database/C1">传送门🌀</a></p>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📁数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络笔记</title>
      <link href="posts/db0b4310/"/>
      <url>posts/db0b4310/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.hassanwong.top/#/Notes/Computer_Network/C1">传送门🌀</a></p>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📶计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些实用且易忘的CSS属性</title>
      <link href="posts/d1f4fb49/"/>
      <url>posts/d1f4fb49/</url>
      
        <content type="html"><![CDATA[<blockquote><p>去年跟着 B 站 Pink 老师学过 CSS 基本语法，但平时美化博客时还是会遇到一些 CSS 相关问题，所以再此记录下。</p></blockquote><h2 id="让-a-标签铺满整个-div"><a href="#让-a-标签铺满整个-div" class="headerlink" title="让 a 标签铺满整个 div"></a>让 a 标签铺满整个 div</h2><blockquote><p>有时候希望点击 div 同时跳转到对应链接，奈何 a 的大小取决于文本大小，但可使用以下方法来铺满整个父盒子，前提是 div 里只有 a 标签一个内容。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="文字颜色渐变"><a href="#文字颜色渐变" class="headerlink" title="文字颜色渐变"></a>文字颜色渐变</h2><p><code>background: -webkit-linear-gradient(...)</code>为文本元素提供渐变背景。</p><p><code>webkit-text-fill-color: transparent</code>使用透明颜色填充文本。</p><p><code>webkit-background-clip: text</code>用文本剪辑背景，用渐变背景作为颜色填充文本。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">Custom</span> &gt; &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, #<span class="number">8</span>a7cfb <span class="number">50%</span>, #<span class="number">633</span>e9c);</span><br><span class="line">  <span class="attribute">-webkit-background-clip</span>: text;</span><br><span class="line">  <span class="attribute">-webkit-text-fill-color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="毛玻璃特效"><a href="#毛玻璃特效" class="headerlink" title="毛玻璃特效"></a>毛玻璃特效</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>: <span class="selector-id">#ffffffcc</span> !<span class="selector-tag">important</span>;</span><br><span class="line"><span class="selector-tag">backdrop-filter</span>: <span class="selector-tag">saturate</span>(160%) <span class="selector-tag">blur</span>(10<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure><br><h2 id="input-输入框字体样式"><a href="#input-输入框字体样式" class="headerlink" title="input 输入框字体样式"></a>input 输入框字体样式</h2><h3 id="placeholder"><a href="#placeholder" class="headerlink" title="placeholder"></a>placeholder</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Chrome/Opera/Safari */</span></span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Firefox 19+ */</span></span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-ms-input-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* IE 10+ */</span></span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:-moz-placeholder</span> &#123;</span><br><span class="line">  <span class="comment">/* Firefox 18- */</span></span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="focus-聚焦"><a href="#focus-聚焦" class="headerlink" title="focus 聚焦"></a>focus 聚焦</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="取消-input-的边框"><a href="#取消-input-的边框" class="headerlink" title="取消 input 的边框"></a>取消 input 的边框</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="selector-tag">outline</span>: <span class="selector-tag">none</span>;</span><br></pre></td></tr></table></figure><br><h2 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h2><ul><li><p>scroll-track—— 滚动条轨道</p></li><li><p>scrollbar-thumb—— 滚动条滑块</p></li><li><p>scrollbar-button—— 滚动条按钮</p></li><li><p>scrollbar-corner—— 滚动角</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*css主要部分的样式*/</span></span><br><span class="line">/定义滚动条宽高及背景，宽高分别对应横竖滚动条的尺寸 / ::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="selector-tag">width</span>: 10<span class="selector-tag">px</span>; <span class="comment">/*对垂直流动条有效*/</span></span><br><span class="line">  <span class="selector-tag">height</span>: 10<span class="selector-tag">px</span>; <span class="comment">/*对水平流动条有效*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滚动条的轨道颜色、内阴影及圆角*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: rosybrown;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滑块颜色、内阴影及圆角*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#e8e8e8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义两端按钮的样式*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: cyan;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义右下角汇合处的样式*/</span></span><br><span class="line"><span class="selector-pseudo">::-webkit-scrollbar-corner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: khaki;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="文字超出隐藏并显示省略号"><a href="#文字超出隐藏并显示省略号" class="headerlink" title="文字超出隐藏并显示省略号"></a>文字超出隐藏并显示省略号</h2><p>white-space 👉 处理元素空白，常用值有：nowrap 不换行，其他还有 pre-line、pre-wrap 等<br>word-break 👉 在合适的点断行。常用值有 break-all 可以在单词内换行，keep-all 只能在半角空格或连字符处换行。我们需要超出盒子部分就换行，所以用 break-all。<br>box-orient 👉 子元素如何排列。值有 vertical 和 horizontal，分别是垂直排列和水平排列。<br>line-clamp 👉 控制文本行数。</p><h3 id="单行（一定要有宽度）"><a href="#单行（一定要有宽度）" class="headerlink" title="单行（一定要有宽度）"></a>单行（一定要有宽度）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 200<span class="selector-tag">rpx</span>;</span><br><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"><span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br></pre></td></tr></table></figure><h3 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">word-break</span>: <span class="selector-tag">break-all</span>;</span><br><span class="line">display: -webkit-box; // 自适应布局</span><br><span class="line">-webkit-line-clamp: 2; // 文本行数最多2行</span><br><span class="line">-webkit-box-orient: vertical; // 子元素垂直排列</span><br><span class="line">overflow: hidden; // 超出部分隐藏</span><br></pre></td></tr></table></figure><br><h2 id="控制-div-内的元素自动换行"><a href="#控制-div-内的元素自动换行" class="headerlink" title="控制 div 内的元素自动换行"></a>控制 div 内的元素自动换行</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">word-wrap: break-word; // 允许长单词换行到下一行</span><br><span class="line">word-break：break-all; // 在哪儿换行都行，在单词内换行都行</span><br></pre></td></tr></table></figure><br><h2 id="纯-CSS-画三角形"><a href="#纯-CSS-画三角形" class="headerlink" title="纯 CSS 画三角形"></a>纯 CSS 画三角形</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">Custom</span> &gt; &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="绝对定位元素居中（水平和垂直方向）"><a href="#绝对定位元素居中（水平和垂直方向）" class="headerlink" title="绝对定位元素居中（水平和垂直方向）"></a>绝对定位元素居中（水平和垂直方向）</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">Cuttom</span> &gt; &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表格边框合并"><a href="#表格边框合并" class="headerlink" title="表格边框合并"></a>表格边框合并</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>,</span><br><span class="line"><span class="selector-tag">tr</span>,</span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#131415</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="颜色透明度-16-进制对照表"><a href="#颜色透明度-16-进制对照表" class="headerlink" title="颜色透明度 16 进制对照表"></a>颜色透明度 16 进制对照表</h2><blockquote><p>比如：<code>#FFFFFFE6</code>，效果等同于 <code>rgba(255, 255, 255, 0.9)</code></p></blockquote><table><thead><tr><th>百分比</th><th>十六进制</th></tr></thead><tbody><tr><td>100%</td><td>FF</td></tr><tr><td>90%</td><td>E6</td></tr><tr><td>80%</td><td>CC</td></tr><tr><td>70%</td><td>B3</td></tr><tr><td>60%</td><td>99</td></tr><tr><td>50%</td><td>80</td></tr><tr><td>40%</td><td>66</td></tr><tr><td>30%</td><td>4D</td></tr><tr><td>20%</td><td>33</td></tr><tr><td>10%</td><td>1A</td></tr></tbody></table><br><h2 id="图片填充方式"><a href="#图片填充方式" class="headerlink" title="图片填充方式"></a>图片填充方式</h2><blockquote><p>当图片比例不固定时，想要让图片自适应，一般都会用 background-size:cover/contain，但是这个只适用于背景图。</p></blockquote><p>img 有个属性<code>object-fit</code><br>属性值：object-fit: fill / contain / cover / none / scale-down;</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>fill</td><td>默认值。内容拉伸填满整个 content box, 不保证保持原有的比例</td></tr><tr><td>contain</td><td>保持原有尺寸比例。长度和高度中短的那条边跟容器大小一致，长的那条等比缩放，可能会有留白</td></tr><tr><td>cover</td><td>保持原有尺寸比例。宽度和高度中长的那条边跟容器大小一致，短的那条等比缩放。可能会有部分区域不可见</td></tr><tr><td>none</td><td>保持原有尺寸比例。同时保持替换内容原始尺寸大小</td></tr><tr><td>scale-down</td><td>保持原有尺寸比例,如果容器尺寸大于图片内容尺寸，保持图片的原有尺寸，不会放大失真；容器尺寸小于图片内容尺寸，用法跟 contain 一样</td></tr></tbody></table><h2 id="背景图片填充方式"><a href="#背景图片填充方式" class="headerlink" title="背景图片填充方式"></a>背景图片填充方式</h2><p>参考文章：<a href="https://www.imooc.com/article/27797">聊聊CSS背景图片的几种填充类型</a></p><br><h2 id="修改选中文本颜色与背景色"><a href="#修改选中文本颜色与背景色" class="headerlink" title="修改选中文本颜色与背景色"></a>修改选中文本颜色与背景色</h2><p>使用css3 <code>::selection</code>属性，该属性用于匹配元素中被用户选中或处于高亮状态的部分，并且支持修改匹配元素的<code>color</code>, <code>background</code>, <code>cursor</code>,和<code>outline</code>属性</p><br><h2 id="li、ol、ul标签去掉前面的点"><a href="#li、ol、ul标签去掉前面的点" class="headerlink" title="li、ol、ul标签去掉前面的点"></a>li、ol、ul标签去掉前面的点</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><br><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="https://blog.juanertu.com/archives/59df034f.html">那些你总是要用却又死活记不住的 css 属性</a></li><li><a href="http://www.divcss5.com/css3-style/c56614.shtml">css 文字颜色渐变的三种实现方式</a></li><li><a href="https://blog.csdn.net/jw_66666/article/details/103310808">颜色透明度 16 进制对照表</a></li><li><a href="https://www.cnblogs.com/zly430/p/11375247.html">css 图片填充的几种方式</a></li><li><a href="https://www.cnblogs.com/echolun/p/11307775.html">CSS修改选中文本颜色与背景色</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝前端 </tag>
            
            <tag> 🌺CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灵魂拷问：为什么有人中英文夹杂着说话？</title>
      <link href="posts/60ae04a4/"/>
      <url>posts/60ae04a4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为转载内容，来自B站UP主<code>他塔拉</code></p><p>原视频地址：<a href="https://www.bilibili.com/video/BV1yJ41117iF?zw">灵魂拷问: 为什么有人中英文夹杂着说话？会多种语言会混吗？</a></p><p><a href="/cc">版权协议</a></p></blockquote><h2 id="原视频"><a href="#原视频" class="headerlink" title="原视频"></a>原视频</h2><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=76374481&bvid=BV1yJ41117iF&cid=130639041&page=1&as_wide=1&high_quality=1&danmaku=1" frameborder="no" scrolling="no" allowfullscreen="true"> </iframe></div><h2 id="博主观后感"><a href="#博主观后感" class="headerlink" title="博主观后感"></a>博主观后感</h2><blockquote><p>整理了视频中提到的要点，外加自己的见解与看法。</p></blockquote><p><strong>中英文夹杂着说的原因有哪些</strong>？</p><ol><li><p><strong>多语言系统同时运作</strong></p><p> 一个人说话时，大脑的语言系统是同步运作的，并不能保证面对不同的人，大脑完全输出相对应的语言。比如你和外地朋友用普通话聊天时，一不小心说成方言其实很正常，英语及其它语言亦是如此，这是因为有些常用语句你从小到大习惯了用方言去表达，在那一瞬间你的大脑需要飞速运转，并做出一个理智的选择，这是很难的。</p></li><li><p><strong>突然转换语境，反应慢</strong></p><p> 这种情况多针对于留学生，比如刚上完课，大脑还停留在纯外语环境中，这时突然和中国同学讲话或者和家人煲个电话粥时，大脑会有时反应不过来。</p></li><li><p><strong>国外的常见表达</strong></p><p> 这种情况仍针对于留学生，比如essay论文、report报告、presentation演讲等词，你大多数时间接触该类事物的都是英语表达，所以很难一瞬间为了去说中文而翻译成一句完整的中文表达给别人。</p></li><li><p><strong>以英文形式出现</strong><img align="right" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/English/Quokka.jpg"/></p><p> 就是说你第一次见到这个词是以英文形式出现。想象一个场景，你去澳洲动物园游玩，看到有个种类叫Quokka的小动物很可爱，在你跟你朋友介绍时会脱口而出它的英文名，而不是“短尾矮袋鼠”这五个大字，何况全世界只有澳洲有这种动物，说了你朋友也未必能懂。</p></li><li><p><strong>为了偷懒</strong></p><p> 比如Offer这个词，留学生和求职者使用较多。当你和家人同学聊这件事的时候，会不由自主潜意识地选择Offer来代替“录取通知书”，其实和Quokka例子很类似。</p></li><li><p><strong>择优选择</strong></p><p> 有时候用英文表达可能比母语表达更贴切或更适合，这个因人而异。有些表达的确需要用到英语，而且用中文讲会很奇怪，一时我想不出什么好🌰。</p></li><li><p><strong>母语羞涩</strong></p><p> 有时候你和别人谈话时会说到一些令人周围人感到的尴尬的词，你可能会下意识或主动用其他方式来委婉表达，或用其他语言来代替。比如我就可能有时候会选择用英语来委婉表达我的愤怒ヽ(#`Д´)ﾉ</p></li><li><p>🔥<strong>确实在装X</strong></p><p> 看到这里，<del>有些朋友露出了慈祥的笑容</del>，前面都是些比较小众的原因，<u>不具有普适性</u>。<strong>那怎么看出Ta是否在装X呢？</strong>首先看Ta是否是留学生、在国外待了多久、英语能力如何，对于那个群体来说，有时候语言环境一时半会转变不过来是可以理解的。第二点也是最实用的鉴别方式，<u>看词性</u>，一般名词容易被外语代替，比如刚才提到的Quokka，其次是形容词、动词，如果连介词和副词都要用英文代替纯属没必要了，比如：我at图书馆，正在happily写作业。当然还有些人可能是故意说着玩，笑一笑就过去了hh，请勿太认真。</p></li></ol><br><p>其实我本身也习惯于双语夹杂着表达，因为我这几年对英语突然有了一定的兴趣且当前正在备考IELTS，所以在思考一些生活问题时，会情不自禁地想用英文去表达。和朋友聊天时，经常会有那么一瞬间想用英语来表达，但多数被我忍住了，毕竟目前那些英语表达还没深入到我的骨髓。有时发动态、写博文时会稍微有点放飞自我，想到什么表达就写什么，无论什么语言。其实写本篇的目的首先是表达对这位UP主的解释深有同感，能够 get 到她的点，毕竟我本身也是不希望被他人误扣上装X的帽子；其次也是给大伙提供一些视角和维度来更好的去思考看待这个问题。</p><p>Peace&amp;Love ヾ(ｏ･ω･)ﾉ</p>]]></content>
      
      
      <categories>
          
          <category> 👍优质转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>控制台输出字符画-程序员的浪漫</title>
      <link href="posts/7a58550e/"/>
      <url>posts/7a58550e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不知道友友们逛 B 站时有没有注意到它控制台输出的字符画（<del>正经人逛 B 站谁会按 F12</del>），看完我瞬间嘴角上扬数秒。字符画如彩蛋般的出现在眼前，还能丰富网站的维度，一个优秀的网站也许在某个不起眼的角落也能带给你惊喜。</p></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Character_Drawing/image-20210526203637388.png" alt="B站控制台输出"></p><div class="note warning no-icon flat"><p>食用教程前，建议先看一下<a href="https://hassanwong.top/posts/223fd004/">《教程&amp;笔记常量申明》</a>，且所有修改对<strong>缩进格式</strong>等有严格要求。本教程主要针对 Butterfly 主题博客网站，若是其它主题或非博客类网站，可以借鉴下思路，很简单。</p></div><p>话不多说，let’s get started!</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><ol><li><p>新建 JS 文件<code>&lt;Custom&gt;.js</code>，代码模板如下，懂 JS 的友友可以自定义改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.console) &#123;</span><br><span class="line">  <span class="built_in">Function</span>.prototype.makeMulti = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> l = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="built_in">this</span>);</span><br><span class="line">    l = l.substring(l.indexOf(<span class="string">&quot;/*&quot;</span>) + <span class="number">3</span>, l.lastIndexOf(<span class="string">&quot;*/&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> string = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">我是字符画</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="built_in">console</span>.log(string.makeMulti());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note green no-icon flat"><p>代码中<code>我是字符画</code>处用来放自定义字符画</p></div></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\_config.yml</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+- &lt;script defer type=&quot;text/javascript&quot; src=&quot;&lt;FilePath_Custom.js&gt;&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连后，再按下<code>F12</code>或<code>Ctrl + Shift + C</code>即可看到效果。先康康我站的效果。</p></li></ol><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Character_Drawing/image-20210526205729916.png" alt="我站控制台输出效果"></p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><blockquote><p>提供一些思路</p></blockquote><ol><li><p>字符画下面可以继续添加一些自定义文字（在刚才新建的 JS 文件里继续加）</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    */ &#125;</span><br><span class="line">    console.log(string.makeMulti());</span><br><span class="line"><span class="addition">+console.log(&quot;&lt;Custom&gt;&quot;);</span></span><br></pre></td></tr></table></figure></li><li><p>自定义控制台的字体样式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;&lt;Custom&gt; %c &lt;Custom&gt;&quot;</span>, <span class="string">&quot;&lt;样式代码&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>注意：样式代码只涉及 <code>%c</code> 符号后的文字</p><p>比如我控制台中<code>欢迎访问Hassan&#39;s Blog</code>的字体样式代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;欢迎访问%cHassan&#x27;s Blog&quot;</span>, <span class="string">&quot;color:#81D8CF;font-weight:bold&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="可能出现的八阿哥"><a href="#可能出现的八阿哥" class="headerlink" title="可能出现的八阿哥"></a>可能出现的八阿哥</h2><p>如果你使用了 Gulp 压缩，记得把<code>&lt;Custom.js&gt;</code>文件排除掉，否则你的字符画会被当做注释清除。</p><p>修改<code>&lt;BlogRoot&gt;\gulpfile.js</code>即可</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//压缩js</span><br><span class="line">gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line">  gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;])</span><br><span class="line"><span class="addition">+ gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;, &#x27;!./public/&lt;FilePath_Custom.js&gt;&#x27;])</span></span><br><span class="line">    .pipe(babel(&#123;</span><br><span class="line">      presets: [&#x27;@babel/preset-env&#x27;]</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(uglify().on(&#x27;error&#x27;, function (e) &#123;</span><br><span class="line">      console.log(e)</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>最后推荐上几个与字符画相关的网站 👇</p><h3 id="生成字符画"><a href="#生成字符画" class="headerlink" title="生成字符画"></a>生成字符画</h3><p><strong>根据文字生成字符画：</strong></p><ul><li><a href="http://patorjk.com/software/taag">http://patorjk.com/software/taag</a></li></ul><p><strong>根据图片生成字符画：</strong></p><ul><li><p><a href="http://www.degraeve.com/img2txt.php">http://www.degraeve.com/img2txt.php</a></p></li><li><p><a href="http://life.chacuo.net/convertphoto2char">http://life.chacuo.net/convertphoto2char</a></p></li></ul><p><strong>根据流程图生成字符画：</strong></p><ul><li><a href="https://link.jianshu.com?t=http://asciiflow.com/">http://asciiflow.com/</a></li></ul><h3 id="字符画素材"><a href="#字符画素材" class="headerlink" title="字符画素材"></a>字符画素材</h3><ul><li><p><a href="http://fuhao.tuwenla.com/xiaowenzihui.html">小型符号图案、字符画大全</a></p></li><li><p>搜狗输入法自带颜文字，其中<code>大颜</code>板块都是字符画（<del>没想到吧，被大家忽视这么多年</del>）</p></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://www.cnblogs.com/smart-girl/p/12595744.html">使用 console.log 打印公司招聘信息和字符画</a></p></li><li><p><a href="https://www.jianshu.com/p/fca56d635091">资源：在线生成 ascii 字符画网站</a></p></li></ul><br><blockquote><p>结束语：</p><p>若是有疑问或教程相关补充欢迎留言。期待看到友友们独一无二的字符画设计。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于有人把内卷讲明白了</title>
      <link href="posts/49f4d334/"/>
      <url>posts/49f4d334/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文为转载内容，来自微信公众号<code>CSDN企业招聘</code></p><p>原文地址：<a href="https://mp.weixin.qq.com/s/luPHXaU3CcytHyonCZbSog">终于有人把内卷讲明白了</a></p><p><a href="/cc">版权协议</a></p></blockquote><br><h1 id="小镇的故事"><a href="#小镇的故事" class="headerlink" title="小镇的故事"></a><p align="center">小镇的故事<p></h1><h2 id="什么是内卷"><a href="#什么是内卷" class="headerlink" title="什么是内卷"></a>什么是内卷</h2><p>很久很久以前，地球上有一个小镇。小镇上有很多鞋店，这些鞋店每天上午10点开门，中午12点到下午2点午休，下午2点到晚上6点继续营业；每周一至周五营业5天，周末休息。</p><p>夏天最热的那几天，鞋店老板们会纷纷把店关掉，去南方的海边度假；冬天最冷的那几天，鞋店老板们也会纷纷把店关掉，去北方的山里滑雪。</p><p>多年以来，小镇上的常住人口没有什么变化，鞋的品质一直优秀，供货也稳定，所以，<strong>小镇上的鞋的供需关系一直处于一个近乎完美的平衡状态。</strong></p><p>后来有一天，一户人家出于不明原因从大城市搬来小镇上，并且也开了一家鞋店。小镇虽然小，但也算具有一定规模，鞋的供需平衡还不至于因为新增一家鞋店而被打破。</p><p>但是，那座大城市的人民以勤奋、能吃苦著称。果然，这户来自大城市的人家也具备这些特点。他们家的鞋店每天早晨7点就开门了，中午也不午休，晚上直到11点才关门；周末他们也正常营业，夏天和冬天他们也从不去度假。</p><p>渐渐地，他们的“勤奋”得到了回报，他们鞋店的生意明显好于小镇上的其他鞋店。以前小镇人民吃完晚饭后是无法买鞋的，但现在，他们几乎随时可以去大城市人的鞋店买鞋，也就没什么必要光顾其他鞋店了。</p><p>但小镇老板们也不服输，他们纷纷效仿大城市人民的作息时间，每周工作7天，每天工作16小时。他们的“勤奋”也得到了“回报”：他们的营业收入恢复到了以前的状态。</p><p>那么，此时的小生活发生了什么样的变化呢？由于小镇人口并没有增加，鞋的需求量保持恒定，跟以前一样，所以每家鞋店最终的营业收入没什么变化，并不会增长。但营业时间从原来的每周5天，每天6小时变成了每周7天，每天16小时。</p><p>也就是说，<strong>他们的工作时间变长了，但收入却没有增加。</strong></p><p>这就是传说中的内卷（involution）。同时，这也是传说中的囚徒困境。</p><h2 id="什么是囚徒困境"><a href="#什么是囚徒困境" class="headerlink" title="什么是囚徒困境"></a>什么是囚徒困境</h2><p>我们可以把鞋店简化为两家：大城市鞋店和小镇鞋店。他们工作模式也可简化为996和955。小镇上鞋的需求不变。根据以上条件可知：</p><ul><li><strong>如果两家鞋店都选择955</strong>，会平分市场需求，同时也保证了休息时间，这种情况下总体收益最高，假设两家的收益分别是5, 5。</li><li><strong>如果两家鞋店都采取996</strong>工作模式，最终仍然会平分市场，但由于休息时间减少，幸福感降低，收益不能再是5, 5而应该是3, 3。</li><li><strong>而如果一家店选择了996而另一家店选择了955</strong>，那么996鞋店最终可能会独占市场，而955鞋店会没生意，于是两家的收益可假设为8, 0。</li></ul><p>这场博弈中两位鞋店的<strong>赢利表</strong>如下：</p><table><thead><tr><th>大城市鞋垫 / 小镇鞋垫</th><th>955</th><th>996</th></tr></thead><tbody><tr><td><strong>955</strong></td><td>5，5</td><td>0，8</td></tr><tr><td><strong>996</strong></td><td>8，0</td><td>3，3</td></tr></tbody></table><p>两位鞋店老板彼此不知道对方是怎么想的，但他们都是“聪明”人，很容易算出：如果对方996，那么我955的收益是0，我也996的收益是3，所以我应该996；如果对方955，那么我也955的收益是5，我996的收益8，所以我应该996。</p><p>最终，两家鞋店都选择了996，这场博弈达到<strong>纳什均衡</strong>，<strong>两位老板都成了996的“囚徒”。</strong></p><div class="note green no-icon flat"><p>纳什均衡是这样一种状态，在该状态下每个参与人所采取的策略都是对于其他参与人的策略的最优反应。</p><p>——摘自董志强 《身边的博弈》，机械工业出版社·华章经管</p></div><h2 id="什么是勤劳和公平"><a href="#什么是勤劳和公平" class="headerlink" title="什么是勤劳和公平"></a>什么是勤劳和公平</h2><p>任何一个行业都不是孤立存在的。鞋店老板们工作时间变长了，娱乐时间就变少了，他们光顾餐馆、咖啡馆的次数就少了，于是小镇上的餐饮业变得冷清了。虽然鞋店的营业时间延长，他们的耗电量增加，但餐馆、咖啡馆却在一些生意冷清的时段进入了节电模式，所以发电厂的生意也没有变好。</p><p><strong>总体算下来，小镇的经济不但没有变好，反而变差了一些。</strong>所以，我们可以看到，<strong>内卷不但有危害，而且会危害到看似无辜的每一个人。</strong></p><p>疲惫的小镇鞋店老板们也很快意识到了这个问题，于是他们成立鞋业协会，联合小镇政府制定强制性的行业规则和劳动法：每日工作时间不得超过8小时、每周营业时间不得超过5天，法定节假日必须休息……鞋业协会有权要求不遵守规定的鞋店关门，对屡教不改者，鞋业协会将联合小镇政府将其驱逐出小镇……</p><p>行规一出，来自大城市的人家就立即抗议，他们觉得这是对勤劳致富者的不尊重，也是对消费者的不尊重，这是干涉他们的自由，这是对他们的不公平对待和地域歧视……</p><p>鞋业协会立即怼了回去：你们所谓的勤劳并没有真正致富，反而对社会造成了危害。鞋店又不是急救中心，消费者早一天买鞋还是晚一天买鞋往往并没有区别。你们只顾着自己的作息时间而不管他人，这不是自由，而是自私，这才是真正的不公平……劳动法面前人人平等，并没针对谁、歧视谁，对违法的人采取强制措施也是天经地义……</p><br><h1 id="大城市的故事"><a href="#大城市的故事" class="headerlink" title="大城市的故事"></a><p align="center">大城市的故事<p></h1><p>如果你觉得内卷是老板们才要关心的问题，跟打工人无关，那么我们离开小镇，来看看大城市里发生的故事。</p><p>大城市里有一家皮鞋款式设计公司，原本每一位打工人都是9点上班5点下班。后来，一位从小镇来的打工人进入这家公司，他本没有从业经验，为了得到这份工作在简历上和面试时都说了谎。于是开始打工时，他非常吃力，每天5点下班时他都无法完成工作，只好继续加班到9点才离开。</p><p>有一天，老板买了一个跑步机放在自己办公室里。从那天起，老板都会在完成工作后跑步健身，要在8点左右才离开办公室。所以他发现，这位小镇青年每天在8点时还没下班。于是，在下一个月的公司例会上，他表扬了小镇青年的刻苦精神，并宣布要他发奖金。</p><p>此后，其他打工人也发生了变化。有些人想，反正我下班之后也没什么事情，不如等8点以后再走，让老板也看到我加班，也给我发奖金。于是，加班的人逐渐多了起来。</p><p>起初，他们获得奖金，但一段时间过后，<strong>随着加班的人变成了大多数</strong>，老板对这些“勤奋刻苦”的人见怪不怪了，<strong>奖金的事也不再提了</strong>。反而是那些下班后有事要做不能加班的人经常被老板批评，甚至被扣工资。</p><p>于是，打工人的工作时间延长了，但收入并没有增加，内卷害了每一个人。</p><p>要打破囚徒困境，打工人可以像小镇鞋店老板那样，成立工会争取自己合法权利。但他们其实还有另一种办法，就是辞掉这份工作，去另一家不需要加班的公司。</p><p>而对于老板来说，如果选择满足工会要求，其实并没有什么损失，大家只是回到以前的状态而已，公司的业绩就算不增长，也不会下降。但如果他选择拒绝，那么那些本来能力优秀的打工人很可能选择离开，留下像小镇青年那样不得不加班的低效率打工人，这就是<strong>劣币驱逐良币</strong>，毫无疑问，良币被驱逐意味着企业将蒙受损失。</p><br><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a><p align="center">小结<p></h1><p>因此，内卷不会创造价值，而且会危害每一个人。如果打工人不觉醒、不抗争，管理者不制定有效措施防止内卷，而任由内卷的发生，我们每一个人都将是受害者，每个人的幸福感都会降低。</p><br><h1 id="博主读后感"><a href="#博主读后感" class="headerlink" title="博主读后感"></a>博主读后感</h1><p>做好每个人自己的那一部分，仰望天空的同时也要脚踏实地，凡事要有自己的节奏，不盲目跟风加入内卷。知识从来都不是在匆匆忙忙中产生的，唯有静下心来，平衡好工作、学习与生活的关系，全民幸福指数才会提升。</p>]]></content>
      
      
      <categories>
          
          <category> 👍优质转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💼工作 </tag>
            
            <tag> ✍学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何制作简历及面试技巧</title>
      <link href="posts/82a6839d/"/>
      <url>posts/82a6839d/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>背景</strong>：</p><p>上周六参加了学院组织的就业指导公开讲座，在此记录下制作简历、如何面试的小笔记，仅供参考，灵活运用。</p></blockquote><h1 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h1><p>个人简历大概包含以下几大板块（并非一定全写进简历）👇</p><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>照片、姓名、性别、年龄、学历、专业、政治面貌、现居地、电话、邮箱</p><h2 id="求职意向"><a href="#求职意向" class="headerlink" title="求职意向"></a>求职意向</h2><p>工作岗位、工作地点、目前状态</p><blockquote><p>其中<code>目前状态</code>可写随时到职</p></blockquote><h2 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h2><p>……</p><h2 id="在校经历"><a href="#在校经历" class="headerlink" title="在校经历"></a>在校经历</h2><p>时间 | 组织单位 | 职责</p><p>经历列表 123…</p><h2 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h2><p>项目名称、项目描述、项目职责</p><h2 id="个人技能"><a href="#个人技能" class="headerlink" title="个人技能"></a>个人技能</h2><p>语言技能、专业技能、团队能力</p><blockquote><p>对于<code>专业技能</code>，可使用关键词 👉 精通、熟练掌握、熟悉、了解</p><p>但在此建议<code>了解熟悉的</code>不要写，毕竟找工作肯定是专业对口，往某个方向走的，懂就懂不懂就不懂，了解熟悉什么什么不太会给面试官留下好印象与强烈的记忆，因为他的目的只是看你能否胜任所应聘的这个职位，是否拥有相关能力，对无关技术的了解熟悉甚至精通没有实际意义。</p></blockquote><h2 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h2><p><strong>若有工作经验</strong></p><ol><li>你得突出过去的成就</li><li>为曾经工作单位创造的利润和价值</li><li>体现工作效率高</li><li>个人评价的卖点得和应聘方向相匹配</li><li>合格的自我评价</li></ol><p><strong>若无工作经验，但有实习工作经验</strong></p><ol><li><p>总结：在哪工作，干过哪些事</p></li><li><p>成果：项目</p></li><li><p>能力：会哪些工具语言技能</p></li><li><p>性格：……</p></li></ol><h2 id="荣誉奖励"><a href="#荣誉奖励" class="headerlink" title="荣誉奖励"></a>荣誉奖励</h2><p>……</p><div class="note orange no-icon flat"><p><strong>注意</strong>：</p><p>简历的每个板块最好一目了然，排版工整、简洁明了，切忌花里胡哨，风格不统一。</p></div><br><h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><h2 id="”公文包“准备"><a href="#”公文包“准备" class="headerlink" title="”公文包“准备"></a>”公文包“准备</h2><p>简历，奖学金证明，比赛证书，笔，记事本，手机</p><blockquote><p>如果是现场面试</p></blockquote><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>突出自己优点和特长，体现自己能力和工作岗位相匹配，体现想进入公司的热情度，讲述自己成绩证明实力</p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><blockquote><p><strong>结束语</strong>：</p><p>若是有疑问或更好的想法欢迎留言。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💼工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对大数据智能推送和身份信息泄露的拙见</title>
      <link href="posts/20afffc2/"/>
      <url>posts/20afffc2/</url>
      
        <content type="html"><![CDATA[<p>我发现很多人对<strong>大数据智能推送</strong>和<strong>身份信息泄露</strong>这俩事存在着<u>误解</u>，有些网友推荐视频看得老爽了，但看完了还是不忘评论一句：“这奇怪的大数据”，借此以我计算机小白的身份来聊一下这个话题。</p><p>先说说<strong>大数据智能推送</strong>，我对智能推送更多地呈中立态度，首先我觉得它这么一个设定本是以服务大众为主要目的，毕竟它能给你“投其所好的关怀”，有人可能会说：“它就是资本主义为了恰烂钱，想让你多使用它的 APP”，这问题仁者见仁智者见智，和半杯水问题一样。话说回来，若满屏幕都是你不感兴趣的内容你会有使用这个 APP 的欲望吗？若你不喜欢智能推送为什么还继续将 APP 放在手机中“<del>端起碗吃肉，放下筷子骂娘</del>”呢？退一步讲，智能推送<strong>是可以关闭的</strong>，至少我在哔哩哔哩 APP 中找到了关闭智能推送的设置，其它 APP 可以自行按需摸索。打个贴近于生活的比方，智能推送其实相当于你在你家楼下早点铺吃早饭时，阿姨问你：“今天还是 XX 面？还是不要辣吧？今天咋们这有新做的 XX 小吃，要不尝尝看？”，挺不起眼的一个生活问句，却让人感受到了重视与关怀，当然有些人还是会说：“她就是想让你每天来，好赚钱”，你细品我不评价。当然你不习惯阿姨这么问，可以用合适的话语告知让她下次不要再问了，或者索性换一家早点铺。有些人可能会吐槽，智能推送还会使人沉迷其中无法自拔，吞噬掉大量时间，说到底与其怪 APP 不如反思自己的时间管理和抗诱惑能力是不是存在着问题，它本是一个为了提升用户体验的一个设定，何况大多数人还是处于<del>白嫖</del>免费使用状态，希望多些理解包容，多从自身找原因。</p><p>当然了，<strong>APP 智能推送真的智能吗？</strong>我觉得目前还有些<strong>改进之处</strong>，比如有时候你只是好奇点进去看一下，APP 就默认你喜欢，于是海量相似内容席卷而来，所以在智能推送的算法上还得继续优化，比如提高智能推送触发门槛，即用户点了 n 次相似内容后，再来进行推送，这样是不是更人性化一点？当然每个人对一件事物的感兴趣程度也不能完全靠点击次数来推断，所以算法的优化之路道阻且长。再者，很多人提到智能推送会将人限定在一个框架中，限制获取外部信息的范围，缺乏自主思考能力，这点我非常认可，所以我认为推送一部分感兴趣的内容同时再推送一部分随机内容比较好，至于智能推送和随机推送的占比是多少，开发人员可以进行数据调查，得出一个用户普遍能接受的一个比例，或者将选择权交给用户，让我们自定义设置比例。当然了，相关设置的摆放位置还得明显化，使其 accessible ，即易被广大用户方便找到，而不是地毯式、抓瞎式去找设置，费时费力，容易劝退大批用户。</p><p>第二我想谈谈<strong>身份信息泄露</strong>这一件事，至于某些 APP 是否真的泄露了身份信息我不清楚，也没有任何明证，但很多人还是存在着一点误解，认为给自己发提醒短信、广告邮件一定是身份信息泄露。想象一个场景，你注册账号时需要填写手机号或者电子邮箱吧，而且在点击注册按钮之前会让你勾选<code>你已阅读用户协议、隐私政策</code>框，当然是否阅读是你的事情（顺便说句，我希望相关协议可以写的更直白易懂，少些官方套话、专业术语，否则我们会沦为点击“已阅”按钮的无情机器）。话说回来，你注册之后，APP 方可能会偶尔给你发些提醒短信或广告邮件，其实是件正常范围内的事情，<strong>不属于信息泄露</strong>，好比你家附近新开了家健身房并且可免费体验一次，在体验之前会进行简单的信息登记，之后健身房工作人员再给你打电话推销之类的操作就不算是信息泄露，毕竟你已经填写了电话号码，默认你允许健身房可以通过电话号码联系到你，谈何泄露呢？相反，如果是陌生平台给你发短信发邮件那才是真的信息泄露、甚至是诈骗。你要是觉着短信提醒、邮件推送影响到你的日常生活，是可以找到设置并取消掉，若没有相关设置，可以反馈投诉或者删除 APP、注销账号。最后提醒一句，在现实生活中呢，还是要多注意，不要在不明来源网站填写自己身份信息、账号密码，凡事三思而后行。</p><p>希望能理性看待 APP 推送和身份信息泄露这俩事儿吧，消除误解，不跟风下结论，勿让自己的大脑成为别人思想的跑马场，同时也要保护好自己的个人隐私。Peace &amp; Love！</p><blockquote><p>欢迎友善地各抒己见</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📈大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly博客外挂标签（个人常用）</title>
      <link href="posts/277da8ad/"/>
      <url>posts/277da8ad/</url>
      
        <content type="html"><![CDATA[<p><strong>参考教程</strong>：<div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div></p><br><h2 id="引用-Note"><a href="#引用-Note" class="headerlink" title="引用 Note"></a>引用 Note</h2><p><u>no-icon 样式<u>语法 👇</u></u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="note no-icon flat"><p>蝉鸣是窗外渐渐倒数的钟声</p></div><div class="note blue no-icon flat"><p>考卷的分数是往上爬的树藤</p></div><div class="note pink no-icon flat"><p>我画在你手掌上的蝴蝶，飞走了吗？</p></div><div class="note red no-icon flat"><p>白云是蓝天正在放的风筝</p></div><div class="note orange no-icon flat"><p>青春是操场奔跑的我们</p></div><div class="note purple no-icon flat"><p>不要担心受伤</p></div><div class="note green no-icon flat"><p>勇敢地朝梦想闯一闯</p></div><br><h2 id="时间轴-Timeline"><a href="#时间轴-Timeline" class="headerlink" title="时间轴 Timeline"></a>时间轴 Timeline</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline %&#125;</span><br><span class="line">&#123;% timenode <span class="xml"><span class="tag">&lt;<span class="name">Custom</span>&gt;</span></span> %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">Custom</span>&gt;</span></span></span><br><span class="line">&#123;% endtimenode %&#125;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="timeline"><div class="timenode"><div class="meta"><p><p>2016-8</p></p></div><div class="body"><p>枫下的秋千，剩下的暗恋</p></div></div><div class="timenode"><div class="meta"><p><p>2018-6</p></p></div><div class="body"><p>我们说过要永远在对方身边</p></div></div><div class="timenode"><div class="meta"><p><p>2018-7</p></p></div><div class="body"><p>走廊的光线，剪影的校园，即将是从前</p></div></div></div><br><h2 id="链接卡片-Link"><a href="#链接卡片-Link" class="headerlink" title="链接卡片 Link"></a>链接卡片 Link</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link <span class="xml"><span class="tag">&lt;<span class="name">链接名</span>&gt;</span></span>, <span class="xml"><span class="tag">&lt;<span class="name">链接地址</span>&gt;</span></span>, <span class="xml"><span class="tag">&lt;<span class="name">链接图像</span>&gt;</span></span> %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><br><h2 id="行内图片-Inline-Image"><a href="#行内图片-Inline-Image" class="headerlink" title="行内图片 Inline Image"></a>行内图片 Inline Image</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">文字</span>&gt;</span></span> &#123;% inlineimage <span class="xml"><span class="tag">&lt;<span class="name">图片链接</span>&gt;</span></span> %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><p>毕业的那天，剩下的时间<img no-lazy class="inline" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/></p><p>能不能别轻易，就说了再见<img no-lazy class="inline" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/></p><br><h2 id="单张图片-Single-Image"><a href="#单张图片-Single-Image" class="headerlink" title="单张图片 Single Image"></a>单张图片 Single Image</h2><p><u>语法 👇</u></p><p>可选参数：宽度 width（px | %）、描述 alt</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image <span class="xml"><span class="tag">&lt;<span class="name">图片链接</span>&gt;</span></span>, width=[Custom]px, alt=[Custom] %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="img-wrap"><div class="img-bg"><img class="img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="快门按下，手牵着手，暂停童年" style="width:400px;"/></div><span class="image-caption">快门按下，手牵着手，暂停童年</span></div><br><h2 id="相册-Gallery"><a href="#相册-Gallery" class="headerlink" title="相册 Gallery"></a>相册 Gallery</h2><ol><li><p>gallerygroup 相册库</p><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup <span class="xml"><span class="tag">&lt;<span class="name">相册名</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">相册描述</span>&gt;</span></span> &#x27;<span class="xml"><span class="tag">&lt;<span class="name">相册地址</span>&gt;</span></span>&#x27; <span class="xml"><span class="tag">&lt;<span class="name">相册背景图地址</span>&gt;</span></span> %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/top_img.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Article_Cover</div>  <p>精美的文章封面</p>  <a href='/gallery/ArticleCover/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/404.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Girlfriend</div>  <p>The_love_of_my_life</p>  <a href='/gallery/WendyZhang/'></a>  </figcaption>  </figure>  </div></li><li><p>gallery 相册</p><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](图片地址)</span><br><span class="line">![](图片地址)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="justified-gallery"><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_british_study.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_win10.png" alt=""></p>          </div></li></ol><br><h2 id="折叠框-Folding"><a href="#折叠框-Folding" class="headerlink" title="折叠框 Folding"></a>折叠框 Folding</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">颜色参数：[不填默认灰色]，cyan,green,yellow,red,blue</span><br><span class="line">展开参数：[不填默认关闭]，open</span><br><span class="line"></span><br><span class="line">&#123;% folding [颜色参数] [展开参数], <span class="xml"><span class="tag">&lt;<span class="name">标题</span>&gt;</span></span> %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">Cusotm</span>&gt;</span></span></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><details ><summary> 灰色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 灰色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details cyan><summary> 青色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding cyan , 青色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details green><summary> 绿色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding green , 绿色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details yellow><summary> 黄色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding yellow , 黄色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details red><summary> 红色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding red , 红色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details blue><summary> 蓝色折叠框 </summary>              <div class='content'>              <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding blue , 蓝色折叠框 %&#125;&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><br><h2 id="分栏-Tab"><a href="#分栏-Tab" class="headerlink" title="分栏 Tab"></a>分栏 Tab</h2><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">默认显示第一栏</button></li><li class="tab"><button type="button" data-href="#test-2">显示预设栏</button></li><li class="tab"><button type="button" data-href="#test-3">不显示栏</button></li><li class="tab"><button type="button" data-href="#test-4">自定义名称</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><p><strong><u>语法 👇</u></strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-3"><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-4"><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab Hassan --&gt;</span></span></span><br><span class="line"><span class="strong">**我是Hassan**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab Wendy --&gt;</span></span></span><br><span class="line"><span class="strong">**我是Wendy**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab Sharon --&gt;</span></span></span><br><span class="line"><span class="strong">**我是Sharon**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">Hassan</button></li><li class="tab"><button type="button" data-href="#test4-2">Wendy</button></li><li class="tab"><button type="button" data-href="#test4-3">Sharon</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>我是Hassan</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>我是Wendy</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>我是Sharon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="标签隐藏-Tag-Hide"><a href="#标签隐藏-Tag-Hide" class="headerlink" title="标签隐藏 Tag Hide"></a>标签隐藏 Tag Hide</h2><h3 id="行内-Inline"><a href="#行内-Inline" class="headerlink" title="行内 Inline"></a>行内 Inline</h3><blockquote><p>只限文字隐藏</p></blockquote><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline <span class="xml"><span class="tag">&lt;<span class="name">文本内容</span>&gt;</span></span>,[按钮显示的字],[按钮背景颜色],[按钮文字颜色] %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><span class="hide-inline"><button type="button" class="hide-button button--animated" style="">感觉你怪怪的  </button><span class="hide-content">怪可爱的</span></span><h3 id="块-Block"><a href="#块-Block" class="headerlink" title="块 Block"></a>块 Block</h3><blockquote><p>可以隐藏很多内容，包括图片，代码块。( display 不能包含英文逗号，可用<code>&amp;sbquo;</code>)</p></blockquote><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock [按钮显示的字],[按钮背景颜色],[按钮文字颜色] %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">文本内容</span>&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class="hide-block"><button type="button" class="hide-button button--animated" style="">你脸上有点东西    </button><div class="hide-content"><p>有点可爱<br><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/WendyZhang.gif" alt=""></p></div></div><br><h2 id="诗词标签-Poem"><a href="#诗词标签-Poem" class="headerlink" title="诗词标签 Poem"></a>诗词标签 Poem</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem <span class="xml"><span class="tag">&lt;<span class="name">标题</span>&gt;</span></span>,<span class="xml"><span class="tag">&lt;<span class="name">作者</span>&gt;</span></span> %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">诗词内容</span>&gt;</span></span></span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><br><h2 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h2><p><u>语法 👇</u></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota <span class="xml"><span class="tag">&lt;<span class="name">被注释文字</span>&gt;</span></span> , <span class="xml"><span class="tag">&lt;<span class="name">hover显示注释</span>&gt;</span></span> %&#125;</span><br></pre></td></tr></table></figure><p><u>对应效果 👇</u></p><span class='nota' data-nota='可以看到悬停的注解内容'>把鼠标移动到我上面试试</span>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>和声那些事</title>
      <link href="posts/664d97f5/"/>
      <url>posts/664d97f5/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><p>唱歌是我的爱好之一，玩了这么多年全民K歌，有点fed up with it，突然想玩玩和声try some new shit，于是就开始了对爱好皮毛的探索旅程。（<a href="https://hassanwong.top/posts/60ae04a4/">原谅我习惯双语混杂表达</a>）</p></blockquote><h2 id="什么是和声？"><a href="#什么是和声？" class="headerlink" title="什么是和声？"></a>什么是和声？</h2><p>通常是指某一调性内的和弦结构及和弦之间的连接方式。你可以广义地理解为伴奏里那小小的人声，通常和主声交织在一起。和声可以在纵向上和横向上丰富音乐，让音乐听起来更丰满、更立体，好的和声进行能让一首歌曲变得更加好听。</p><h2 id="和声编配"><a href="#和声编配" class="headerlink" title="和声编配"></a>和声编配</h2><ol><li><p>包括<strong>同度</strong>（适合不同音色的俩人）、<strong>三度</strong>、<strong>四度</strong>、<strong>五度</strong>、<strong>八度</strong>。一首歌里尽量不要全部采用三度或四度的和声编配，这样会显得特别单调，同时也要保证每轨单独播放也是好听的。我个人喜欢往上或往下叠唱三度，这也最常见的和声方式。</p><blockquote><p>我发现和声和钢琴的和弦构造有异曲同工之妙，对钢琴有了解的友友们可能会有这种感jio。</p></blockquote></li><li><p><strong>Freestyle</strong>。你可以凭借乐感和一定的理论知识去设计和声，通过Freestyle来找灵感，挑出比较和谐、悦耳的那种和声设计。</p></li></ol><div class="note warning no-icon flat"><p><strong>注意</strong>：<strong>不要全曲都有和声</strong>。偶尔的和声有画龙点睛的效果，一首歌的层次感很重要，全程高能会使人感到听觉疲惫。</p></div><h2 id="和声该如何演唱？"><a href="#和声该如何演唱？" class="headerlink" title="和声该如何演唱？"></a>和声该如何演唱？</h2><p>从和声的<strong>咬字</strong>角度，得依据<strong>风格</strong>来定，像R&amp;B风格的和声就通常很丰富，和声和主声基本是同等地位，所以作曲时，和声和主声可以一样的 <del>骚</del> 飘，各种转音玩起来，但其他风格，和声地位通常低于主声，以达到衬托主声作用，此时和声的咬字可以相应柔和些。</p><p>从<strong>气息</strong>角度，和声的<strong>气声居多</strong>，唱的时候同时加点气声，音色不会那么干，可以营造整首歌的氛围感。</p><p>从<strong>录音</strong>角度，录和声时距离麦克风最好比录主声要远一些，距离产生美。</p><h3 id="常见的和声方法"><a href="#常见的和声方法" class="headerlink" title="常见的和声方法"></a>常见的和声方法</h3><ol><li><p><strong>叠唱</strong></p><p> 可以在和弦的组成音里面找到可以跟主旋律构成相对和谐音程的音，然后再试着让自己的和声变得富有旋律性。更为高级一点的做法是你还可以使用一些比较不和谐，听起来“怪怪”的音程，制造听觉上的一些冲突，然后去把它解决掉，让音乐更富张力。</p></li><li><p><strong>Call and Response形式的使用</strong></p><p> Call and Response的形式源自于黑人音乐，可以理解为中国民俗对山歌的“一呼一应”。举个栗子，比如EXO的《十二月的奇迹》2分58秒处的“你改变了一切，我整个生命，这一切，我整个世界”，就是非常典型的Call and response的手法，这一段因为有和声的衬托带来的情感宣泄，使这首歌到达了一定的高潮。其实你平时仔细听歌，你会发现很多歌都有这样的设计。</p></li><li><p><strong>男女齐唱</strong></p><p> 当男女生一起齐唱同一个旋律的时候，会有一种天然的和声感，这是因为男生女生本身音色不同，女声偏清脆悦耳，男声偏低沉浑厚，然后在演唱同一段旋律的时候也会有天然的八度差，就会有一种平行的空间感和层次感。</p><blockquote><p>我不想再用全民K歌和自己合唱，怎么办？<del>在线蹲一名🙋‍♀️选手</del></p></blockquote></li></ol><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul><li><a href="https://www.zhihu.com/question/370764530">好听的和声应该怎么编配，又如何演唱呢？</a></li><li><a href="https://www.zhihu.com/question/284541292/answer/527287763">和声到底是啥？</a></li><li><a href="https://www.zhihu.com/question/40415441/answer/729729372">和声具体的编法？</a></li></ul><br><blockquote><p><strong>结束语</strong>：</p><p>单单靠文字只能算是对和声的基本了解，重要的是多听多唱多练，平时听歌时多留意这首歌的和声是如何编配的，从已有作品中吸收经验，并付诸于实践。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎵音乐 </tag>
            
            <tag> 🎉图一乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly博客美化魔改集锦</title>
      <link href="posts/9d49f75f/"/>
      <url>posts/9d49f75f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本着避免重复造轮子的原则，该教程记录了博主部分对网站的原创自定义美化魔改，同时也包括 f12 扒取其他优秀博主样式的部分。</p><p>食用教程前，建议先看一下<a href="https://hassanwong.top/posts/223fd004/">《教程&amp;笔记常量申明》</a>，且所有修改对<strong>缩进格式</strong>等有严格要求。</p></blockquote><details red open><summary> 点击查看更新日志 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新日志</p><div class="timenode"><div class="meta"><p><p>2021-8-12</p></p></div><div class="body"><ul><li>右侧Sticky组件随页面上下滚动而微移的Bug</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-14</p></p></div><div class="body"><ul><li>首页置顶文章轮播组件</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-03</p></p></div><div class="body"><ul><li>更改文章 h1~6 级标题前 icon 图标</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-30</p></p></div><div class="body"><ul><li>右下角返回顶部按钮</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-28</p></p></div><div class="body"><ul><li>深浅模式下分别使用不同网站背景</li><li>首页公告栏轮播组件</li></ul></div></div></div>              </div>            </details><h1 id="深浅模式下分别使用不同网站背景"><a href="#深浅模式下分别使用不同网站背景" class="headerlink" title="深浅模式下分别使用不同网站背景"></a>深浅模式下分别使用不同网站背景</h1><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\_config.yml</code>，其中<code>background_dark</code>参数为深色模式下的图片地址。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Website Background (设置网站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line">background: url(&lt;FilePath&gt;)</span><br><span class="line"><span class="addition">+background_dark: url(&lt;FilePath&gt;)</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\var.styl</code>，在第 36 行左右</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$web-bg = hexo-config(&#x27;background&#x27;) &amp;&amp; unquote(hexo-config(&#x27;background&#x27;))</span><br><span class="line"><span class="addition">+$web-bg-dark = hexo-config(&#x27;background_dark&#x27;) &amp;&amp; unquote(hexo-config(&#x27;background_dark&#x27;))</span></span><br><span class="line">$index_top_img_height = hexo-config(&#x27;index_top_img_height&#x27;) ? convert(hexo-config(&#x27;index_top_img_height&#x27;)) : 100vh</span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\_mode\darkmode.styl</code>，在第 41 行左右</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+   #web_bg</span></span><br><span class="line"><span class="addition">+     background: $web-bg-dark</span></span><br><span class="line"><span class="deletion">-   #web_bg:before,</span></span><br><span class="line">    #footer:before,</span><br><span class="line">    #page-header:before</span><br><span class="line">      position: absolute</span><br><span class="line">      width: 100%</span><br><span class="line">      height: 100%</span><br><span class="line">      background-color: alpha($dark-black, .7)</span><br><span class="line">      content: &#x27;&#x27;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>拓展</strong>：</p><p>若你想像我一样使用<strong>四方连续</strong>风格图片（即重复图片）且能正常显示 repeat 效果，则继续按照下方更改</p></blockquote><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\_global\index.styl</code>，在第 64 行左右</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if $web-bg</span><br><span class="line">  #web_bg</span><br><span class="line"><span class="deletion">-   position: fixed</span></span><br><span class="line"><span class="addition">+   position: absolute  //此处可控制背景是否能跟随滑轮滚动，按需选择是否更改</span></span><br><span class="line">    z-index: -999</span><br><span class="line">    width: 100%</span><br><span class="line">    height: 100%</span><br><span class="line">    background: $web-bg</span><br><span class="line"><span class="deletion">-   background-attachment: local</span></span><br><span class="line"><span class="deletion">-   background-position: center</span></span><br><span class="line"><span class="deletion">-   background-size: cover</span></span><br><span class="line"><span class="deletion">-   background-repeat: no-repeat</span></span><br></pre></td></tr></table></figure></li></ol><br><h1 id="首页公告栏轮播组件"><a href="#首页公告栏轮播组件" class="headerlink" title="首页公告栏轮播组件"></a>首页公告栏轮播组件</h1><details ><summary> 开发背景 </summary>              <div class='content'>              <p>看了洪哥的首页哔哔轮播组件，心里痒痒的想整，奈何自己早已转战 leancloud 版哔哔，于是看着月益增多的公告栏突然灵机一动，寻思着把每一条公告通过轮播组件来实现会不会更好，而且右侧组件又可以腾个位置了，于是开始一天摸鱼的行动，终于扒完了。</p><p>来康康我删前的右侧公告栏 👇，太占面积了，加了滚动条还是觉得长，而且信息不容易被访客捕捉到</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210428225240782.png" alt=""></p>              </div>            </details><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210429004120825.png" alt=""></p>              </div>            </details><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\_config.yml</code>（<u>可以忽略</u>，貌似不加也行）</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line"><span class="addition">+   # 公告栏轮播组件</span></span><br><span class="line"><span class="addition">+   - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css&quot; media=&quot;defer&quot;&quot;&gt;</span></span><br><span class="line">  bottom:</span><br></pre></td></tr></table></figure></li><li><p>新建<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\notice.pug</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#notice.notice(onclick&#x3D;&#96;window.open(&#39;&#x2F;notice&#x2F;&#39;,&#39;_self&#39;)&#96;)</span><br><span class="line">    i.notice-logo.fas.fa-bullhorn.card-announcement-animation</span><br><span class="line">    span&#x3D;&#39; &#39;+_p(&#39;公告栏&#39;)</span><br><span class="line">    #noticeList.swiper-container</span><br><span class="line">        .swiper-wrapper</span><br><span class="line">            .swiper-slide &lt;Custom&gt;</span><br><span class="line">            .swiper-slide &lt;Custom&gt;</span><br><span class="line">            .swiper-slide &lt;Custom&gt;</span><br><span class="line">    i.notice-enter.fas.fa-arrow-circle-right</span><br><span class="line">script(src&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;swiper&#x2F;swiper-bundle.min.js&#39;,data-pjax&#x3D;&#39;&#39;)</span><br><span class="line">script.</span><br><span class="line">    var swiper &#x3D; new Swiper (&#39;.swiper-container&#39;, &#123;</span><br><span class="line">        spaceBetween: 30,</span><br><span class="line">        centeredSlides: true,</span><br><span class="line">        direction: &#39;vertical&#39;, &#x2F;&#x2F; 垂直切换选项</span><br><span class="line">        loop: true, &#x2F;&#x2F; 循环模式选项</span><br><span class="line"></span><br><span class="line">     autoplay: &#123;</span><br><span class="line">            delay: 3000,</span><br><span class="line">            disableOnInteraction: false,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><code>.swiper-slide &lt;Custom&gt;</code>这里可以写你的公告内容</p></li><li><p>新建<code>&lt;BlogRoot&gt;\source\notice\index.md</code>，也可以通过在命令行里敲<code>hexo new page &lt;Custom&gt;</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 公告栏 - Notice</span><br><span class="line">date: 2021-04-27 16:09:00</span><br><span class="line">description: 与本站和博主相关的公告</span><br><span class="line">aside: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">[这里可以写你的公告]</span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\index.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    if theme.gitcalendar.enable</span><br><span class="line">      .recent-post-item(style=&#x27;width:100%;height:7.5% !important;overflow:hidden;&#x27;)</span><br><span class="line">        !=partial(&#x27;includes/gitcalendar&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"><span class="addition">+   include includes/notice.pug</span></span><br><span class="line">    +postUI</span><br><span class="line">    include includes/pagination.pug</span><br></pre></td></tr></table></figure><div class="note warning no-icon flat"><p><strong>注意</strong>：如果你使用了 GitCalendar，可能会出现大小失常，建议<code>height:15%</code>改成<code>height:7.5%</code>，具体情况自行调整</p></div></li><li><p>在<code>&lt;Custom&gt;.css</code>里添加以下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.notice-logo</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">22px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#notice</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">47px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--font-color);</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.6rem</span> <span class="number">1rem</span> <span class="number">0.5rem</span> <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-id">#notice</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: black <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#notice</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-wrapper</span> <span class="selector-class">.swiper-slide</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-slide</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#81d8cf</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#noticeList</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto;</span><br><span class="line">  <span class="attribute">margin-right</span>: auto;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.notice-enter</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>使用场景</strong>：公告栏可以写与博客网站相关的重要事件，也可以写与博主有关的公告申明。</p><p><strong>缺点</strong>：每次更新公告要在<code>index.md</code>和<code>notice.pug</code>俩文件里进行手动增删改，当然你也可以选择不建<code>index.md</code>，少费点事，访客只看看就行，不需要点进去看完整公告，然后适当自定义修改<code>notice.pug</code>即可。我个人觉得公告栏不用像哔哔那样需频繁更新，所以这算不上是麻烦。</p><p>2021.5.25：我意外看到<a href="https://blog.realwds.com/posts/39c5cc87.html">realwds</a>前端带佬也写了篇公告栏教程，不知道是不是我俩想法撞到一起了？他的教程是采用模板形式，只用在 md 文档中写时间和公告消息，首页前端就能获取到文本并显示出来，正好解决了我教程的缺点，友友们按需选择教程。</p></blockquote><br><h1 id="右下角返回顶部按钮"><a href="#右下角返回顶部按钮" class="headerlink" title="右下角返回顶部按钮"></a>右下角返回顶部按钮</h1><blockquote><p>效果请看网页右下角</p></blockquote><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\_config.yml</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">  # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line"><span class="addition">+# 返回顶部按钮</span></span><br><span class="line"><span class="addition">+   - &lt;img alt=&quot;doraemon_to_top&quot; id=&quot;doraemon_to_top&quot; onclick=&quot;fly_to_top()&quot; src=&quot;&lt;FilePath_图片&gt;&quot;&gt;&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>src</code>这里添加图片地址</p></blockquote></li><li><p>在<code>&lt;Custom&gt;.css</code>里添加以下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#doraemon_to_top</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1001</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">187px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#doraemon_to_top</span><span class="selector-class">.doraemon_fixed</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">51px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#doraemon_to_top</span><span class="selector-class">.doraemon_fixed</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.9</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;Custom&gt;.js</code>里添加以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fly_to_top</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  btf.scrollToDest(<span class="number">0</span>, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scrollTop =</span><br><span class="line">    <span class="built_in">document</span>.documentElement.scrollTop ||</span><br><span class="line">    <span class="built_in">window</span>.pageYOffset ||</span><br><span class="line">    <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">  <span class="keyword">if</span> (scrollTop &gt; <span class="number">56</span>) &#123;</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .getElementById(<span class="string">&quot;doraemon_to_top&quot;</span>)</span><br><span class="line">      .classList.add(<span class="string">&quot;doraemon_fixed&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">document</span></span><br><span class="line">      .getElementById(<span class="string">&quot;doraemon_to_top&quot;</span>)</span><br><span class="line">      .classList.remove(<span class="string">&quot;doraemon_fixed&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>最后把 butterfly 自带的返回顶部按钮给去掉，提供俩思路，<del>留作课后作业</del></p><ol><li><code>display: none;</code></li><li>获取类名/id 名，定位到 pug 源码，注释或删除相应代码</li></ol></li></ol><div class="note orange no-icon flat"><p><strong>注意</strong>：img 标签内所有参数值以及 css 代码里的值都可以自定义更改，前后保持一致就行。</p><p>JS 代码参考教程：<a href="https://www.cnblogs.com/qingmingsang/articles/5197542.html">晴明的博客园</a></p></div><br><h1 id="更改文章-h1-6-级标题前-icon-图标"><a href="#更改文章-h1-6-级标题前-icon-图标" class="headerlink" title="更改文章 h1~6 级标题前 icon 图标"></a>更改文章 h1~6 级标题前 icon 图标</h1><details ><summary> 开发背景 </summary>              <div class='content'>              <p>灵感来源于<a href="https://blog.eurkon.com/">eurkon</a>。单靠肉眼识别字体大小来判断标题等级不是件容易的事情，若 h1~6 标题使用不同图标的话，那么识别会容易许多。</p><p>小插曲：我之前在此问题上花了很多功夫，比如<strong>加大各等级标题字体大小之间的差值</strong>（肉眼还是难以分别）、<strong>更换颜色</strong>（确实好分辨，但主色过多不符合我对网站视觉美感的要求）、<strong>部分标题加不同样式的左边框</strong>（还是不太符合视觉美感要求，不够直观）</p>              </div>            </details><ol><li>在<code>&lt;Custom&gt;.css</code>里添加以下代码</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&lt;Custom&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* h2~6以此类推 */</span></span><br></pre></td></tr></table></figure><blockquote><p>其中<code>&lt;Custom&gt;</code>部分可以填写一下内容：</p><ol><li>H¹、H²、H³、H⁴、H⁵、H⁶</li><li>H₁、H₂、H₃、H₄、H₅、H₆</li><li>H1、H2、H3、H4、H5、H6</li><li><a href="https://fontawesome.dashgame.com/">fontawesome</a>的 icon 图标代号（形如<code>&#39;\f06c&#39;</code>）</li><li>理论上还可以加阿里图标（如果你会添加恳请留言！）</li></ol></blockquote><ol start="2"><li>Hexo 三连即可看到效果</li></ol><br><h1 id="首页置顶文章轮播组件"><a href="#首页置顶文章轮播组件" class="headerlink" title="首页置顶文章轮播组件"></a>首页置顶文章轮播组件</h1><details ><summary> 开发背景 </summary>              <div class='content'>              <p>每次打开自己博客，前 5 排都是置顶文章，同时右侧小组件中的“最新文章”早已被我换成了<strong>更新时间</strong>排序，所以一定程度上访客难以快速定位到最新发布的文章。把置顶文章用轮播图的形式表现出来，既美观又能腾出部分展示空间给最新发布的文章。</p>              </div>            </details><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210615005350308.png" alt=""></p>              </div>            </details><ol><li><p>新建<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\sticky.pug</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">link(rel=<span class="string">&#x27;stylesheet&#x27;</span> href=<span class="string">&#x27;https://unpkg.com/swiper/swiper-bundle.min.css&#x27;</span>)</span><br><span class="line">//- style(<span class="built_in">type</span>=<span class="string">&#x27;text/css&#x27;</span>).</span><br><span class="line">.recent-post-item<span class="comment">#Sticky</span></span><br><span class="line">  <span class="comment">#StickyList.swiper-container</span></span><br><span class="line">    .swiper-wrapper</span><br><span class="line">&lt;Custom&gt;</span><br><span class="line"></span><br><span class="line">    //- 分页器</span><br><span class="line">    .swiper-pagination</span><br><span class="line"></span><br><span class="line">.js-pjax</span><br><span class="line">  script(src=<span class="string">&#x27;https://unpkg.com/swiper/swiper-bundle.min.js&#x27;</span>)</span><br><span class="line">  script.</span><br><span class="line">    var mySwiper = new Swiper(<span class="string">&#x27;#StickyList&#x27;</span>, &#123;</span><br><span class="line">      initialSlide: Math.<span class="built_in">round</span>(Math.random()*<span class="number">5</span> + <span class="number">1</span>),// 初始化滑块索引（<span class="number">1</span>到<span class="number">6</span>随机数）</span><br><span class="line">      direction: <span class="string">&#x27;horizontal&#x27;</span>,// 垂直切换选项</span><br><span class="line">      speed: <span class="number">600</span>,             // 切换速度</span><br><span class="line">      loop: true,             // 循环模式选项</span><br><span class="line">      slidesPerView: <span class="number">2</span>,       // 显示<span class="number">2</span>个滑块</span><br><span class="line">      centeredSlides: true,   // 选中滑块居中</span><br><span class="line"></span><br><span class="line">      effect : <span class="string">&#x27;coverflow&#x27;</span>,</span><br><span class="line">      slidesPerView: <span class="number">2</span>,</span><br><span class="line">      coverflowEffect: &#123;</span><br><span class="line">        rotate: <span class="number">20</span>,           // 滑块做<span class="number">3</span>d旋转时Y轴的旋转角度</span><br><span class="line">        stretch: <span class="number">0</span>,          // 每个滑块之间的拉伸值，越大滑块靠得越紧</span><br><span class="line">        depth: <span class="number">80</span>,            // 滑块的位置深度。值越大z轴距离越远，看起来越小</span><br><span class="line">        modifier: <span class="number">2</span>,          // depth和rotate和stretch的倍率，值越大这三个参数的效果越明显</span><br><span class="line">        slideShadows : false  // 是否开启slide阴影</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      loopAdditionalSlides: <span class="number">0</span>,</span><br><span class="line">      loopPreventsSlide: false, // 滑块过渡时，允许切换过渡方向</span><br><span class="line">      autoplay: true,           // 自动滑动</span><br><span class="line">      autoplay: &#123;</span><br><span class="line">        disableOnInteraction: false,  // 滑块触碰后不会停止自动切换</span><br><span class="line">        pauseOnMouseEnter: true,      // 鼠标置于swiper时暂停自动切换</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      mousewheel: true,       // 鼠标滚轮控制滑块切换</span><br><span class="line"></span><br><span class="line">      // 如果需要分页器</span><br><span class="line">      pagination: &#123;</span><br><span class="line">        el: <span class="string">&#x27;.swiper-pagination&#x27;</span>,</span><br><span class="line">        clickable :true,          // 点击分页器的指示点分页器会控制滑块切换</span><br><span class="line">        // 自定义分页器的指示点</span><br><span class="line">        renderBullet: function (index, className) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&#x27;&lt;span class=&quot;&#x27;</span> + className + <span class="string">&#x27;&quot;&gt;&#x27;</span> + (index + <span class="number">1</span>) + <span class="string">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>第 6 行<code>&lt;Custom&gt;</code>这写每个滑块的内容，<strong>模板参考</strong>如下：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.swiper-slide(onclick=`window.<span class="built_in">open</span>(<span class="string">&#x27;&lt;文章相对链接&gt;&#x27;</span>,<span class="string">&#x27;_self&#x27;</span>)`)</span><br><span class="line">  .grid-img</span><br><span class="line">    img.cover.entered.loaded(alt=<span class="string">&#x27;&lt;文章名&gt;&#x27;</span> src=<span class="string">&#x27;&lt;图片地址&gt;&#x27;</span>)</span><br><span class="line">  .grid-title</span><br><span class="line">    | &lt;文章名&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\index.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  include ./includes/mixins/post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    if theme.gitcalendar.enable</span><br><span class="line">      .recent-post-item(style=&#x27;width:100%;height:8% !important;overflow:hidden;&#x27;)</span><br><span class="line">        !=partial(&#x27;includes/gitcalendar&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"><span class="addition">+   include includes/sticky.pug</span></span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;Custom&gt;.css</code>里添加以下代码</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#Sticky</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">384px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">1rem</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-container</span><span class="selector-id">#StickyList</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">360px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>((<span class="number">100%</span> - <span class="number">1rem</span>) / <span class="number">2</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">270px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--hassan-card-bg);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-img</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">11rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.grid-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-title</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">12px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-title</span> &#123;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.grid-title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--hassan-theme-color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-pagination-bullet</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">26px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">26px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--hassan-black);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--hassan-blue-lighter) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.swiper-pagination-bullet-active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--hassan-white);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--hassan-theme-color-dark) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#recent-posts</span> <span class="selector-class">.recent-post-item</span><span class="selector-id">#Sticky</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">14rem</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.swiper-container</span><span class="selector-id">#StickyList</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10.5rem</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-img</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#StickyList</span> <span class="selector-class">.swiper-slide</span> <span class="selector-class">.grid-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果</p> <div class="note orange no-icon flat"><p><strong>注意</strong>：写该教程时，我只是将我目前轮播组件使用的 CSS 代码进行了简单适配更改，但未经测试，所以样式 CSS 代码可能存在问题，<del>再一次给友友们提供锻炼 CSS 调试能力的机会</del>，同时<code>sticky.pug</code>中的 JS 参数可以自行调整，更多参数的详细释义可以参考<a href="https://www.swiper.com.cn/api/index.html">Swiper API 文档</a>。</p></div></li></ol><blockquote><p><strong>拓展</strong>：</p><p>该轮播组件不只是可以放置顶文章，还可以放些其它功能页面，甚至站外链接也行。</p><p>若你的有一定前端能力，还可以进一步更改源码做到在文章<code>front-matter</code>里添加参数，即可将其显示在首页置顶文章轮播组件中。</p></blockquote><br><h1 id="右侧Sticky组件随页面上下滚动而微移的Bug"><a href="#右侧Sticky组件随页面上下滚动而微移的Bug" class="headerlink" title="右侧Sticky组件随页面上下滚动而微移的Bug"></a>右侧Sticky组件随页面上下滚动而微移的Bug</h1><blockquote><p><strong>前提</strong>：贵站的导航栏已经魔改成固定fixed样式。细心的友友应该能发现，看文章时，随着滚轮上下移动，目录组件有50px的上下移动距离，其实这不算是Bug，Jerry这么写只是为了右侧组件配合导航栏移动而移动。所以现在咋们魔改党要固定它！</p></blockquote><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\_layout\head.styl</code>，在178行左右</p> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-    &amp; + .layout</span></span><br><span class="line"><span class="deletion">-      &amp; &gt; .aside-content &gt; .sticky_layout</span></span><br><span class="line"><span class="deletion">-        top: 70px</span></span><br><span class="line"><span class="deletion">-        transition: top .5s</span></span><br><span class="line"></span><br><span class="line">.apple</span><br><span class="line">  #page-header.full_page</span><br><span class="line">    background-attachment: scroll !important</span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\_layout\aside.styl</code>，在106行左右</p> <figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  .sticky_layout</span><br><span class="line">    +minWidth900()</span><br><span class="line">      position: sticky</span><br><span class="line">      position: -webkit-sticky</span><br><span class="line"><span class="deletion">-     top: 20px</span></span><br><span class="line"><span class="addition">+     top: 70px</span></span><br><span class="line">      transition: top .3s</span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果</p></li></ol><br><blockquote><p><strong>结束语</strong>：</p><p>若是有疑问或更好的解决方法欢迎留言。若想 get 本篇未记录的同款，请先查看<a href="https://hassanwong.top/log/">更新手账</a>，手账记录了本站 2021-01-23 以来几乎所有美化魔改微调的更新历史，且<u>参考过他人的更新都附带有教程链接</u>。若更新手账未记录，那么请自行<code>F12</code> <img no-lazy class="inline" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhheo/Sticker-Heo@main/Sticker-100/%E7%8B%97%E5%A4%B4.png" style="height:1.5em"/></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo和Git相关问题记录合集</title>
      <link href="posts/d0dfb99d/"/>
      <url>posts/d0dfb99d/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><p>新来的友友们建议先看一下<a href="https://hassanwong.top/posts/223fd004/">《教程&amp;笔记常量申明》</a>。</p></blockquote><h1 id="Hexo-篇"><a href="#Hexo-篇" class="headerlink" title="Hexo 篇"></a>Hexo 篇</h1><h2 id="Hexo-上传博客到-GitHub"><a href="#Hexo-上传博客到-GitHub" class="headerlink" title="Hexo 上传博客到 GitHub"></a>Hexo 上传博客到 GitHub</h2><ol><li><p>在<code>&lt;BlogRoot&gt;</code>的地址框中输入<code>cmd</code>，然后按回车调用<strong>命令行</strong></p></li><li><p>输入<code>hexo clean</code>，来清理缓存文件以及删除之前生成的静态文件</p></li><li><p>输入<code>hexo g</code>，来构建新的静态文件</p></li><li><p>输入<code>hexo s</code>，来启动本地预览</p></li><li><p>输入<code>hexo d</code>或<code>hexo deploy</code>，来将你的项目会自动部署到远端</p></li><li><p>输入 Github 账号密码即可部署成功（初次上传会需要）</p></li></ol><h2 id="hexo-deploy-部署不成功"><a href="#hexo-deploy-部署不成功" class="headerlink" title="hexo deploy 部署不成功"></a>hexo deploy 部署不成功</h2><p><strong>情况 1</strong>：有可能和 npm 版本有关，升级 npm</p><ul><li>查看当前版本：npm -v</li><li>更新到最新版本：npm install -g npm</li></ul><p><strong>情况 2</strong>：有可能和网速有关，重新上传几次<br><strong>情况 3</strong>：有可能代码有错误，得检查<br><strong>情况 4</strong>：有可能没有执行 hexo clean 命令</p><h2 id="卸载-Hexo-插件"><a href="#卸载-Hexo-插件" class="headerlink" title="卸载 Hexo 插件"></a>卸载 Hexo 插件</h2><p>方法一：</p><p><strong>查看插件</strong>：<code>npm list</code><br><strong>卸载插件</strong>：<code>npm uninstall &lt;对应插件名&gt;</code></p><p>方法二：</p><p>在代码编辑器里搜索插件名，删除对应代码即可</p><blockquote><p>方法二可作为方法一失败后的备选方案</p></blockquote><p>参考教程：<a href="https://www.dazhuanlan.com/2019/10/12/5da110cdd9a7b/">https://www.dazhuanlan.com/2019/10/12/5da110cdd9a7b/</a></p><h2 id="嵌入-Bilibili-视频到博客文章中"><a href="#嵌入-Bilibili-视频到博客文章中" class="headerlink" title="嵌入 Bilibili 视频到博客文章中"></a>嵌入 Bilibili 视频到博客文章中</h2><ol><li><p>在 Bilibili 视频页中将鼠标移到<code>转发按钮</code></p></li><li><p>下方将会弹出一个框，看到<code>嵌入代码</code>这，复制<code>src=&quot;</code>到<code>&amp;page</code>之间的代码（其实直接复制整条代码就行，但其视频显示样式不是最佳状态）</p></li><li><p>将代码粘贴到下方代码模板的<code>&lt;Copy&gt;</code>这，再将该段代码粘贴到博客文章中，再 Hexo 三连即可看到效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&lt;Copy&gt;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=1&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>效果如下：</p></li></ol><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=70725018&bvid=BV1UE411f7wk&cid=122536664&page=1&as_wide=1&high_quality=1&danmaku=1" frameborder="no" scrolling="no" allowfullscreen="true"> </iframe></div><blockquote><p><strong>说明</strong>：有些参数可参考以下教程中的介绍来更改。<br><strong>参考教程</strong>：<a href="https://www.cnblogs.com/wkfvawl/p/12268980.html">https://www.cnblogs.com/wkfvawl/p/12268980.html</a> （教程部分地方可能过时，仅参考）</p></blockquote><h2 id="🔥点击文章卡片跳转其他站点（Butterfly-主题）"><a href="#🔥点击文章卡片跳转其他站点（Butterfly-主题）" class="headerlink" title="🔥点击文章卡片跳转其他站点（Butterfly 主题）"></a>🔥点击文章卡片跳转其他站点（Butterfly 主题）</h2><blockquote><p>无意中看源码发现的。因为我还搭有其他网站，所以有这个跳转需求。</p></blockquote><p>直接在头部 yaml 中加上：link: <code>&lt;URL&gt;</code>，即可点击文章卡片跳转到相应链接。</p><h2 id="升级-Hexo-博客主题"><a href="#升级-Hexo-博客主题" class="headerlink" title="升级 Hexo 博客主题"></a>升级 Hexo 博客主题</h2><p><strong>方法一</strong>：<code>git pull</code>拉取最新版本主题（所有魔改全部清除）<br><strong>方法二</strong>：按照发布版本来对比更改源码（博主目前采用方法）</p><h2 id="将-fork-的项目和上游保持同步更改"><a href="#将-fork-的项目和上游保持同步更改" class="headerlink" title="将 fork 的项目和上游保持同步更改"></a>将 fork 的项目和上游保持同步更改</h2><p><strong>方法一</strong>：</p><ol><li>若本地没有部署自己的仓库，则 <code>git clone &lt;RepoGit&gt;</code></li><li><code>git remote add upstream &lt;OriginRepoGit&gt;</code>，拉取上游仓库的更改</li><li>再来解决文件冲突，解决好了可以 Git 三连</li></ol><p><strong>方法二</strong>：重新 fork</p><p>参考教程：<a href="https://www.jianshu.com/p/840ea273f25a">https://www.jianshu.com/p/840ea273f25a</a></p><h2 id="🔥归档页Archive文章显示数设置"><a href="#🔥归档页Archive文章显示数设置" class="headerlink" title="🔥归档页Archive文章显示数设置"></a>🔥归档页Archive文章显示数设置</h2><details ><summary> 为什么要特别去设置归档页文章显示数？ </summary>              <div class='content'>              <p>我一直以来觉得归档页显示的文章数得多于首页显示的才算有意义，否则归档页只是缩小版的博客首页，反而在文章检索上还不清晰直观，那么归档页的意义又何在呢？但如果你想快速知晓一名博主某一周期的文章发布情况或者通过时间维度来查找文章，这时查看归档页就是明智的选择，它可以清晰看到发布时间和文章名两个维度。</p><p>还有一点好处，拿Butterfly主题博客来说，该主题有标志性的侧边栏，如果归档页只显示默认10篇文章的话，那么多出来一长条的侧边栏会显得非常丑和多余。</p><p>综上两点，设置归档页文章显示数再多于首页，非常有必要！</p>              </div>            </details><ol><li><p>首先打开<code>&lt;BlogRoot&gt;\_config.yml</code>文件，找到<code>archive_generator</code>该字段，设置<code>per_page</code>即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">20</span> <span class="comment"># 归档页文章显示数</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">false</span> <span class="comment"># 生成年度归档</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span> <span class="comment"># 生成每月归档</span></span><br><span class="line">  <span class="attr">daily:</span> <span class="literal">false</span> <span class="comment"># 生成每日归档</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment"># 默认发布日期降序排序</span></span><br></pre></td></tr></table></figure></li><li><p>如果没有看到该字段，则将这些代码参数加上去</p></li><li><p>如果加了后没有效果，说明你缺少<a href="https://github.com/hexojs/hexo-generator-archive#hexo-generator-archive">hexo-generator-archive</a>插件，在博客下打开命令行，输入<code>npm install hexo-generator-archive --save</code>下载插件即可</p></li></ol><br><h1 id="Git-篇"><a href="#Git-篇" class="headerlink" title="Git 篇"></a>Git 篇</h1><h2 id="报错合集"><a href="#报错合集" class="headerlink" title="报错合集"></a>报错合集</h2><h3 id="没有访问仓库的权限或仓库不存在"><a href="#没有访问仓库的权限或仓库不存在" class="headerlink" title="没有访问仓库的权限或仓库不存在"></a>没有访问仓库的权限或仓库不存在</h3><p><strong>报错代码</strong>：<code>Please make sure you have the correct access rights and the repository exists</code></p><p><strong>原因</strong>：公钥出问题了,需要删除.ssh 文件夹,然后重设置用户名和邮箱再重新生成 ssh 公钥即可解决<br><strong>解决</strong>：</p><ol><li>删除<code>C:/Users/Administrator/.ssh</code>文件夹</li><li>打开 cmd 命令行</li><li>设置用户名：<code>git config --global user.name &lt;UserName&gt;</code></li><li>设置用户名邮箱：<code>git config --global user.email &lt;Email&gt;</code></li><li>查看设置：<code>git config --list</code></li><li>然后继续输入命令，修改后面的邮箱即可：<code>ssh-keygen -t rsa -C &lt;Email&gt;</code></li><li>打开 GitHub 网站，点击右上角头像</li><li>点击 Settings</li><li>将.ssh 文件夹里的<code>id_rsa.pub</code>用记事本打开，复制所有代码</li><li>粘贴到<code>Settings</code>👉<code>SSH and GPG keys</code>👉<code>Key</code>框中</li><li><code>Title</code>填写<code>rsa</code></li><li>点击绿键 <code>Add SSH key</code></li><li>重新 git 即可</li></ol><p>参考教程：<a href="https://blog.csdn.net/qq_43705131/article/details/107965888">https://blog.csdn.net/qq_43705131/article/details/107965888</a></p><h3 id="git-push-失败"><a href="#git-push-失败" class="headerlink" title="git push 失败"></a>git push 失败</h3><p><strong>报错代码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> ! [rejected]        XXX -&gt; XXX (fetch first)</span><br><span class="line">error: failed to push some refs to &#39;https:&#x2F;&#x2F;github.com&#x2F;XXX&#x2F;XXX.git</span><br><span class="line">&#39;</span><br><span class="line">hint: Updates were rejected because the remote contains work that you do</span><br><span class="line">hint: not have locally. This is usually caused by another repository pushing</span><br><span class="line">hint: to the same ref. You may want to first integrate the remote changes</span><br><span class="line">hint: (e.g., &#39;git pull ...&#39;) before pushing again.</span><br><span class="line">hint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.</span><br></pre></td></tr></table></figure><p><strong>原因</strong>：你的仓库有其它分支的更改，比如你的团队项目，别人更改过，而你本地没有导入，或者你通过GitHub官网修改过代码。</p><p><strong>解决</strong>：所以这时需要<code>git pull --rebase origin &lt;BranchName&gt;</code>命令来下拉远程仓库最新代码，最后再push本地代码。</p><p><strong>解释</strong>：该命令的意思是把远程库中的更新合并（<code>pull=fetch+merge</code>）到本地库中，<code>-rebase</code>的作用是取消掉本地库中刚刚的commit，并把他们<strong>接到</strong>更新后的版本库之中。</p><p>参考教程：<a href="https://blog.csdn.net/dietime1943/article/details/85682688">解决办法：git错误 error: failed to push some refs to ‘https://github.com/…</a></p><h2 id="GitHub-网站访问慢或访问不了"><a href="#GitHub-网站访问慢或访问不了" class="headerlink" title="GitHub 网站访问慢或访问不了"></a>GitHub 网站访问慢或访问不了</h2><blockquote><p>2021.4.27，刚才想问 Aki 店长问题，发现已被删除好友，不知为何莫名其妙，后会无期 👋</p></blockquote><div class="tag link"><a class="link-card" title="推荐教程" href="https://akilar.top/posts/61b3e163/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">推荐教程</p><p class="url">https://akilar.top/posts/61b3e163/</p></div></a></div><h2 id="删除-GitHub-仓库"><a href="#删除-GitHub-仓库" class="headerlink" title="删除 GitHub 仓库"></a>删除 GitHub 仓库</h2><ol><li>点击右上角头像</li><li>点击<code>your repositories</code></li><li>点击要删除的仓库，进入详情页</li><li>找到<code>setting</code>设置，下拉至最后可以看到删除选项</li><li>输入代码库名称确认删除，最后输入密码认证即可。</li></ol><h2 id="🔥上传仓库到-GitHub"><a href="#🔥上传仓库到-GitHub" class="headerlink" title="🔥上传仓库到 GitHub"></a>🔥上传仓库到 GitHub</h2><blockquote><p>确保你本地下载了 Git 软件</p></blockquote><ol><li><p>在 GitHub 里点击<code>New repository</code>新建一个项目</p></li><li><p>填写相应信息后点击 <code>Create repository</code> 绿键即可</p></li><li><p>点击 <code>Clone or Download</code> 会出现一个地址，copy 这个地址备用。</p></li><li><p>在本地新建仓库文件夹，右键点击 <code>git bash here</code></p></li><li><p>把 GitHub 上面新建仓库克隆到本地，输入 <code>git clone &lt;RepoGit&gt;</code></p></li><li><p>将你要上传的文件放入这个仓库（文件夹）中</p></li><li><p>右键仓库文件夹点击 <code>git bash here</code></p></li><li><p>依次输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init  <span class="comment">#初始化</span></span><br><span class="line">git add .  <span class="comment">#上传所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;&lt;Custom&gt;&quot;</span>  <span class="comment">#提交时的注释，例如：&quot;update&quot;</span></span><br><span class="line">git remote add origin &lt;RepoGit&gt;  <span class="comment">#连接你仓库的Git地址，使Git Bash知道代码要上传至哪个仓库</span></span><br><span class="line">git branch -M &lt;BranchName&gt;  <span class="comment">#将默认master分支名改为你自己设置的</span></span><br><span class="line"><span class="comment">#若第一次提交要加上&quot;-u&quot;，如下</span></span><br><span class="line">git push -u origin &lt;BranchName&gt;</span><br><span class="line"><span class="comment">#若提交失败，显示：error: failed to push some refs to，则加上&quot;-f&quot;来强制提交</span></span><br><span class="line">git push [-u] origin &lt;BranchName&gt; -f</span><br></pre></td></tr></table></figure></li></ol><h2 id="删除-GitHub-单个文件"><a href="#删除-GitHub-单个文件" class="headerlink" title="删除 GitHub 单个文件"></a>删除 GitHub 单个文件</h2><p>可以通过命令（自行百度），也可以通过在 GitHub 仓库里直接删除（点击要删文件，点击右上角垃圾箱图案）</p><h2 id="设置-GitHub-仓库私有化"><a href="#设置-GitHub-仓库私有化" class="headerlink" title="设置 GitHub 仓库私有化"></a>设置 GitHub 仓库私有化</h2><ol><li>进入仓库</li><li>点击<code>Settings</code>拉到最下，点击<code>Change visibility</code></li></ol><h2 id="git-clone-速度太慢解决方法"><a href="#git-clone-速度太慢解决方法" class="headerlink" title="git clone 速度太慢解决方法"></a>git clone 速度太慢解决方法</h2><p>使用 github 的镜像网站进行访问，github.com.cnpmjs.org，只需在 HTTPS 型仓库 Git 地址里的<code>github.com</code>后加<code>.cnpmjs.org</code>，不出意外下载速度会很快。</p><blockquote><p><strong>注意</strong>：只对 HTTPS 有效，对 SSH 无效<br>参考教程：<a href="https://www.cnblogs.com/burc/p/13985724.html">https://www.cnblogs.com/burc/p/13985724.html</a></p></blockquote><h2 id="更改-git-提交记录-commit"><a href="#更改-git-提交记录-commit" class="headerlink" title="更改 git 提交记录 commit"></a>更改 git 提交记录 commit</h2><blockquote><p><strong>场景</strong>：有时候你<code>git commit -m &quot;&lt;Custom&gt;&quot;</code>时发现<code>&lt;Custom&gt;</code>描述有误想改（此时还没有 push）</p></blockquote><ol><li>在<code>git bash</code>里输入<code>git commit --amend</code></li><li>按下<code>insert</code>键即可输入信息，第一行就是你刚才输入有误的<code>&lt;Custom&gt;</code></li><li>更改后按下<code>Esc</code>，再输入<code>:wq</code>即可保存状态</li><li>再来 push 到远程代码仓库即可</li><li>（额外）输入<code>git log</code>可以看你提交过的 git 历史，按下<code>wq</code>可以退出 log 状态</li></ol><blockquote><p>有其他相关问题建议参考以下教程</p><p>参考教程：<a href="https://zhuanlan.zhihu.com/p/100243017">https://zhuanlan.zhihu.com/p/100243017</a></p></blockquote><h2 id="查看远程仓库地址"><a href="#查看远程仓库地址" class="headerlink" title="查看远程仓库地址"></a>查看远程仓库地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><br><blockquote><p><strong>结束语</strong>：</p><p>如果有疑问或哪个地方表述有问题、有更好解决方案，欢迎留言！啊啊啊</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
            <tag> 🔹Hexo </tag>
            
            <tag> 👾GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何自定义美化魔改？</title>
      <link href="posts/25d6e78d/"/>
      <url>posts/25d6e78d/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>超长前言</strong>：</p><p>友友们看了那么多教程或许已经有了自己 DIY 的想法，开始对其他博主美化魔改教程有了自己的认知和理解，或者想按照自己的审美来改，但却又无从下手，没有思绪，本篇就给博客新人们分享下<u>经验思路</u>，涨涨姿势，<del>早日脱离美化魔改的苦海</del>。（本篇仅针对<strong>Butterfly 主题</strong>，其它主题的友友们仅供参考噢）</p><p>美化魔改虽说比较费时费力，但能看到最终效果还是能令人开心一整天。但过度沉迷于美化魔改之中，有些违背搭建博客的初衷，其实博客是用来分享、记录知识的一个载体，在美化魔改上所花的时间应远少于在文章上的。可是不经历乘风破浪怎能返璞归真？传统功夫点到为止，咋们开始吧！</p></blockquote><h2 id="美化魔改是什么？"><a href="#美化魔改是什么？" class="headerlink" title="美化魔改是什么？"></a>美化魔改是什么？</h2><p><strong>美化</strong>指的是使博客外观更加好看，一般是对 css、styl 样式文件的更改。</p><p><strong>魔改</strong>指的是对博客源码的更改，通常会更改布局框架的结构，其中我认为魔改包含了美化。</p><p><strong>两者的区别</strong>：美化通常不用改源码，只需更改自定义插入的样式代码，而魔改则需要更改源码。</p><blockquote><p>魔改的缺点是主题升级后，魔改的地方都会被更新后的代码给覆盖，重新魔改一遍很麻烦，所以我建议升级的时候可以按照 GitHub 上源码的<u>版本对比功能</u>来一点一点更新代码。</p></blockquote><h2 id="自定义美化魔改技巧"><a href="#自定义美化魔改技巧" class="headerlink" title="自定义美化魔改技巧"></a>自定义美化魔改技巧</h2><blockquote><p>前提：对 html、css、js 有一定的了解，最好有系统的学习，会使你事半功倍。</p><p>本栏分享的技巧包括<u>自定义美化魔改、如何模仿他人网站的布局、样式、动态功能</u>。</p></blockquote><ol><li><p><strong>善用<code>F12</code></strong></p><p><code>F12</code>通常用于对 css 样式的捕捉定位。你看到别人网站某个地方很好看，可以按下<code>F12</code>键，用鼠标定位到那里，将会弹出一个代码框，左栏是 html 代码，右栏是与选中元素对应的相关 css 代码以及全局通用 css 代码，将对应代码粘在自定义 css 文件里即可。若本地渲染后没有效果，可能是样式定位失败或者代码语法错误。</p></li><li><p><strong>善用<code>Ctrl + U</code></strong></p><p><code>Ctrl + U</code>用于查看当前网页的源码（并非整个博客源码），再按下<code>Ctrl + F</code>搜索例如像<code>.js</code>的关键词，即可查看博主在该页面使用到的 js 代码，逐个打开看或者“见名知意”来选择性的打开，这样有助于快速定位到网页对应板块使用到的 js 代码，除了搜索<code>.js</code>你也可以搜索<code>.css</code>、<code>.png</code>、<code>.jpg</code>等关键词来获取相应文件，当然使用时先得遵守各位博主的<a href="https://hassanwong.top/cc/">版权协议</a>。</p></li><li><p>有时候想<strong>调整页面布局</strong>，通常是<u>更改 pug 源码</u>，pug 是种类似于 html 的代码语言。若你想调整某板块的布局，先用 F12 获取它的 class 或 id，通过在代码编辑器里搜索关键词定位到 pug 源码，做适当更改，严格注意代码的缩进，Hexo 三连后即可看到效果。</p></li><li><p>最后，你的<u>模仿能力和英语不至于太差</u>。善于模仿代码语言的编写格式和能直接通过英文看懂代码含义，有助于你去美化魔改，很适合像我这种对语言不熟但又想改它的人。比如，我将 fontawesome 图标换成阿里图标后，发现它不能旋转，于是我在 vscode 代码编辑工具里全局搜索<code>360</code>，就搜到了类似于<code>(-100px) rotate(-360deg)</code>的代码，通过英文意思能大概知道是旋转 360 度的功能，但据观察推测，styl 和 css 应该是差不多的语言，只是语法不同，而且 styl 单词长得像 style 单词？于是我将该部分代码移植到对应处，效果就有了，建议友友们多思考多实践。</p></li></ol><div class="note warning no-icon flat"><p>注意：第 4 条是一个跳过编程语言学习、走捷径的方法（<del>耍小聪明</del>），在此仅提供思路，不具有普适性也不推荐，还是建议深入了解前端知识，有想法有能力者最好系统学习下，毕竟磨刀不误砍柴工嘛（严肃）。</p></div><h2 id="如何添加自定义-css、js-代码"><a href="#如何添加自定义-css、js-代码" class="headerlink" title="如何添加自定义 css、js 代码"></a>如何添加自定义 css、js 代码</h2><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\_config.yml</code>或<code>&lt;BlogRoot&gt;\_config.butterfly.yml</code>（如果你创建了）的代码</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line"><span class="addition">+   - &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;FilePath_&lt;Custom&gt;.css&gt;&quot;  media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="addition">+   - &lt;script type=&quot;text/javascript&quot; src=&quot;&lt;FilePath_&lt;Custom&gt;.js&gt;&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><br><blockquote><p><strong>结束语</strong>：</p><p>如果你很多概念看不懂的话，建议百度深入了解、系统学习。如果哪个地方表述有问题，欢迎留言！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly博客二创集锦</title>
      <link href="posts/7a869374/"/>
      <url>posts/7a869374/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><p>本篇是使用其他优秀博主教程时延申出来的 idea。目前有很多 Butterfly 主题美化魔改教程，此篇就不重复造轮子。本篇将记录值得的二创瞬间。<u>建议先看教程原贴</u>，因为本篇是原教程的拓展延伸。</p></blockquote><details red open><summary> 点击查看更新日志 </summary>              <div class='content'>              <div class="timeline"><p class='p h2'>更新日志</p><div class="timenode"><div class="meta"><p><p>2021-5-26</p></p></div><div class="body"><ul><li>404 页面魔改（适配 butterfly 3.7.7 版本）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-9</p></p></div><div class="body"><ul><li>404 页面魔改</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-17</p></p></div><div class="body"><ul><li>svg 图标旋转效果</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-16</p></p></div><div class="body"><ul><li>横版导航栏二级菜单偏移量修正</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-11</p></p></div><div class="body"><ul><li>社交图标使用多色 svg</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-10</p></p></div><div class="body"><ul><li><p>Gitcalendar 样式微调</p></li><li><p>哔哔 bber 发布时间格式</p></li></ul></div></div></div>              </div>            </details><div class="note warning no-icon flat"><p>食用教程前，建议先看一下<a href="https://hassanwong.top/posts/223fd004/">《教程&amp;笔记常量申明》</a>，且所有修改对<strong>缩进格式</strong>等有严格要求。</p></div><h2 id="Gitcalendar-样式微调"><a href="#Gitcalendar-样式微调" class="headerlink" title="Gitcalendar 样式微调"></a>Gitcalendar 样式微调</h2><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210410132723162.png" alt=""></p>              </div>            </details><div class="tag link"><a class="link-card" title="教程原贴" href="https://akilar.top/posts/1f9c68c9/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">教程原贴</p><p class="url">https://akilar.top/posts/1f9c68c9/</p></div></a></div><h3 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h3><blockquote><p>我是用 Win10 自带画图软件手工取的色 🙈</p></blockquote><p><strong>蒂芙尼蓝色调</strong>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">color:</span> <span class="string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#cdefec&#x27;, &#x27;#a9e4de&#x27;, &#x27;#81D8CF&#x27;, &#x27;#65cfc5&#x27;, &#x27;#4dc8bb&#x27;, &#x27;#39bbae&#x27;, &#x27;#319d93&#x27;, &#x27;#278178&#x27;, &#x27;#216962&#x27;, &#x27;#1b5852&#x27;]&quot;</span></span><br></pre></td></tr></table></figure><p><strong>冷色系温度色调（当前在用）</strong>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">color:</span> <span class="string">&quot;[&#x27;rgb(145, 145, 145, 0.2)&#x27;, &#x27;#c6ecc1&#x27;, &#x27;#a0e2bb&#x27;, &#x27;#81D8CF&#x27;, &#x27;#70c5d3&#x27;, &#x27;#60a2ce&#x27;, &#x27;#507ac9&#x27;, &#x27;#4356c5&#x27;, &#x27;#423cc4&#x27;, &#x27;#5b3abc&#x27;, &#x27;#7138b6&#x27;]&quot;</span></span><br></pre></td></tr></table></figure><h3 id="页面显示小更改"><a href="#页面显示小更改" class="headerlink" title="页面显示小更改"></a>页面显示小更改</h3><p>✅ 11 个颜色梯度块全部显示</p><p>✅ 月份、日期分别改成英文简写、数字形式，并全部显示</p><p>✅ “提交“改成“摸鱼次数”</p><p>✅ 修改提交次数对应色块的逻辑判断</p><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\gitcalendar.pug</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">#gitcalendar.gitcalendar</span><br><span class="line">  #gitmessage(:style&#x3D;&#39;&#123;top:y+px,left:x+px,position: fixed,zIndex:9999&#125;&#39;)</span><br><span class="line">    .angle-wrapper</span><br><span class="line">      span &#123;&#123;span1&#125;&#125; &amp;nbsp;</span><br><span class="line">      span &#123;&#123;span2&#125;&#125; 次上传</span><br><span class="line">  .position-relative</span><br><span class="line">    .border.py-2.graph-before-activity-overview</span><br><span class="line">      .js-gitcalendar-graph.mx-md-2.mx-3.d-flex.flex-column.flex-items-end.flex-xl-items-center.overflow-hidden.pt-1.is-graph-loading.graph-canvas.gitcalendar-graph.height-full.text-center</span><br><span class="line">        #gitcalendarcanvasbox(v-if&#x3D;&#39;simplemode&#39;)</span><br><span class="line">          canvas#gitcanvas(style&#x3D;&#39;animation: none;&#39;)</span><br><span class="line">        svg.js-gitcalendar-graph-svg(width&#x3D;&#39;100%&#39;, viewBox&#x3D;&#39;0 0 770 128&#39;, v-if&#x3D;&#39;!simplemode&#39;)</span><br><span class="line">          text.month(:x&#x3D;&#39;32 + monthindex*64&#39;, y&#x3D;&#39;20&#39;, v-for&#x3D;&#39;(month,monthindex) in monthchange&#39;) &#123;&#123;month&#125;&#125;</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;40&#39;)  7</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;52.5&#39;)  1</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;65&#39;)  2</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;77.5&#39;)  3</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;90&#39;)  4</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;102.5&#39;)  5</span><br><span class="line">          text.wday(text-anchor&#x3D;&#39;start&#39;, dx&#x3D;&#39;0&#39;, dy&#x3D;&#39;115&#39;) 6</span><br><span class="line">          g(v-for&#x3D;&#39;(weekitem,weekIndex) in data&#39;, :transform&#x3D;&#39;\&#39;translate(\&#39;+ (16 + weekIndex*14) + \&#39;,\&#39; + \&#39;0)\&#39;&#39;)</span><br><span class="line">            rect(@mouseover&#x3D;&quot;selectStyle(dayitem,$event)&quot;  @mouseleave&#x3D;&quot;outStyle()&quot; v-for&#x3D;&#39;(dayitem,dayIndex) in weekitem&#39;, :style&#x3D;&#39;&#123;fill:thiscolor(dayitem.count),shapeRendering:crispedges&#125;&#39;, :data-score&#x3D;&#39;dayitem.count&#39;, :data-date&#x3D;&#39;dayitem.date&#39;, x&#x3D;&#39;0&#39;, :y&#x3D;&#39; 30 + dayIndex*13 &#39;, width&#x3D;&#39;11&#39;, height&#x3D;&#39;11&#39;)</span><br><span class="line">      .contrib-footer.clearfix.mt-1.mx-3.px-3.pb-1</span><br><span class="line">        .float-left.text-gray</span><br><span class="line">          | 数据来源</span><br><span class="line">          a(:href&#x3D;&quot;&#39;https:&#x2F;&#x2F;github.com&#x2F;&#39;+ user &quot;, target&#x3D;&#39;blank&#39;) @&#123;&#123;user&#125;&#125;</span><br><span class="line">        .contrib-legend.text-gray</span><br><span class="line">          | Less</span><br><span class="line">          &#x2F;&#x2F;- 使11个颜色都显示出来</span><br><span class="line">          ul.legend</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[0]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[1]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[2]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[3]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[4]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[5]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[6]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[7]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[8]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[9]&#125;&#39;)</span><br><span class="line">            li(:style&#x3D;&#39;&#123;backgroundColor:color[10]&#125;&#39;)</span><br><span class="line">          | More</span><br><span class="line"></span><br><span class="line">  .contrib-column.contrib-column-first.table-column</span><br><span class="line">    span.text-muted 过去一年摸鱼次数</span><br><span class="line">    span.contrib-number &#123;&#123;total&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;oneyearbeforeday&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br><span class="line">  .contrib-column.table-column</span><br><span class="line">    span.text-muted 最近一月摸鱼次数</span><br><span class="line">    span.contrib-number &#123;&#123;thisweekdatacore&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;amonthago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br><span class="line">  .contrib-column.table-column</span><br><span class="line">    span.text-muted 最近一周摸鱼次数</span><br><span class="line">    span.contrib-number &#123;&#123;weekdatacore&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;aweekago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\gitcalendar-js.pug</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line">script.</span><br><span class="line">  var gitcalendar &#x3D; new Vue(&#123;</span><br><span class="line">    el: &#39;#gitcalendar&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      simplemode: !&#123;theme.gitcalendar.simplemode&#125;,</span><br><span class="line">      user: &#39;!&#123;theme.gitcalendar.user&#125;&#39;,</span><br><span class="line">      fixed: &#39;fixed&#39;,</span><br><span class="line">      px: &#39;px&#39;,</span><br><span class="line">      x: &#39;&#39;,</span><br><span class="line">      y: &#39;&#39;,</span><br><span class="line">      span1: &#39;&#39;,</span><br><span class="line">      span2: &#39;&#39;,</span><br><span class="line">      month: [&#39;Jan.&#39;, &#39;Feb.&#39;, &#39;Mar.&#39;, &#39;Apr.&#39;, &#39;May&#39;, &#39;Jun.&#39;, &#39;Jul.&#39;, &#39;Aug.&#39;, &#39;Sep.&#39;, &#39;Oct.&#39;, &#39;Nov.&#39;, &#39;Dec.&#39;],</span><br><span class="line">      monthchange: [],</span><br><span class="line">      oneyearbeforeday: &#39;&#39;,</span><br><span class="line">      thisday: &#39;&#39;,</span><br><span class="line">      amonthago: &#39;&#39;,</span><br><span class="line">      aweekago: &#39;&#39;,</span><br><span class="line">      weekdatacore: 0,</span><br><span class="line">      datacore: 0,</span><br><span class="line">      total: 0,</span><br><span class="line">      datadate: &#39;&#39;,</span><br><span class="line">      data: [],</span><br><span class="line">      positionplusdata: [],</span><br><span class="line">      firstweek: [],</span><br><span class="line">      lastweek: [],</span><br><span class="line">      beforeweek: [],</span><br><span class="line">      thisweekdatacore: 0,</span><br><span class="line">      mounthbeforeday: 0,</span><br><span class="line">      mounthfirstindex: 0,</span><br><span class="line">      crispedges: &#39;crispedges&#39;,</span><br><span class="line">      thisdayindex: 0,</span><br><span class="line">      amonthagoindex: 0,</span><br><span class="line">      amonthagoweek: [],</span><br><span class="line">      firstdate: [],</span><br><span class="line">      first2date: [],</span><br><span class="line">      montharrbefore: [],</span><br><span class="line">      monthindex: 0,</span><br><span class="line">      color: !&#123;theme.gitcalendar.color&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      selectStyle(data, event) &#123;</span><br><span class="line">        document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;block&#39;</span><br><span class="line">        this.span1 &#x3D; data.date;</span><br><span class="line">        this.span2 &#x3D; data.count;</span><br><span class="line">        this.x &#x3D; event.clientX - 100;</span><br><span class="line">        this.y &#x3D; event.clientY - 60</span><br><span class="line">      &#125;,</span><br><span class="line">      outStyle() &#123;</span><br><span class="line">        document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;none&#39;</span><br><span class="line">      &#125;, &#x2F;&#x2F;-修改逻辑</span><br><span class="line">      thiscolor(x) &#123;</span><br><span class="line">        if (x &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">          return this.color[0]</span><br><span class="line">        &#125; else if (x &lt; 2) &#123;</span><br><span class="line">          return this.color[1]</span><br><span class="line">        &#125; else if (x &lt; 3) &#123;</span><br><span class="line">          return this.color[2]</span><br><span class="line">        &#125; else if (x &lt; 4) &#123;</span><br><span class="line">          return this.color[3]</span><br><span class="line">        &#125; else if (x &lt; 6) &#123;</span><br><span class="line">          return this.color[4]</span><br><span class="line">        &#125; else if (x &lt; 8) &#123;</span><br><span class="line">          return this.color[5]</span><br><span class="line">        &#125; else if (x &lt; 11) &#123;</span><br><span class="line">          return this.color[6]</span><br><span class="line">        &#125; else if (x &lt; 14) &#123;</span><br><span class="line">          return this.color[7]</span><br><span class="line">        &#125; else if (x &lt; 17) &#123;</span><br><span class="line">          return this.color[8]</span><br><span class="line">        &#125; else if (x &lt; 22) &#123;</span><br><span class="line">          return this.color[9]</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          return this.color[10]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  var apiurl &#x3D; &#39;!&#123;theme.gitcalendar.apiurl&#125;&#39; ? &#39;https:&#x2F;&#x2F;!&#123;theme.gitcalendar.apiurl&#125;&#x2F;api?&#39; : &#39;https:&#x2F;&#x2F;githubapi.ryanchristian.dev&#x2F;user&#x2F;&#39;</span><br><span class="line">  var githubapiurl &#x3D; apiurl + gitcalendar.user;</span><br><span class="line">  &#x2F;&#x2F;canvas绘图</span><br><span class="line">  function responsiveChart() &#123;</span><br><span class="line">    let c &#x3D; document.getElementById(&quot;gitcanvas&quot;);</span><br><span class="line">    if (c) &#123;</span><br><span class="line">      let cmessage &#x3D; document.getElementById(&quot;gitmessage&quot;);</span><br><span class="line">      let ctx &#x3D; c.getContext(&quot;2d&quot;);</span><br><span class="line">      c.width &#x3D; document.getElementById(&quot;gitcalendarcanvasbox&quot;).offsetWidth;</span><br><span class="line">      let linemaxwitdh &#x3D; 0.96 * c.width &#x2F; gitcalendar.data.length;</span><br><span class="line">      c.height &#x3D; 9 * linemaxwitdh;</span><br><span class="line">      let lineminwitdh &#x3D; 0.8 * linemaxwitdh;</span><br><span class="line">      let setposition &#x3D; &#123;</span><br><span class="line">        x: 0.02 * c.width,</span><br><span class="line">        y: 0.025 * c.width</span><br><span class="line">      &#125;;</span><br><span class="line">      for (let week in gitcalendar.data) &#123;</span><br><span class="line">        weekdata &#x3D; gitcalendar.data[week];</span><br><span class="line">        for (let day in weekdata) &#123;</span><br><span class="line">          let dataitem &#x3D; &#123;</span><br><span class="line">            date: &quot;&quot;,</span><br><span class="line">            count: &quot;&quot;,</span><br><span class="line">            x: 0,</span><br><span class="line">            y: 0</span><br><span class="line">          &#125;;</span><br><span class="line">          gitcalendar.positionplusdata.push(dataitem);</span><br><span class="line">          ctx.fillStyle &#x3D; gitcalendar.thiscolor(weekdata[day].count);</span><br><span class="line">          setposition.y &#x3D; Math.round(setposition.y * 100) &#x2F; 100;</span><br><span class="line">          dataitem.date &#x3D; weekdata[day].date;</span><br><span class="line">          dataitem.count &#x3D; weekdata[day].count;</span><br><span class="line">          dataitem.x &#x3D; setposition.x;</span><br><span class="line">          dataitem.y &#x3D; setposition.y;</span><br><span class="line">          ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);</span><br><span class="line">          setposition.y &#x3D; setposition.y + linemaxwitdh</span><br><span class="line">        &#125;;</span><br><span class="line">        setposition.y &#x3D; 0.025 * c.width;</span><br><span class="line">        setposition.x &#x3D; setposition.x + linemaxwitdh</span><br><span class="line">      &#125;;</span><br><span class="line">      ctx.font &#x3D; &quot;600  Arial&quot;;</span><br><span class="line">      ctx.fillStyle &#x3D; &#39;#aaa&#39;;</span><br><span class="line">      ctx.fillText(&quot;7&quot;, 0, 1.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;1&quot;, 0, 2.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;2&quot;, 0, 3.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;3&quot;, 0, 4.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;4&quot;, 0, 5.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;5&quot;, 0, 6.9 * linemaxwitdh);</span><br><span class="line">      ctx.fillText(&quot;6&quot;, 0, 7.9 * linemaxwitdh);</span><br><span class="line">      let monthindexlist &#x3D; c.width &#x2F; 24;</span><br><span class="line">      for (let index in gitcalendar.monthchange) &#123;</span><br><span class="line">        ctx.fillText(gitcalendar.monthchange[index], monthindexlist, 0.7 * linemaxwitdh);</span><br><span class="line">        monthindexlist &#x3D; monthindexlist + c.width &#x2F; 12</span><br><span class="line">      &#125;;</span><br><span class="line">      cmessage.onmousemove &#x3D; function(event) &#123;</span><br><span class="line">        document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;none&#39;</span><br><span class="line">      &#125;;</span><br><span class="line">      c.onmousemove &#x3D; function(event) &#123;</span><br><span class="line">        document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;none&#39;</span><br><span class="line">        getMousePos(c, event);</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      function getMousePos(canvas, event) &#123;</span><br><span class="line">        var rect &#x3D; canvas.getBoundingClientRect();</span><br><span class="line">        var x &#x3D; event.clientX - rect.left * (canvas.width &#x2F; rect.width);</span><br><span class="line">        var y &#x3D; event.clientY - rect.top * (canvas.height &#x2F; rect.height);</span><br><span class="line">        &#x2F;&#x2F;console.log(&quot;x:&quot;+x+&quot;,y:&quot;+y);</span><br><span class="line">        for (let item of gitcalendar.positionplusdata) &#123;</span><br><span class="line">          let lenthx &#x3D; x - item.x;</span><br><span class="line">          let lenthy &#x3D; y - item.y;</span><br><span class="line">          &#x2F;&#x2F;console.log(lenthx,lenthy);</span><br><span class="line">          if (0 &lt; lenthx &amp;&amp; lenthx &lt; lineminwitdh) &#123;</span><br><span class="line">            if (0 &lt; lenthy &amp;&amp; lenthy &lt; lineminwitdh) &#123;</span><br><span class="line">              &#x2F;&#x2F;console.log(item.date,item.count)</span><br><span class="line">              document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;block&#39;</span><br><span class="line">              gitcalendar.span1 &#x3D; item.date;</span><br><span class="line">              gitcalendar.span2 &#x3D; item.count;</span><br><span class="line">              gitcalendar.x &#x3D; event.clientX - 100;</span><br><span class="line">              gitcalendar.y &#x3D; event.clientY - 60</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          &#x2F;&#x2F;if(0&lt; x - item.x &lt;lineminwitdh&amp;&amp;0&lt; y - item.y &lt;lineminwitdh)&#123;</span><br><span class="line">          &#x2F;&#x2F;console.log(item.count,item.date);</span><br><span class="line">          &#x2F;&#x2F;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F;数据统计算法</span><br><span class="line">  function addlastmonth() &#123;</span><br><span class="line">    if (gitcalendar.thisdayindex &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">      thisweekcore(52);</span><br><span class="line">      thisweekcore(51);</span><br><span class="line">      thisweekcore(50);</span><br><span class="line">      thisweekcore(49);</span><br><span class="line">      thisweekcore(48);</span><br><span class="line">      gitcalendar.thisweekdatacore +&#x3D; gitcalendar.firstdate[6].count;</span><br><span class="line">      gitcalendar.amonthago &#x3D; gitcalendar.firstdate[6].date</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      thisweekcore(52);</span><br><span class="line">      thisweekcore(51);</span><br><span class="line">      thisweekcore(50);</span><br><span class="line">      thisweekcore(49);</span><br><span class="line">      thisweek2core();</span><br><span class="line">      gitcalendar.amonthago &#x3D; gitcalendar.first2date[gitcalendar.thisdayindex - 1].date</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  function thisweek2core() &#123;</span><br><span class="line">    for (let i &#x3D; gitcalendar.thisdayindex - 1; i &lt; gitcalendar.first2date.length; i++) &#123;</span><br><span class="line">      gitcalendar.thisweekdatacore +&#x3D; gitcalendar.first2date[i].count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  function thisweekcore(index) &#123;</span><br><span class="line">    for (let item of gitcalendar.data[index]) &#123;</span><br><span class="line">      gitcalendar.thisweekdatacore +&#x3D; item.count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  function addlastweek() &#123;</span><br><span class="line">    for (let item of gitcalendar.lastweek) &#123;</span><br><span class="line">      gitcalendar.weekdatacore +&#x3D; item.count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  function addbeforeweek() &#123;</span><br><span class="line">    for (let i &#x3D; gitcalendar.thisdayindex; i &lt; gitcalendar.beforeweek.length; i++) &#123;</span><br><span class="line">      gitcalendar.weekdatacore +&#x3D; gitcalendar.beforeweek[i].count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  function addweek(data) &#123;</span><br><span class="line">    if (gitcalendar.thisdayindex &#x3D;&#x3D;&#x3D; 6) &#123;</span><br><span class="line">      gitcalendar.aweekago &#x3D; gitcalendar.lastweek[0].date;</span><br><span class="line">      addlastweek()</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      lastweek &#x3D; data.contributions[51];</span><br><span class="line">      gitcalendar.aweekago &#x3D; lastweek[gitcalendar.thisdayindex + 1].date;</span><br><span class="line">      addlastweek();</span><br><span class="line">      addbeforeweek()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fetch(githubapiurl)</span><br><span class="line">    .then(data &#x3D;&gt; data.json())</span><br><span class="line">    .then(data &#x3D;&gt; &#123;</span><br><span class="line">      gitcalendar.data &#x3D; data.contributions;</span><br><span class="line">      gitcalendar.total &#x3D; data.total;</span><br><span class="line">      gitcalendar.first2date &#x3D; gitcalendar.data[48];</span><br><span class="line">      gitcalendar.firstdate &#x3D; gitcalendar.data[47];</span><br><span class="line">      gitcalendar.firstweek &#x3D; data.contributions[0];</span><br><span class="line">      gitcalendar.lastweek &#x3D; data.contributions[52];</span><br><span class="line">      gitcalendar.beforeweek &#x3D; data.contributions[51];</span><br><span class="line">      gitcalendar.thisdayindex &#x3D; gitcalendar.lastweek.length - 1;</span><br><span class="line">      gitcalendar.thisday &#x3D; gitcalendar.lastweek[gitcalendar.thisdayindex].date;</span><br><span class="line">      gitcalendar.oneyearbeforeday &#x3D; gitcalendar.firstweek[0].date;</span><br><span class="line">      gitcalendar.monthindex &#x3D; gitcalendar.thisday.substring(5, 7) * 1;</span><br><span class="line">      gitcalendar.montharrbefore &#x3D; gitcalendar.month.splice(gitcalendar.monthindex, 12 - gitcalendar.monthindex);</span><br><span class="line">      gitcalendar.monthchange &#x3D; gitcalendar.montharrbefore.concat(gitcalendar.month);</span><br><span class="line">      addweek(data);</span><br><span class="line">      addlastmonth();</span><br><span class="line">      responsiveChart();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(function(error) &#123;</span><br><span class="line">      console.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;手机版更换为svg绘制</span><br><span class="line">  if (document.getElementById(&quot;gitcalendarcanvasbox&quot;).offsetWidth &lt; 500) &#123;</span><br><span class="line">    gitcalendar.simplemode &#x3D; false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;当改变窗口大小时重新绘制canvas</span><br><span class="line">  window.onresize &#x3D; function() &#123;</span><br><span class="line">    if (gitcalendar.simplemode) responsiveChart()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;解决滚动滑轮时出现的标签显示</span><br><span class="line">  window.onscroll &#x3D; function() &#123;</span><br><span class="line">    if (document.querySelector(&#39;.angle-wrapper&#39;)) &#123;</span><br><span class="line">      document.querySelector(&#39;.angle-wrapper&#39;).style.display &#x3D; &#39;none&#39;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果。</p></li></ol><br><h2 id="哔哔-bber-发布时间格式"><a href="#哔哔-bber-发布时间格式" class="headerlink" title="哔哔 bber 发布时间格式"></a>哔哔 bber 发布时间格式</h2><blockquote><p>看到洪哥 bber 是<code>过去多少天</code>的显示方式，很喜欢且在移动端它和<code>设备显示文字</code>合起来不会占太大空间，但按照洪哥 bber 教程里配出来的是<code>年月日时分秒</code>的时间格式，最后结合洪哥和百度网友 js 代码整出了一个<code>bber.js</code>。</p></blockquote><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210410144530815.png" alt=""></p>              </div>            </details><div class="tag link"><a class="link-card" title="教程原贴" href="https://blog.zhheo.com/p/27be0e44.html"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://blog.zhheo.com/img/avatar.png"/></div><div class="right"><p class="text">教程原贴</p><p class="url">https://blog.zhheo.com/p/27be0e44.html</p></div></a></div><p>用<strong>过去多久</strong>来表示时间：</p><ol><li><p>新建<code>&lt;BlogRoot&gt;\themes\butterfly\source\js\bber.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&quot;#bber-loading&quot;</span>)) &#123;</span><br><span class="line">  <span class="keyword">var</span> loading_pic = <span class="built_in">document</span>.getElementById(<span class="string">&quot;bber-loading&quot;</span>);</span><br><span class="line">  loading_pic.innerHTML =</span><br><span class="line">    <span class="string">&#x27;&lt;span id=&quot;moments_loading&quot;&gt;&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&quot;#bber&quot;</span>)) &#123;</span><br><span class="line">  app</span><br><span class="line">    .auth(&#123;</span><br><span class="line">      persistence: <span class="string">&quot;local&quot;</span>, <span class="comment">//避免与同实例冲突</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .anonymousAuthProvider()</span><br><span class="line">    .signIn()</span><br><span class="line">    .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> bbClass = <span class="string">&quot;#bber&quot;</span>;</span><br><span class="line">      $(bbClass).after(</span><br><span class="line">        <span class="string">&#x27;&lt;div class=&quot;load&quot;&gt;&lt;button class=&quot;load-btn button-load&quot;&gt;加载中……&lt;/button&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">const</span> db = app.database();</span><br><span class="line">      <span class="keyword">const</span> collection = db.collection(<span class="string">&quot;talks&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> count = <span class="number">0</span>,</span><br><span class="line">        per = <span class="number">9</span>,</span><br><span class="line">        page = <span class="number">1</span>;</span><br><span class="line">      collection.count(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">        count = res.total;</span><br><span class="line">        loading_pic.innerHTML = <span class="string">``</span>;</span><br><span class="line">        $(bbClass).append(</span><br><span class="line">          <span class="string">&#x27;&lt;p class=&quot;count&quot;&gt;共 &lt;span class=&quot;count-data&quot;&gt;&#x27;</span> +</span><br><span class="line">            count +</span><br><span class="line">            <span class="string">&quot;&lt;/span&gt; 条&lt;/p&gt;&quot;</span></span><br><span class="line">        );</span><br><span class="line">        getList();</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getList</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((page - <span class="number">1</span>) * per &gt;= count) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> d,</span><br><span class="line">          date,</span><br><span class="line">          resCont = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        collection</span><br><span class="line">          .limit(per)</span><br><span class="line">          .skip((page - <span class="number">1</span>) * per)</span><br><span class="line">          .orderBy(<span class="string">&quot;date&quot;</span>, <span class="string">&quot;desc&quot;</span>)</span><br><span class="line">          .get(<span class="function"><span class="keyword">function</span> (<span class="params">err, res</span>) </span>&#123;</span><br><span class="line">            res.data.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">              (d = item.date),</span><br><span class="line">                (data =</span><br><span class="line">                  d.getFullYear() +</span><br><span class="line">                  <span class="string">&quot;/&quot;</span> +</span><br><span class="line">                  (d.getMonth() + <span class="number">1</span>) +</span><br><span class="line">                  <span class="string">&quot;/&quot;</span> +</span><br><span class="line">                  d.getDate() +</span><br><span class="line">                  <span class="string">&quot; &quot;</span> +</span><br><span class="line">                  d.getHours() +</span><br><span class="line">                  <span class="string">&quot;:&quot;</span> +</span><br><span class="line">                  d.getMinutes() +</span><br><span class="line">                  <span class="string">&quot;:&quot;</span> +</span><br><span class="line">                  d.getSeconds());</span><br><span class="line">              data1 = getDateDiff(data);</span><br><span class="line">              dataTime =</span><br><span class="line">                <span class="string">&#x27;&lt;p class=&quot;datatime&quot;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;title=&quot;&#x27;</span> +</span><br><span class="line">                data +</span><br><span class="line">                <span class="string">&#x27;&quot;&gt;&#x27;</span> +</span><br><span class="line">                data1 +</span><br><span class="line">                <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">              dataCont =</span><br><span class="line">                <span class="string">&#x27;&lt;p class=&quot;datacont&quot;&gt;&#x27;</span> + urlToLink(item.content) + <span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">              <span class="keyword">var</span> from_icon = <span class="string">&quot;&quot;</span>;</span><br><span class="line">              <span class="keyword">if</span> (item.from.indexOf(<span class="string">&quot;iPhone&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                from_icon = <span class="string">&#x27;&lt;i class=&quot;fas fa-mobile-alt&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.from.indexOf(<span class="string">&quot;iPad&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                from_icon = <span class="string">&#x27;&lt;i class=&quot;fas fa-tablet-alt&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.from.indexOf(<span class="string">&quot;MacBook&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                from_icon = <span class="string">&#x27;&lt;i class=&quot;fas fa-laptop&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.from.indexOf(<span class="string">&quot;微信&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                from_icon =</span><br><span class="line">                  <span class="string">&#x27;&lt;i class=&quot;fab fa-weixin&quot; style=&quot;font-size: 0.6rem&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                from_icon = <span class="string">&#x27;&lt;i class=&quot;fas fa-tools&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              dataFrom = item.from</span><br><span class="line">                ? <span class="string">&#x27;&lt;p class=&quot;datafrom&quot;&gt;&lt;small&gt;&#x27;</span> +</span><br><span class="line">                  from_icon +</span><br><span class="line">                  item.from +</span><br><span class="line">                  <span class="string">&quot;&lt;/small&gt;&lt;/p&gt;&quot;</span></span><br><span class="line">                : <span class="string">&quot;&quot;</span>;</span><br><span class="line">              resCont +=</span><br><span class="line">                <span class="string">&#x27;&lt;li class=&quot;item&quot;&gt;&lt;div&gt;&#x27;</span> +</span><br><span class="line">                dataTime +</span><br><span class="line">                dataCont +</span><br><span class="line">                dataFrom +</span><br><span class="line">                <span class="string">&quot;&lt;/div&gt;&lt;/li&gt;&quot;</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            $(bbClass).append(</span><br><span class="line">              <span class="string">&#x27;&lt;section class=&quot;timeline page-&#x27;</span> +</span><br><span class="line">                page +</span><br><span class="line">                <span class="string">&#x27;&quot;&gt;&lt;ul&gt;&lt;div class=&quot;list&quot;&gt;&#x27;</span> +</span><br><span class="line">                resCont +</span><br><span class="line">                <span class="string">&quot;&lt;/div&gt;&lt;/ul&gt;&lt;/section&gt;&quot;</span></span><br><span class="line">            );</span><br><span class="line">            $(<span class="string">&quot;button.button-load&quot;</span>).text(<span class="string">&quot;加载更多&quot;</span>);</span><br><span class="line">            <span class="comment">// $(&#x27;html,body&#x27;).animate(&#123; scrollTop: $(&#x27;.timeline.page-&#x27;+page).offset().top - 20 &#125;, 500)</span></span><br><span class="line">            <span class="keyword">if</span> (page * per &gt;= count) &#123;</span><br><span class="line">              $(<span class="string">&quot;.load&quot;</span>).remove();</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            page++;</span><br><span class="line">            Lately(&#123; <span class="attr">target</span>: <span class="string">&quot;#bber .datatime&quot;</span> &#125;);</span><br><span class="line">            <span class="comment">// $(&quot;#bber a[rel!=link]:has(img)&quot;).slimbox();//图片灯箱效果</span></span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getTs</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> arr = time.split(<span class="regexp">/[/ :]/</span>),</span><br><span class="line">          _date = <span class="keyword">new</span> <span class="built_in">Date</span>(</span><br><span class="line">            arr[<span class="number">0</span>],</span><br><span class="line">            arr[<span class="number">1</span>] - <span class="number">1</span>,</span><br><span class="line">            arr[<span class="number">2</span>],</span><br><span class="line">            arr[<span class="number">3</span>],</span><br><span class="line">            arr[<span class="number">4</span>],</span><br><span class="line">            arr[<span class="number">5</span>]</span><br><span class="line">          ),</span><br><span class="line">          timeStr = <span class="built_in">Date</span>.parse(_date);</span><br><span class="line">        <span class="keyword">return</span> timeStr;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getDateDiff</span>(<span class="params">post_modified</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 拿到当前时间戳和发布时的时间戳，然后得出时间戳差</span></span><br><span class="line">        <span class="keyword">var</span> curTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">var</span> postTime = <span class="keyword">new</span> <span class="built_in">Date</span>(post_modified);</span><br><span class="line">        <span class="comment">//部分浏览器不兼容此转换建议所以对此进行补充（指定调用自己定义的函数进行生成发布时间的时间戳）</span></span><br><span class="line">        <span class="comment">//var timeDiff = curTime.getTime() - postTime.getTime();</span></span><br><span class="line">        <span class="comment">//上面一行代码可以换成以下（兼容性的解决）</span></span><br><span class="line">        <span class="keyword">var</span> timeDiff = curTime.getTime() - getTs(post_modified);</span><br><span class="line">        <span class="comment">// 单位换算</span></span><br><span class="line">        <span class="keyword">var</span> min = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">var</span> hour = min * <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">var</span> day = hour * <span class="number">24</span>;</span><br><span class="line">        <span class="keyword">var</span> week = day * <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">var</span> month = week * <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">var</span> year = month * <span class="number">12</span>;</span><br><span class="line">        <span class="comment">// 计算发布时间距离当前时间的周、天、时、分</span></span><br><span class="line">        <span class="keyword">var</span> exceedyear = <span class="built_in">Math</span>.floor(timeDiff / year);</span><br><span class="line">        <span class="keyword">var</span> exceedmonth = <span class="built_in">Math</span>.floor(timeDiff / month);</span><br><span class="line">        <span class="keyword">var</span> exceedWeek = <span class="built_in">Math</span>.floor(timeDiff / week);</span><br><span class="line">        <span class="keyword">var</span> exceedDay = <span class="built_in">Math</span>.floor(timeDiff / day);</span><br><span class="line">        <span class="keyword">var</span> exceedHour = <span class="built_in">Math</span>.floor(timeDiff / hour);</span><br><span class="line">        <span class="keyword">var</span> exceedMin = <span class="built_in">Math</span>.floor(timeDiff / min);</span><br><span class="line">        <span class="comment">// 最后判断时间差到底是属于哪个区间，然后return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (exceedyear &lt; <span class="number">100</span> &amp;&amp; exceedyear &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;发表于&quot;</span> + exceedyear + <span class="string">&quot;年前&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (exceedmonth &lt; <span class="number">12</span> &amp;&amp; exceedmonth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> exceedmonth + <span class="string">&quot;月前&quot;</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (exceedWeek &lt; <span class="number">4</span> &amp;&amp; exceedWeek &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="keyword">return</span> exceedWeek + <span class="string">&quot;星期前&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (exceedDay &lt; <span class="number">7</span> &amp;&amp; exceedDay &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> exceedDay + <span class="string">&quot;天前&quot;</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (exceedHour &lt; <span class="number">24</span> &amp;&amp; exceedHour &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="keyword">return</span> exceedHour + <span class="string">&quot;小时前&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="keyword">if</span> (exceedMin == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;刚刚发表&quot;</span>;</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> exceedMin + <span class="string">&quot;分钟前&quot;</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      $(<span class="string">&quot;.button-load&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.button-load&quot;</span>).text(<span class="string">&quot;加载中……&quot;</span>);</span><br><span class="line">        getList();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">urlToLink</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> re = <span class="regexp">/\bhttps?:\/\/(?!\S+(?:jpe?g|png|bmp|gif|webp|gif))\S+/g</span>;</span><br><span class="line">  <span class="keyword">var</span> re_forpic =</span><br><span class="line">    /\bhttps?:[^:<span class="xml"><span class="tag">&lt;&gt;</span>&quot;]*\/([^:<span class="tag">&lt;&gt;</span>&quot;]*)(\.(jpeg)|(png)|(jpg)|(webp))/g;</span></span><br><span class="line"><span class="xml">  str = str.replace(re_forpic, function (imgurl) &#123;</span></span><br><span class="line"><span class="xml">    return &#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#x27; + imgurl + &#x27;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#x27; + imgurl + &#x27;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;;</span></span><br><span class="line"><span class="xml">  &#125;);</span></span><br><span class="line"><span class="xml">  str = str.replace(re, function (website) &#123;</span></span><br><span class="line"><span class="xml">    return (</span></span><br><span class="line"><span class="xml">      &quot; <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&quot; + website + &quot;&#x27;</span><span class="attr">rel</span>=<span class="string">&#x27;noopener&#x27;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>↘链接↙<span class="tag">&lt;/<span class="name">a</span>&gt;</span> &quot;</span></span><br><span class="line"><span class="xml">    );</span></span><br><span class="line"><span class="xml">  &#125;);</span></span><br><span class="line"><span class="xml">  str = qqWechatEmotionParser(str);</span></span><br><span class="line"><span class="xml">  return str;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">var $jscomp = $jscomp || &#123;&#125;;</span></span><br><span class="line"><span class="xml">$jscomp.scope = &#123;&#125;;</span></span><br><span class="line"><span class="xml">$jscomp.arrayIteratorImpl = function (b) &#123;</span></span><br><span class="line"><span class="xml">  var g = 0;</span></span><br><span class="line"><span class="xml">  return function () &#123;</span></span><br><span class="line"><span class="xml">    return g <span class="tag">&lt; <span class="attr">b.length</span> ? &#123; <span class="attr">done:</span> !<span class="attr">1</span>, <span class="attr">value:</span> <span class="attr">b</span>[<span class="attr">g</span>++] &#125; <span class="attr">:</span> &#123; <span class="attr">done:</span> !<span class="attr">0</span> &#125;;</span></span></span><br><span class="line"><span class="xml">  &#125;;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">$jscomp.arrayIterator = function (b) &#123;</span></span><br><span class="line"><span class="xml">  return &#123; next: $jscomp.arrayIteratorImpl(b) &#125;;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">$jscomp.makeIterator = function (b) &#123;</span></span><br><span class="line"><span class="xml">  var g =</span></span><br><span class="line"><span class="xml">    &quot;undefined&quot; != typeof Symbol &amp;&amp; Symbol.iterator &amp;&amp; b[Symbol.iterator];</span></span><br><span class="line"><span class="xml">  return g ? g.call(b) : $jscomp.arrayIterator(b);</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">(function (b, g) &#123;</span></span><br><span class="line"><span class="xml">  var p = function (h) &#123;</span></span><br><span class="line"><span class="xml">    var d = h.lang || &#123;</span></span><br><span class="line"><span class="xml">      second: &quot;\u79d2&quot;,</span></span><br><span class="line"><span class="xml">      minute: &quot;\u5206\u949f&quot;,</span></span><br><span class="line"><span class="xml">      hour: &quot;\u5c0f\u65f6&quot;,</span></span><br><span class="line"><span class="xml">      day: &quot;\u5929&quot;,</span></span><br><span class="line"><span class="xml">      month: &quot;\u4e2a\u6708&quot;,</span></span><br><span class="line"><span class="xml">      year: &quot;\u5e74&quot;,</span></span><br><span class="line"><span class="xml">      ago: &quot;\u524d&quot;,</span></span><br><span class="line"><span class="xml">      error: &quot;NaN&quot;,</span></span><br><span class="line"><span class="xml">    &#125;;</span></span><br><span class="line"><span class="xml">    h = $jscomp.makeIterator(document.querySelectorAll(h.target || &quot;.time&quot;));</span></span><br><span class="line"><span class="xml">    for (var c = h.next(); !c.done; c = h.next()) &#123;</span></span><br><span class="line"><span class="xml">      c = c.value;</span></span><br><span class="line"><span class="xml">      var a = c.dateTime;</span></span><br><span class="line"><span class="xml">      var e = c.title,</span></span><br><span class="line"><span class="xml">        f = c.innerHTML;</span></span><br><span class="line"><span class="xml">      if (</span></span><br><span class="line"><span class="xml">        !a ||</span></span><br><span class="line"><span class="xml">        isNaN(</span></span><br><span class="line"><span class="xml">          new Date(</span></span><br><span class="line"><span class="xml">            (a = a</span></span><br><span class="line"><span class="xml">              .replace(/(.*)[a-z](.*)\+(.*)/gi, &quot;$1 $2&quot;)</span></span><br><span class="line"><span class="xml">              .replace(/-/g, &quot;/&quot;))</span></span><br><span class="line"><span class="xml">          )</span></span><br><span class="line"><span class="xml">        )</span></span><br><span class="line"><span class="xml">      )</span></span><br><span class="line"><span class="xml">        if (e &amp;&amp; !isNaN(new Date((e = e.replace(/-/g, &quot;/&quot;))))) a = e;</span></span><br><span class="line"><span class="xml">        else if (f &amp;&amp; !isNaN(new Date((f = f.replace(/-/g, &quot;/&quot;))))) a = f;</span></span><br><span class="line"><span class="xml">        else break;</span></span><br><span class="line"><span class="xml">      c.title = a;</span></span><br><span class="line"><span class="xml">      a = new Date(a);</span></span><br><span class="line"><span class="xml">      a = (new Date().getTime() - a.getTime()) / 1e3;</span></span><br><span class="line"><span class="xml">      e = a / 60;</span></span><br><span class="line"><span class="xml">      f = e / 60;</span></span><br><span class="line"><span class="xml">      var k = f / 24,</span></span><br><span class="line"><span class="xml">        l = k / 30,</span></span><br><span class="line"><span class="xml">        m = l / 12;</span></span><br><span class="line"><span class="xml">      c.innerHTML =</span></span><br><span class="line"><span class="xml">        (1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">m</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(m) + d.year</span></span><br><span class="line"><span class="xml">          : 1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">l</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(l) + d.month</span></span><br><span class="line"><span class="xml">          : 1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">k</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(k) + d.day</span></span><br><span class="line"><span class="xml">          : 1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">f</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(f) + d.hour</span></span><br><span class="line"><span class="xml">          : 1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">e</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(e) + d.minute</span></span><br><span class="line"><span class="xml">          : 1 <span class="tag">&lt;<span class="name">=</span> <span class="attr">a</span></span></span></span><br><span class="line"><span class="xml">          ? Math.floor(a) + d.second</span></span><br><span class="line"><span class="xml">          : d.error) + d.ago;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;;</span></span><br><span class="line"><span class="xml">  var n = (function () &#123;</span></span><br><span class="line"><span class="xml">    return this || (0, eval)(&quot;this&quot;);</span></span><br><span class="line"><span class="xml">  &#125;)();</span></span><br><span class="line"><span class="xml">  &quot;Lately&quot; in n || (n.Lately = p);</span></span><br><span class="line"><span class="xml">&#125;)();</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\page\bb.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    script.</span><br><span class="line">      const app = cloudbase.init(&#123;</span><br><span class="line">      env: &#x27;一giu我里giao&#x27;, //这里是你的环境id</span><br><span class="line">      //region: &quot;ap-guangzhou&quot;</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="deletion">- script(type=&#x27;text/javascript&#x27;, src=&#x27;https://cdn.jsdelivr.net/gh/zhheo/bber@main/bber.js&#x27;, data-pjax=&#x27;&#x27;)</span></span><br><span class="line"><span class="addition">+ script(type=&#x27;text/javascript&#x27;, src=&#x27;/js/bber.js&#x27;, data-pjax=&#x27;&#x27;)</span></span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果。</p></li></ol><p>参考教程：<a href="https://blog.csdn.net/u013008898/article/details/86679568">https://blog.csdn.net/u013008898/article/details/86679568</a></p><details ><summary> 碎碎念，搭建哔哔过程 </summary>              <div class='content'>              <p>现在我转而用 Heson 的哔哔项目了，因为腾讯云莫名其妙不能调用哔哔内容，其实刚开始还是可以的。我前前后后反复找原因，甚至重新按教程搭建了 2 次腾讯云后台还是调用不了，于是我开始猜测是不是主题升级的原因，但我将升级之前代码的 download 下来 hexo s 后居然可以正常显示哔哔内容，很奇怪，但是我都已经费老大心思升级了难不成还退回去？更离谱的还有，我在分析原因的时候，不知道碰了个什么 bb 相关代码，突然能正常显示，过了会又不能显示，最后，还有离谱的事情，我突然发现腾讯云后台权限配置莫名其妙改了，我直接黑人问号，我明明配置好了，什么时候就自动改了，然后我将权限改成<u>管理员能改所有人能看</u>，唉，就能正常显示了嘿嘿，你以为这就万事大吉了？很气，过了一段时间，哔哔内容又不能正常显示，我在想应该是权限的原因吧？结果到腾讯云一看，这回权限老老实实是开的，但不知道又 tm 哪出问题了，我急了我急了，索性我转战叨叨（一个仿哔哔项目），我配置了半天，好不容易快结束，结果，唉，vercel 的 api 突然死活发不了哔哔，问教程博主也无济于事，爬！爷生气了，我还是挺细心的去按照教程操作，结果就这，最后啊，我最终选择了 leancloud 后台的哔哔项目，感谢 heson 大佬，他还做了蜜云版哔哔（可称为情侣哔哔），非常养眼的一个哔哔项目，i 了 i 了，适合虐自己(dog)，但缺点是只能在微信公众号发，现在不支持 IOS 快捷指令，以及增删改查合并一些操作，不过每次发之前想好措辞即可，实在不行打开后台改也是一样，我目前勉强能习惯吧（因为我别无选择，不想再重新试了！Heson 的也挺好）</p>              </div>            </details><br><h2 id="社交图标使用多色-svg"><a href="#社交图标使用多色-svg" class="headerlink" title="社交图标使用多色 svg"></a>社交图标使用多色 svg</h2><blockquote><p>本小节结合了 Aki 的教程和<a href="https://kangblogs.top">kangblogs</a>群友的做法。Aki 的教程适合 Butterfly3.7.0 版本以上且只能是导航栏的图标多色显示，而我的需求是社交图标也能多色显示（2021-4-16 现在 Aki 已经写了教程，本篇仅供参考）。</p></blockquote><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210411233935368.png" alt=""></p>              </div>            </details><div class="tag link"><a class="link-card" title="教程原贴" href="https://akilar.top/posts/23fdf850/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/akilarlxh.github.io/img/siteicon/favicon.ico"/></div><div class="right"><p class="text">教程原贴</p><p class="url">https://akilar.top/posts/23fdf850/</p></div></a></div><ol><li><p>修改<code>&lt;BlogRoot&gt;themes\butterfly\layout\includes\header\social.pug</code></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">each url, icon in theme.social</span><br><span class="line">  a.social-icon(href=url_for(trim(url.split(&#x27;||&#x27;)[0])) target=&quot;_blank&quot;</span><br><span class="line">  title=url.split(&#x27;||&#x27;)[1] <span class="comment">=== undefined ? &#x27;&#x27; : trim(url.split(&#x27;||&#x27;)[1]))</span></span><br><span class="line"><span class="deletion">- i(class=icon)</span></span><br><span class="line"><span class="addition">+    style(type=&#x27;text/css&#x27;).</span></span><br><span class="line"><span class="addition">+      .icon &#123;</span></span><br><span class="line"><span class="addition">+      width: 1em; height: 1em;</span></span><br><span class="line"><span class="addition">+      vertical-align: -0.15em;</span></span><br><span class="line"><span class="addition">+      fill: currentColor;</span></span><br><span class="line"><span class="addition">+      overflow: hidden;</span></span><br><span class="line"><span class="addition">+      &#125;</span></span><br><span class="line"><span class="addition">+    svg.icon(aria-hidden=&#x27;true&#x27;)</span></span><br><span class="line"><span class="addition">+      use(xlink:href=&#x27;#&#x27;+icon)</span></span><br></pre></td></tr></table></figure></li><li><p>按照原教程配置，记得导入自己阿里图标 symbol 的 js，最后 Hexo 三连即可看到效果。</p></li></ol><h3 id="svg-图标旋转效果"><a href="#svg-图标旋转效果" class="headerlink" title="svg 图标旋转效果"></a>svg 图标旋转效果</h3><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\source\css\_layout\aside.styl</code>大概第 85 行左右</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">      .social-icon</span><br><span class="line">        margin: 0 .5rem</span><br><span class="line">        color: var(--font-color)</span><br><span class="line">        font-size: 1.4em</span><br><span class="line">        cursor: pointer</span><br><span class="line"><span class="addition">+       // svg旋转魔改</span></span><br><span class="line"><span class="addition">+       svg.icon</span></span><br><span class="line"><span class="addition">+         transition: all .3s</span></span><br><span class="line"><span class="addition">+         &amp;:hover</span></span><br><span class="line"><span class="addition">+           transform: rotate(360deg)</span></span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果。</p></li></ol><br><h2 id="横版导航栏二级菜单偏移量修正"><a href="#横版导航栏二级菜单偏移量修正" class="headerlink" title="横版导航栏二级菜单偏移量修正"></a>横版导航栏二级菜单偏移量修正</h2><blockquote><p>如果你自己将洪哥的导航组件居中样式成功扒了下来，恭喜你可以参考这篇，因为你会发现每次更新导航栏内容时都要重新在CSS里调整二级导航栏的偏移量，这样会很麻烦。</p></blockquote><ol><li><p>修改<code>&lt;BlogRoot&gt;\themes\butterfly\layout\includes\header\menu_item.pug</code>大概第 30 行</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">      else</span><br><span class="line">        .menus_item</span><br><span class="line">          a.site-page(href=&#x27;javascript:void(0);&#x27;)</span><br><span class="line">            if label.split(&#x27;||&#x27;)[1]</span><br><span class="line">              - var icon_label = trim(label.split(&#x27;||&#x27;)[1])</span><br><span class="line">              if icon_label.substring(0,2)==&quot;fa&quot;</span><br><span class="line">                i.fa-fw(class=icon_label)</span><br><span class="line">              else if icon_label.substring(0,4)==&quot;icon&quot;</span><br><span class="line">                svg.icon(aria-hidden=&quot;true&quot;)</span><br><span class="line">                  use(xlink:href=`#`+ icon_label)</span><br><span class="line">            span=&#x27; &#x27;+ trim(label.split(&#x27;||&#x27;)[0])</span><br><span class="line">            i.fas.fa-chevron-down.expand(class=sidebarChildHide)</span><br><span class="line"><span class="deletion">-         ul.menus_item_child</span></span><br><span class="line"><span class="addition">+         ul.menus_item_child(style=&#x27;right:-&#x27; + (Object.keys(value).length)*45 + &#x27;px&#x27;)</span></span><br></pre></td></tr></table></figure></li><li><p>删除<code>&lt;Custom&gt;.css</code>里这一段（若果你扒的时候加了这一行）</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">-#menus &gt; div.menus_items &gt; div:nth-child(1) &gt; ul &#123;</span></span><br><span class="line"><span class="deletion">-  right: -???px !important;</span></span><br><span class="line"><span class="deletion">-&#125;</span></span><br><span class="line"><span class="deletion">-#menus &gt; div.menus_items &gt; div:nth-child(2) &gt; ul &#123;</span></span><br><span class="line"><span class="deletion">-  right: -???px !important;</span></span><br><span class="line"><span class="deletion">-&#125;</span></span><br><span class="line"><span class="deletion">-#menus &gt; div.menus_items &gt; div:nth-child(3) &gt; ul &#123;</span></span><br><span class="line"><span class="deletion">-  right: -???px !important;</span></span><br><span class="line"><span class="deletion">-&#125;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果</p></li></ol><blockquote><p>优点：以后更新导航栏内容时不用在 CSS 里调偏移量。缺点：显示效果没有那么居中，当然你很了解相关代码的话可以适当调整<code>menu_item.pug</code>文件里的数值计算关系，对于又有强迫症又菜的我来说还是选择手动调。</p></blockquote><br><h2 id="404-页面魔改"><a href="#404-页面魔改" class="headerlink" title="404 页面魔改"></a>404 页面魔改</h2><details ><summary> 碎碎念 </summary>              <div class='content'>              <p>洪哥在 404 页面加上最新文章的想法非常 👍，一定程度上可留住一些访客，但该教程不适用于我的页面，配置出来 404 页面样式混乱，同时也影响了侧边小组件中的图片样式，而且 404.pug 文件位置也和我的不一样，于是我借着洪哥的思路重新适配了下我的 404 页面。如果你看他的教程配置时失败了，并且不知所措，可以参考下本节，自定义 CSS 文件中一些参数可以自定义调整。</p>              </div>            </details><details cyan><summary> 预览效果 </summary>              <div class='content'>              <p><a href="/404">传送门🌀</a></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/posts/Butterfly_Tutorial/image-20210509171841069.png" alt=""></p>              </div>            </details><div class="tag link"><a class="link-card" title="教程原贴" href="https://blog.zhheo.com/p/f48e518b.html"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://blog.zhheo.com/img/avatar.png"/></div><div class="right"><p class="text">教程原贴</p><p class="url">https://blog.zhheo.com/p/f48e518b.html</p></div></a></div><div class="note orange no-icon flat"><p>本节教程基于 butterfly3.7.7 版本写的，其他版本请自行测试。</p></div><ol><li><p>修改<code>&lt;BlogRoot&gt;themes\butterfly\layout\404.pug</code>，直接 copy 过去覆盖即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">- var top_img &#x3D; theme.error_404.background || theme.default_top_img</span><br><span class="line">- var bg_img &#x3D; &#96;background-image: url(&#39;$&#123;url_for(top_img)&#125;&#39;)&#96;</span><br><span class="line"></span><br><span class="line">#body-wrap.error</span><br><span class="line">  div(style&#x3D;&#39;display: none&#39;)</span><br><span class="line">    include .&#x2F;header&#x2F;index.pug</span><br><span class="line"></span><br><span class="line">  #error-wrap</span><br><span class="line">    .error-content</span><br><span class="line">      .error-img(style&#x3D;bg_img)</span><br><span class="line">      .error-info</span><br><span class="line">        h1.error_title&#x3D; &#39;404&#39;</span><br><span class="line">        .error_subtitle&#x3D; theme.error_404.subtitle</span><br><span class="line">        a.button--animated(href&#x3D;config.root)</span><br><span class="line">          i.fas.fa-rocket</span><br><span class="line">          &#x3D; _p(&#39;error404.back_button&#39;)</span><br><span class="line"></span><br><span class="line">  .aside-list-404</span><br><span class="line">    .aside-list-group</span><br><span class="line">      - let postLimit &#x3D; theme.aside.card_recent_post.limit &#x3D;&#x3D;&#x3D; 0 ? site.posts.length : theme.aside.card_recent_post.limit || 5</span><br><span class="line">      - let sort &#x3D; theme.aside.card_recent_post.sort &#x3D;&#x3D;&#x3D; &#39;updated&#39; ? &#39;updated&#39; : &#39;date&#39;</span><br><span class="line">      - site.posts.sort(sort, -1).limit(postLimit).each(function(article)&#123;</span><br><span class="line">        - let link &#x3D; article.link || article.path</span><br><span class="line">        - let title &#x3D; article.title || _p(&#39;no_title&#39;)</span><br><span class="line">        - let no_cover &#x3D; article.cover &#x3D;&#x3D;&#x3D; false || !theme.cover.aside_enable ? &#39;no-cover&#39; : &#39;&#39;</span><br><span class="line">        - let post_cover &#x3D; article.cover</span><br><span class="line">        .aside-list-item(class&#x3D;no_cover)</span><br><span class="line">          if post_cover &amp;&amp; theme.cover.aside_enable</span><br><span class="line">            a.thumbnail(href&#x3D;url_for(link) title&#x3D;title)</span><br><span class="line">              img(src&#x3D;url_for(post_cover) onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;$&#123;url_for(theme.error_img.post_page)&#125;&#39;&#96; alt&#x3D;title)</span><br><span class="line">          .content</span><br><span class="line">            a.title(href&#x3D;url_for(link) title&#x3D;title)&#x3D; title</span><br><span class="line">            if theme.aside.card_recent_post.sort &#x3D;&#x3D;&#x3D; &#39;updated&#39;</span><br><span class="line">              time(datetime&#x3D;date_xml(article.updated) title&#x3D;_p(&#39;post.updated&#39;) + &#39; &#39; + full_date(article.updated)) #[&#x3D;date(article.updated, config.date_format)]</span><br><span class="line">            else</span><br><span class="line">              time(datetime&#x3D;date_xml(article.date) title&#x3D;_p(&#39;post.created&#39;) + &#39; &#39; + full_date(article.date)) #[&#x3D;date(article.date, config.date_format)]</span><br><span class="line">      - &#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;Custom&gt;.css</code>文件添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#error-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#error-wrap</span> <span class="selector-class">.error-content</span> <span class="selector-class">.error-info</span> <span class="selector-class">.error_title</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">3rem</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#error-wrap</span> <span class="selector-class">.error-content</span> &#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--hassan-card-bg) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: scroll;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-group</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">1500px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-group</span> &#123;</span><br><span class="line">    margin: 0px 17%; //17% 适合最新文章数为5个，10% 适合6个</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> <span class="selector-class">.thumbnail</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">230px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">143px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--hassan-card-bg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> <span class="selector-class">.content</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">0.5rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--hassan-fontcolor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list</span> <span class="selector-class">.aside-list-item</span> <span class="selector-class">.content</span> <span class="selector-tag">time</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#error-wrap</span> <span class="selector-class">.error-content</span> <span class="selector-class">.error-info</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Hexo 三连即可看到效果。</p></li></ol><br><blockquote><p><strong>结束语</strong>：</p><p>若是有疑问或建议欢迎留言。若想 get 本篇未记录的同款，请先查看<a href="https://hassanwong.top/log/">更新手账</a>，手账记录了本站 2021-01-23 以来几乎所有美化魔改微调的更新历史，且<u>参考过他人的更新都附带有教程链接</u>。若更新手账未记录，那么请自行<code>F12</code> <img no-lazy class="inline" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhheo/Sticker-Heo@main/Sticker-100/%E7%8B%97%E5%A4%B4.png" style="height:1.5em"/></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现在的人咋都这么爱白嫖？</title>
      <link href="posts/d53524f6/"/>
      <url>posts/d53524f6/</url>
      
        <content type="html"><![CDATA[<h2 id="白嫖什么意思？"><a href="#白嫖什么意思？" class="headerlink" title="白嫖什么意思？"></a>白嫖什么意思？</h2><p><a href="https://baike.baidu.com/item/%E7%99%BD%E5%AB%96/22207531?fr=aladdin">百度百科</a>上说：它是网络流行词，由最早不给钱吃“霸王餐”的白嫖一词演变而来，后流行于饭圈、游戏圈。意思为粉上一个偶像，不为 Ta 花钱——不买专辑不买周边不看演唱会不买电影票，却又享用其 Ta 资源的人。后引申泛指免费索取他人资源的行为。简单说就是<strong>不花费任何资源去享受某件事情</strong>。</p><p>看完百度百科，想到我去年追女团选秀时没在打投上花过一分钱一事，尽管 WCX 是我最喜欢的女选手，甚至辗转反侧夜不能寐，但在我看来，追星这件事，应尊重每个人的想法与做法，打投不花钱本是件无可厚非的事情，难道给偶像相关报道点赞评论转发、为 Ta 投票不算是对 Ta 的正向反馈吗？说到底自己追的快乐才是真谛，拒绝任何道德绑架。而本篇<strong>主要谈论白嫖的对象是网络资源</strong>，并非饭圈或游戏圈上的。</p><h2 id="白嫖现象"><a href="#白嫖现象" class="headerlink" title="白嫖现象"></a>白嫖现象</h2><p>从我上大学以来，发现周围和网上白嫖的人越来越多了。有句话大家应该耳熟能详：“白嫖一时爽，一直白嫖一直爽”，你们反问下自己，真的爽吗？那确实爽（来自博主的肯定 👍），不花一分钱能得到自己想要的东西，绝大多数人都会感到开心，但你是否和我一样有忙于去搜集免费资源而浪费大量时间的苦恼呢？hh，继续谈谈我自己的见解与思考 👇</p><h2 id="白嫖的原因？"><a href="#白嫖的原因？" class="headerlink" title="白嫖的原因？"></a>白嫖的原因？</h2><p><strong>原因一</strong>：与<strong>家境贫寒，勤俭节约习惯</strong>有关，<del>别问，问就是 qiong</del>。当然判断自己是否贫富的这杆秤在大多数人心里都是相对的，而并非绝对的，比如你认为发达城市贫穷家庭和乡镇地区富裕家庭能比较吗？根本没有可比性。谈谈我自己吧，我家并不是那么宽裕，家人工作很辛苦非常不容易，我从小在勤俭节约家风的耳濡目染下，自然而然不那么败家，对钱的出入比较敏感，好处就是我收获到了父母在金钱上不限制我的 privilege，乍一看挺好的，但也使我变得精打细算起来，甚至成了老白嫖选手。</p><p><strong>原因二</strong>：与<strong>巨婴心理</strong>有关。觉得别人做什么都是轻而易举的，别人对自己的好是理所当然，自己也心安理得去接受。这类人的惯性思维是：“你都有这么多了，给我用点有什么关系？反正你也不用”，要知道给你是我的情份，不给你是我的本份，做人呐，要常怀感恩之心。</p><p><strong>原因三</strong>：与你的<strong>资源搜集能力</strong>有关。当然这点不具有普适性，谈谈我自己吧，我是计算机专业，自从接触到这个领域，我发觉自己的资源搜索能力越来越强，一般 PDF 资源、付费软件、付费网课、付费影视、付费音乐等资源大多数都能在互联网的犄角旮旯里找到。当然，资源搜集能力和喜不喜欢白嫖其实没有必然联系，但只要你稍微有白嫖的习惯，你倾向白嫖的程度会随着搜集能力增强而提高，同时，你的搜集能力也会随着喜欢白嫖程度提高而增强，这就是为什么越来越多的人容易陷进白嫖的漩涡。</p><h2 id="白嫖的利弊？"><a href="#白嫖的利弊？" class="headerlink" title="白嫖的利弊？"></a>白嫖的利弊？</h2><p>白嫖能让你不花一分钱并享受到你想要的东西，但是你会浪费大量时间在资源搜集上，使你出手不会那么阔绰、豪爽。先说说白嫖给我思维观念带来的变化，我发现我越来越为自己不去买某些必需品而找理由，我潜意识会认为它没有那么必要，或者说能找到同等低廉替代物，甚至是免费的，买任何一件物品都会思考再三，货比三家，四处搜索，但结果很累很狼狈。我觉得<u>在某种程度上白嫖和省钱可以相提并论</u>，有时候你可能会因为省点钱而放弃重要的事情，甚至可能连事情的重要性都拿捏不稳，你可能短时间享受到了不用付出的快乐，但眼光放长远，你很可能下错了一步人生大棋。比如，你有一场重要的面试，你因省钱选择了搭乘公交，最后因迟到而错失了面试机会；你未来有场重要的考试，而你为了省钱，在网上找那种质量掺水且没有老师一对一服务的资源而决定自学，最终却因此没考过而选择二战。这些例子不胜枚举，尽管若你能力强，这些便不是问题，但有时候花一点小钱，却会给你带来更大的好处，难道节省下来的时间不是更重要吗？你拥有了无价的知识和时间，这些间接为你未来的发展起到促进作用，你现在节约下来的钱以后可能不到一个月就可以赚回来，难道不是吗？</p><h2 id="那我以后就不白嫖了？"><a href="#那我以后就不白嫖了？" class="headerlink" title="那我以后就不白嫖了？"></a>那我以后就不白嫖了？</h2><p>要知道，白嫖它并不是一个贬义词，更多的是<strong>中性</strong>，有时候别人热心免费分享给你一些资源或教程，你用了这没多大问题，至于你感不感谢 Ta 那是人情世故，只是不要喜欢占别人便宜，得了便宜还卖乖，得不到就骂骂咧咧，那种白嫖真的很狼狈，受人鄙视、唾弃。</p><h2 id="博主我做了哪些改变？"><a href="#博主我做了哪些改变？" class="headerlink" title="博主我做了哪些改变？"></a>博主我做了哪些改变？</h2><p>其实我曾一度是白嫖型选手，我目前也在尝试做出一些改变，比如偶尔打个赏，给某 App 充个会员等等，这是此前不会考虑的事情。最后，对于节约型白嫖选手我想说，要学会爱自己，将钱花在刀刃上很重要，不要顾此失彼；对巨婴型白嫖选手想说，不求你任何回报，哪怕一句谢谢也行，这样才能让免费分享的一片爱心得以延续下去。Peace &amp; Love！</p><p><del>（看到文章下面的 Trick or Treat 按钮了吗？哦，原来是个摆设呀 🙈555）</del></p>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💰经济 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客食用须知！</title>
      <link href="posts/223fd004/"/>
      <url>posts/223fd004/</url>
      
        <content type="html"><![CDATA[<blockquote><p>大多数教程、文章都会使用下列英文通用参数，方便表达含义，<del>你我之间的暗号，懂的都懂</del>。</p><p>部分教程的通用参数会直接使用中文</p></blockquote><h1 id="教程-amp-笔记常量申明"><a href="#教程-amp-笔记常量申明" class="headerlink" title="教程&amp;笔记常量申明"></a>教程&amp;笔记常量申明</h1><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>&lt;UserName&gt;</td><td>项目托管平台注册时的用户名（包括 GitHub、Gitee 等）</td></tr><tr><td>&lt;BlogRoot&gt;</td><td>博客本地根目录</td></tr><tr><td>&lt;RepoGit&gt;</td><td>远程仓库 Git 地址</td></tr><tr><td>&lt;RepoName&gt;</td><td>远程仓库名称</td></tr><tr><td>&lt;OriginRepoGit&gt;</td><td>上游仓库 Git 地址</td></tr><tr><td>&lt;BranchName&gt;</td><td>仓库分支名称</td></tr><tr><td>&lt;Custom&gt;</td><td>自定义内容</td></tr><tr><td>&lt;FilePath&gt;</td><td>文件路径，<u>有时可能会加上文件名的后缀</u>。<br>例如：&lt;FilePath_520.jpg&gt;，意为 520.jpg 图片的路径</td></tr><tr><td>&lt;Copy&gt;</td><td>复制内容</td></tr><tr><td>&lt;Email&gt;</td><td>邮箱号</td></tr><tr><td>&lt;URL&gt;</td><td>链接</td></tr><tr><td>&lt;&gt; 👉 []</td><td>意为<strong>可选参数</strong></td></tr><tr><td>Git 三连</td><td>git add .<br>git commit -m “<Custom>“<br>git push origin <BranchName></td></tr><tr><td>Hexo 三连</td><td>hexo clean<br>hexo g<br>hexo s / hexo d</td></tr></tbody></table><h1 id="本站通俗易懂的介绍"><a href="#本站通俗易懂的介绍" class="headerlink" title="本站通俗易懂的介绍"></a>本站通俗易懂的介绍</h1><blockquote><p>我猜本站的大部分访客是Butterfly博客主题的圈内人士，且多数访客的专业应该和计算机相关。考虑到小部分访客是通过其它途径访问进来的，在此我想用通俗易懂的话语给你们介绍下本站</p></blockquote><p>本站的大部分源代码是一位优秀博主Jerry作者写的，我所做的主要工作就是使用该开源博客框架搭建网站、上传自己的文章，其次是按照自己的想法与灵感通过写代码来美化网站的外貌。其次想说，我就是整个网站的主人啊，并非在某平台注册登录才能使用的那种模式，这就意味着我可以任意操纵这个网站，想发什么内容就发什么，没有人来审查你的文章是否有违禁内容，但提一句，人还是要用道德来约束自己，不能胡作非为哈哈。</p><h1 id="页面布局介绍"><a href="#页面布局介绍" class="headerlink" title="页面布局介绍"></a>页面布局介绍</h1><p>本站的大部分页面布局是由5个大版块构成：<strong>导航栏</strong>、<strong>主体部分</strong>、<strong>组件板块</strong>、<strong>功能按钮</strong>、<strong>页脚</strong></p><ul><li><p><strong>导航栏</strong>就是最上方那一长栏。有回到首页按钮、各大功能页面的快捷入口、搜索框、深浅模式切换按钮</p></li><li><p><strong>主体部分</strong>就是文章内容或者功能页面的内容。文章里边还内嵌评论板块</p></li><li><p><strong>组件板块</strong>就是右侧若干小卡片。有博主信息卡片、文章更新列表、最近访客评论、文章目录等等</p></li><li><p><strong>功能按钮</strong>就是最右边的那几个圆圆按钮。有阅读模式、简繁切换、直达评论区等等</p></li><li><p><strong>页脚</strong>就是页面底部的那一长栏。有各大页面的快捷入口，和一些网站信息展示</p></li></ul><p>主体部分的页面又分为<strong>文章页面</strong>和<strong>功能页面</strong></p><ul><li><strong>文章页面</strong>就是我写的文章嘛，有我的学习笔记呀、经验分享等等内容</li><li><strong>功能页面</strong>就比如标签、分类、时光机，可以快速定位到你想看的文章；再比如歌单、相册、哔哔、影评，相当于是博主我信息的一种展示；还有画廊、八音盒、网址导航，你可以理解为是一种网络工具；还有很多页面喜欢就点进去看，就不一一介绍（码字好累Orz）</li></ul><h1 id="那怎么使用呢？"><a href="#那怎么使用呢？" class="headerlink" title="那怎么使用呢？"></a>那怎么使用呢？</h1><p>那肯定就是用眼睛看我写的文章内容嘛，也可以同时听听左下角音乐播放器里我收藏的音乐。</p><p>然后，<strong>阅读时</strong>可以先浏览一遍本站的<a href="/cc/">版权协议</a>，<strong>评论时</strong>可以先浏览一遍本站的<a href="/privacy/">隐私协议</a>；</p><p>阅读时遇到一些难以理解的问题请：</p><ul><li>先百度</li><li>也欢迎在直接文章页面下方的评论区留言</li><li>与文章内容无关的问题可以点击上方导航栏中的<a href="https://hassanwong.top/comments/">留言信枫</a>进行留言</li><li>还可以直接给我<a href="mailto:hassanwong@qq.com">发送邮件</a></li></ul><p>最后想了解更多关于 Butterfly 主题博客的相关问题，推荐进 Akilar 店长的群咨询，注意遵守群规噢</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/QQ_Group_Aki.png" alt="QQ群"></p>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝前端 </tag>
            
            <tag> 🔹Hexo </tag>
            
            <tag> 👾GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构笔记（C）</title>
      <link href="posts/a24c061e/"/>
      <url>posts/a24c061e/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.hassanwong.top/#/Notes/Data_Structure/Preface">传送门🌀</a></p>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📜C语言 </tag>
            
            <tag> 📃C++ </tag>
            
            <tag> 📊数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英国研究生留学相关资讯，内附计算机方向</title>
      <link href="posts/4889fc02/"/>
      <url>posts/4889fc02/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="咒语念错了！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f97174dd182dde23d833ed77e0f25378e93e485702d2702c9fb38f55291ce840"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章被伏地魔封印了，需要咒语来解除！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🌏留学 </tag>
            
            <tag> 🌈英国 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何写说唱歌词？</title>
      <link href="posts/911eabb0/"/>
      <url>posts/911eabb0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>友友们可能第一时间想问：宁配吗？作品发来看看？观众姥爷们稍安勿躁，<del>我想象力过于丰富</del>，截止目前 2021.3.19，<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">听我狡辩  </button><span class="hide-content">我已经写了些许“作品”，本来想着寒假发，由于要准备留学和本人时间管理能力极差，所以一直拖到现在，今年暑假也不能确定能否顺利发行歌曲，可能还要实习OMG </span></span>。首先这都是我实践过程中总结的经验，部分有参考其他优秀音乐人的做法。本文章大伙们<del>图一乐涨涨姿势</del>就行，若能学到一些哪怕仅仅领悟到了一些，It would be great! 如果有些比较专业的地方不太懂建议先百度，B 站上找找相关教程，多听歌培养 Hip-hop 的 feel，本篇仅提供写词思路步骤，也欢迎评论留言。</p></blockquote><br><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><blockquote><p>写词前得了解一些基本知识</p></blockquote><h3 id="歌词的元素"><a href="#歌词的元素" class="headerlink" title="歌词的元素"></a>歌词的元素</h3><ol><li><strong>Rhyme</strong>：押韵。这是所有类型歌词的基本元素。</li><li><strong>Punchline</strong>：妙语、点睛之笔。能让歌词瞬间提高档次。表达通常比较隐晦，起到一语双关、讽刺、调侃的作用。一般好的 Punchline 能让听众半秒后眼前一亮，情不自禁的发出<del>woc</del>。</li><li><strong>Flow</strong>：语流。其实目前没有更好的中文翻译，它可描述为一个拍子里唱多少个音节、在哪里停顿、变什么腔调、在哪里突然加速减速、在哪里重读，综合这些组成的是一首歌曲的 flow。这主要体现在唱上面，写词的话可以同时考虑带上 flow 的设计。</li><li><strong>Rythme</strong>：节奏。这个主要是和一首歌的 beat 有关，beat 分很多种类型，比如 trap、old school、Reggae、funk、drill 等等，节奏型都不尽相同，写词的时候可以同时考虑歌词和基本节奏对应起来，重音放在哪里。</li><li><strong>Groove</strong>：律动感。这也是街舞里的元素，律动感和一首歌的 beat、flow 相关，让听众会不由自主较规律的扭动身体。</li><li><strong>Bar</strong>：小节。歌词的一小节，通常会有停顿，在这可以换气准备唱下一句。</li><li><strong>Break</strong>：停顿。唱歌时突然停顿，给听众来个措手不及，有时候 beat 也会配合停下来，过零点几秒后又开始继续（当然了，有时候 Rapper 根据 beat 而设计 break，有时候是 beat 配合歌词来编 break）。用的好的话，和 punchline 一样能使听众眼前一亮，情不自禁的发出<del>wow</del>。一般一首歌中用一两次即可。</li></ol><h3 id="歌曲的组成元素"><a href="#歌曲的组成元素" class="headerlink" title="歌曲的组成元素"></a>歌曲的组成元素</h3><ol><li><strong>Intro</strong>：前奏。为了引出歌曲后面的部分。</li><li><strong>Verse</strong>：主歌。表达 whatever you want 的部分。</li><li><strong>Pre-Hook</strong>：副歌预热。它又叫做 Pre-Chorus， Pre-Hook 出现在副歌的前面，它的作用就是为了引出副歌，为副歌预热。它很少出现在说唱作品里。一般在嘻哈音乐里面，Pre-Hook 通常是 1-2 个小节，虽然一般是几句重复的句子，但是简单洗脑，很容易就能吸引到听众。</li><li><strong>Hook</strong>：副歌。俗称一首歌的高潮部分，看过<em>新说唱</em>的观众应该知道紫琪很喜欢 cue 这个词，其实在其他类型歌曲中副歌叫 Chorus，你一般听到 Hook 这个概念，十有八九就是在谈嘻哈啦。有些 Rapper 可能乐理不太好（<del>低情商</del>）或者单纯的想表达（<del>高情商，开玩笑的</del>），Hook 部分可能是会以说唱的方式来唱，歌词比较精炼通俗易懂，通常是全曲中心思想，可能不会写的那么抽象化、艺术化。</li><li><strong>Bridge</strong>：桥段。verse 和 hook 之间衔接的部分。如果桥段部分的 beat 在 solo（可理解为编曲人想炫技），你可以不写词 hh，很适合你表演时在这趴加些街舞动作。</li><li><strong>Outro</strong>：结尾。一般歌曲到这里整首歌的声音、感情色彩逐渐淡出，意在让听众回味无穷。有些歌曲为了让观众单曲循环，它的结尾和前奏做得几乎一样，可前后无缝衔接。但多数歌曲结尾都是逐渐淡出或者戛然而止，给听众留下想象空间。</li></ol><h3 id="Bar-的组成数量"><a href="#Bar-的组成数量" class="headerlink" title="Bar 的组成数量"></a>Bar 的组成数量</h3><p>顺便补充，歌曲组成元素的单位是 <strong>Bar</strong>，下面介绍下在 <strong>Hiphop</strong> 类歌曲中通常的组成数量：</p><p><strong>Intro</strong>（通常是<strong>4, 8</strong>个 bars，少有的是 2, 12, 16 个 bars）</p><p><strong>Verse</strong>（通常是<strong>8, 16</strong> 个 bars，少有的是 10, 15 个 bars）</p><p><strong>Pre-Hook</strong>（通常是<strong>1, 2</strong>个 bars）</p><p><strong>Hook</strong>（通常是<strong>4, 8, 12, 16</strong>个 bars，少有的是 10, 15 个 bars）</p><p><strong>Bridge</strong>（通常是<strong>4, 8</strong>个 bars，少有的是 12 个 bars）</p><p><strong>Outro</strong>（通常是<strong>4, 8, 16</strong>个 bars，少有的是超过 16 个 bars）</p><h3 id="歌曲的组成结构"><a href="#歌曲的组成结构" class="headerlink" title="歌曲的组成结构"></a>歌曲的组成结构</h3><p>常见的有：</p><p><u>Intro(4 节) - Verse(16 节) - Hook(8 节) - Verse(16 节) - Hook (8 节) - Verse(16 节) - Hook(8 节) - Outro(4 节)</u></p><p>这样下来歌曲通常 3 - 4 分钟。</p><p>短一点的：</p><p><u>Intro(4 节) - Verse(16 节) - Hook(8 节) - Verse(16 节) - Hook (8 节) - Outro(4 节)</u></p><p>提前唱 Hook 的：</p><p><u>Intro(4 节) - Hook(8 节) - Verse(16 节) - Hook (8 节) - Verse(16 节) - Hook(8 节) - Outro(4 节)</u></p><p>还有：</p><p><u>Intro(4 节) - Verse(16 节) - Hook(8 节) - Bridge(8 节) - Verse(16 节) - Hook (8 节) - Hook (8 节) - Outro(4 节)</u> 等等，有很多种组合方式。</p><p>有些 Rapper 擅长写 Hook，可能会在一首歌的后半段重复两次 Hook。有时，为了结尾升华或不让听众 get bored，后半段的 Hook 会<del>换汤不换药</del>，也就是 flow、旋律类似但歌词有所改变，有些 Rapper 可能会使重复那段的旋律更飘一些，当然基本和弦（可理解为旋律基调）肯定不会变，乐理好的 Rapper 可能还会设计一些和声，更有甚者设计像牛姐那样的疯狂转音 hh。欧美歌曲听的多的同学，可能会和我一样老惊讶为什么他们好端端的旋律不正儿八经去唱，时不时来个转音，高 3 度，低 3 度，摸不清它的 flow，一般简单的歌曲，他唱一两句我基本可以预测下一句是什么和弦走向，旋律走向，这种歌我几分钟可以学会大致怎么唱，但有些歌则是你根本无法猜透他下一秒的 flow、旋律、break，一般这种歌我称之为难唱，并非因为它语速快，音域超出我的能力范围，只是它的设计很丰富很亮眼（<del>高情商</del>），这样的音乐作品才能源远流长嘛，方能成为经典，不会像那种红极一时的口水歌。话说回来，后半部分重复的那段 Hook，很多歌曲还会采取升半个 key（调）的做法，使听众情绪进一步的升高，让听众<del>如听仙乐耳暂明</del> d😂b，汗毛直立，拍手称绝！</p><p>歌曲的组成结构非常之多，写词时可以参考一些常见的说唱作品，如果你是根据 beat 来写词，那么可参照 beat 的结构来设计它。</p><br><h2 id="写歌词的步骤-⭐"><a href="#写歌词的步骤-⭐" class="headerlink" title="写歌词的步骤 ⭐"></a>写歌词的步骤 ⭐</h2><blockquote><p>不同的音乐人有着不同的写词习惯，就和制作歌曲一样，有些人喜欢先写词再作曲，有些人则恰恰相反，更有人是同时进行。当然适合自己的方式才是最好的！这里介绍下我习惯的写词步骤。</p></blockquote><ol><li><p>【雏形阶段】先写你任何想表达的话</p><ul><li><p>带有韵脚目的的写</p><p>先写一句歌词，再根据这一句的韵脚来造下一句，当然你也可以先写若干句歌词，再根据韵脚来修改歌词的表达，灵活使用即可。缺点是有时候为了凑韵脚，可能整句词不达意、显得突兀，不能凸显歌曲的中心思想，其实这就得靠你的写词功底（且不称文学功底吧，因为我认为作词也是一门别具一格的艺术，和文学创作有相同、不同之处，你写的歌词终究是为了歌曲而服务，它得和伴奏融为一体）。</p></li><li><p>用 Freestyle 来写词</p><p>你可以跟着伴奏 Freestyle，如果灵光乍现，可以立马记录下来，类似于头脑风暴，也可以以 Freestyle 的形式写个大框架出来，之后再来慢慢填词，丰富细节。若你暂时没有头绪，可以先放下，干其它事情找找灵感，毕竟灵感来源于生活，期间多听听其他 Rapper 的歌，留意一下 Ta 的歌词是如何写的。记住，写词切忌急于求成，否则很容易成口水词，不能源远流长，<del>不能经典咏流传</del>。</p></li></ul></li><li><p>【初稿阶段】对歌词增删改</p><p>步骤 1 仅仅写了个雏形，接下来是跟着音乐伴奏来修改歌词，自己设计 Flow，然后根据 Flow 来对歌词增删改，写什么词、怎么样设计 Flow 才好听这些完全取决于你自己的审美和想法，若你没有思路头绪，可以借鉴优秀 Rapper 的音乐作品，但不要抄袭哦。</p><div class="note warning no-icon flat"><p>注意：这里针对于已经有伴奏的情况，若你是 Producer，Beat Maker，，，<del>那还能轮得到我来教你写词？😆</del></p></div></li><li><p>【最终阶段】打磨歌词</p><p>纵观整篇歌词，检查有没有瑕疵，比如错别字、语病、中心思想的表达等问题，再跟着伴奏多来几遍，打磨最终作品。如果你是打算创作 Melodic Rap，其实创作过程基本一样，只不过你还得考虑旋律等因素，歌词唱起来是否贴合伴奏的和弦，还要设计和声。</p><br></li></ol><h2 id="雕虫小技"><a href="#雕虫小技" class="headerlink" title="雕虫小技"></a>雕虫小技</h2><ol><li><p>口水话可以用英文来代替，虽然这种方式会被人嗤之以鼻，但是市场上很多音乐就是这样，时不时加几句英文词，当然用英文代替部分词的歌曲不一定都很口水，有时是为了更好的押韵，或歌手可能英语很好，加几句没太大问题，可能讨厌英语的听众会感到不适。话说回来，虽说把那些零星的英语歌词翻译过来很口水、没多少内涵，但读起来却很有内味，当然最终还是取决于你自己对作品的要求和审美。</p></li><li><p>新手可以<strong>参考</strong>其他 Rapper 的 Flow 和歌词，但绝不能生搬硬套，得逐渐找到属于自己的风格，这样才算是学以致用。</p></li><li><p>Q：<strong>歌词有点强行押韵怎么办？</strong></p><p>A：我一般是先写一句词，再来结合这句的韵脚和中心思想来写下一句，当然这不能保证下一句一定贴合中心思想，除非写词功底很扎实。但我发现了一个比较好的办法，就是<strong>将尬的这一句和上一句换个位置</strong>。比如你已经写了一句歌词 A，通过 A 的韵脚写出了 B，从 A 到 B 唱起来可能有些拉胯，这时将 AB 互换位置可能会有突出、引出 A 的效果，能有效缓解强行押韵，光说比较枯燥，你得实践起来才能感受到，据我观察，很多 Rapper 会用到这种方式，在这也不举例，听他们歌的时候其实我知道 Rapper 想表达的重点是 A，但通常他们会写一些 B 来做铺垫、当绿叶。<u>简单总结，要么你写词功底好，要么 AB 句换位</u>。</p><br></li></ol><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><br><p><strong>本文参考文章</strong>：</p><ul><li><p><a href="https://www.zhihu.com/question/36609060?sort=created">如何写好说唱歌词？</a></p></li><li><p><a href="https://www.xihachina.com/10026.html">一首歌的结构你都不懂，还好意思说自己喜欢说唱</a></p></li></ul><br><blockquote><p>有好的想法赶紧留言吧？想要音乐合作什么的快<del>找</del>带带我吧~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎵音乐 </tag>
            
            <tag> 🎉图一乐 </tag>
            
            <tag> 🙉说唱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思同义替换词大总结</title>
      <link href="posts/278e64c9/"/>
      <url>posts/278e64c9/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><p>原文是一个word文档一万四千多字，里面的排版非常不规律，所以我打算花点时间简化和美化一下，算是满足我的强迫症，也方便查看和记忆，后期会根据同义替换词重要性从上往下排序，然后做做适当的删减。欢迎共同编辑来笔记，有意向者请留言!</p></blockquote><h2 id="同义替换词"><a href="#同义替换词" class="headerlink" title="同义替换词"></a>同义替换词</h2><h3 id="被遗弃的"><a href="#被遗弃的" class="headerlink" title="被遗弃的"></a>被遗弃的</h3><blockquote><p>abandoned, derelict</p></blockquote><h3 id="昂贵的"><a href="#昂贵的" class="headerlink" title="昂贵的"></a>昂贵的</h3><blockquote><p>costly, expensive, highly-priced, exorbitant, dear, stiff, exclusive, luxurious, rip-off, posh, Rolls-Royce</p></blockquote><p>*<em>Rolls-Royce *</em>莱斯莱斯：这种相关性属于比喻型，如果有篇文章说那某事物和劳斯莱斯这种车比，那么说明它的质量和价格怎么样呢？ </p><p>E.g. the Rolls-Royce of laptop</p><p><strong>rip-off</strong>: 传说中的黑店就是这么说得，可不要说成black shop(rip 是撕碎的意思)</p><h3 id="不可能，不切实际"><a href="#不可能，不切实际" class="headerlink" title="不可能，不切实际"></a>不可能，不切实际</h3><blockquote><p>impossible, out of the question, unachievable, unobtainable, impracticable, unattainable</p></blockquote><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><blockquote><p>approach, means, method, technique, way</p></blockquote><h3 id="喜欢"><a href="#喜欢" class="headerlink" title="喜欢"></a>喜欢</h3><blockquote><p>like, enjoy, be fond of, be keen on, delight in, go for, love, favour, prefer (to), preference</p></blockquote><hr><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><blockquote><p>limit, restrict, confine, define, narrow, tighten, constrict, cap, </p></blockquote><p><strong>narrow</strong>(v.): 这个词大家以前使用的时候一般都是作为形容词来用，这里强调下它的动词的用法。<br>E.g. We are working on narrowing the gap between our points of view. 缩小差距<br>E.g. We’re working to narrow down the list of possible suspects.<br>E.g. The smoking causes the same diseases in women as in men and the gap between their death rates is narrowing.</p><p><strong>define</strong> (v.): 这个词大家以前熟悉的意思是给……下定义, 这个意思和限制并不矛盾，什么叫下定义？就是描述出一个事物的轮廓，所以定义就是在一个给定的范围内给一个事物限定的特定的意思。（define的英文解释： If you define something, you show, describe, or state clearly what it is and what its limits are, or what it is like）<br>E.g. The Supreme Court decision could define how far Congress can go in trying to determine the outcome of court cases.</p><p><strong>cap</strong> (n./v.): 这个词最常用的意思是帽子的意思，作为限制的意思再形象不过了。</p><p>E.g. The government has placed a cap on local council spending.<br>snow-capped mountains</p><blockquote><p>补充信息：魔兽世界（WOW）的资料片燃烧的远征（TBC）刚刚推出的时候，在官网上就有这么句话：An increase in the level cap to 70 大家不妨体会下这句话中的cap的意思在NBA里面就有工资帽这种说法（工资帽的概念1984年被引入，NBA联盟和球员工会之间首先进行谈判，只有双方同意，工资帽才被正式公布。每年NBA的工资帽都在增加，1997-98赛季是2690万美元，上赛季是4384万美元，而如今则是4387万美元。那么什么是工资帽呢？工资帽的具体数额和NBA前一年的总收入密切相关。具体来说，这个工资帽是根据NBA前一年的总收入，然后取这个总收入的48％作为NBA球队花钱的资本，再拿这个48％后的收入再除以29（NBA上赛季球队总数），得出的平均数就是当年的工资帽，各球队花在球员身上的工资总额不得超过这个数字。</p></blockquote><h3 id="集中，聚焦于"><a href="#集中，聚焦于" class="headerlink" title="集中，聚焦于"></a>集中，聚焦于</h3><blockquote><p>focus on, concentrate on, aim, spotlight, be engrossed in, lay/place/put emphasis on, deal only with, highlight, </p></blockquote><p><strong>spotlight</strong>(v./n.): 本意是聚光灯的意思<br>E.g. A new report has turned the spotlight on the problem of poverty in the inner cities.<br>E.g. The report has turned the spotlight on the startling rise in street crime.<br>E.g. Unemployment is once again in the spotlight.<br>E.g. The article spotlights the problems of the homeless.</p><p><strong>engross</strong> (v.): 全神贯注于某事<br>E.g. The scene was stunning, and for a time engrossed all our attention.<br>E.g. He was so engrossed in his book that he didn’t hear her come in.</p><p><strong>highlight</strong>(v./n.): 本意为用高亮度标记<br>E.g. The incident has served to highlight the problems of urban deprivation.|<br>highlight 作名词用表示一系列事情的亮点，高潮，最精彩所在，<br>E.g. That weekend in Venice was definitely the highlight of our trip.<br>E.g. The highlight of the trip was visiting the Great Wall of China.</p><h3 id="现代的，最新的："><a href="#现代的，最新的：" class="headerlink" title="现代的，最新的："></a>现代的，最新的：</h3><blockquote><p>contemporary, modern, current, present, recent, up-to-date, latest</p></blockquote><p>这里需要注意latest不要翻成最晚的，是最新的，最近的意思</p><p><strong>up-to-date</strong>(a.): 最新的<br>E.g. They have access to up-to-date information through a computer database.</p><p><strong>latest</strong> (a.):最新的<br>E.g. the latest fashions from the Paris catwalks.</p><p><strong>contemporary</strong>: 现代的</p><p>这个词准确的来说和最近的（latest）意思还是有区别的，不果的阅读考试大部分词考得都是词和词之间的相关性，其实也不太有可能两个词的意思是完全一样的，一般来说只要他们意思相关，并且不发生矛盾的话，我们就可以认为他们之间是同义词。这也就是为什么contemporary会和latest在一组的原因了。</p><h3 id="增长："><a href="#增长：" class="headerlink" title="增长："></a>增长：</h3><blockquote><p>grow, increase, expand, rise, improve, soar, climb, extend, rocket,</p></blockquote><p>improve: 这个词在这里需要强调下，这个词在某些特定的场合下甚至可以表示下降的意思，例如：犯罪率在improve，像这种不好的事情得到了改善<br><strong>soar</strong> (v.): 飙升<br>E.g. The price of petrol has soared in recent weeks.</p><p><strong>rocket</strong>(v./n.):作名词是火箭的意思, 动词: 直线上升<br>E.g. Stock prices rocketed to their highest level yesterday.这组词在阅读和写作当中可能会发生词性的变化，主要是形容词，动词和名词这三种间的转换。</p><p>grow-growing-growth</p><p>increase-increasing-increase</p><p>expand-expanding- expansion</p><p>rise-rising-rise</p><p>improve-improved-improvement</p><p>extend-extended-extension</p><p>climb-climbing-climb</p><h3 id="悲观的，忧郁的"><a href="#悲观的，忧郁的" class="headerlink" title="悲观的，忧郁的"></a>悲观的，忧郁的</h3><blockquote><p>pessimistic, gloomy, depressed, depressing, hopeless, sad, blue, unhappy, low-spirited, mournful, dismal, miserable, glum, broken-hearted   , down in the dumps(informal), </p></blockquote><p><strong>pessimistic</strong>(a.):悲观的<br>E.g. Doctors are pessimistic about his chances of making a full recovery.</p><p><strong>gloomy</strong> (a.): 衰退的, 忧郁的,<br>E.g. Frank dismissed these gloomy thoughts from her mind.</p><p><strong>blue</strong> (a.): 这个词可以解释为蓝调即悲伤忧郁的音乐,不过只能用复数形式blues<br>E.g. She usually calls her mother when she’s feeling blue.<br>blue这个词还有高贵的意思，例如这个短语：blue-blooded 表示出生于皇室家族或者社会地位很高的家族<br>blue book这个词大家可千万不要多想，它一般指英国官方发布的蓝皮书（封面通常是蓝色的）（yellow pages黄页即包含电话号码和公司地址的黄色封面的书）<br>blue movie色情电影，不过这种用法差不多已经过时了，现在一般都说porn movie<br>blue chip 蓝筹股即表现优异的，或者值得投资的股票<br>blue collar蓝领</p><h3 id="加速，前进"><a href="#加速，前进" class="headerlink" title="加速，前进"></a>加速，前进</h3><blockquote><p>accelerate, speed up, advance, hasten, quicken, develop, hurry</p></blockquote><p><strong>accelerate</strong>(v.)：物理学中的加速度就是这个单词<br>E.g. The decline of her health seemed to suddenly accelerate.</p><p><strong>develop</strong> (v.): 发展，也就是说现在的速度比原先的快才能叫发展，所以develop和和加速这个意思是属于相关词<br>在这里需要强调一下，英文当中越简单的东西，它的用法是越丰富的，这里简单列几个develop常用的几个词条<br>develop liver disease 得病<br>develop the pictures 冲照片</p><p><strong>advance</strong>(v.): 进步，前进<br>E.g. The group’s research has done much to advance our knowledge of the HIV virus.</p><h3 id="相似的，相同的"><a href="#相似的，相同的" class="headerlink" title="相似的，相同的"></a>相似的，相同的</h3><blockquote><p>similar, alike, resemble, same, resemble, identical, still(这个词需要体会), analogous, twin,</p></blockquote><p><strong>alike</strong> (a.): </p><p>E.g. The two versions of the text are alike in many ways.<br>resemble(v.): </p><p>E.g. Soldiers are trained under conditions that closely resemble real combat.<br>identical (a.): </p><p>E.g. This house is almost identical to the one where I lived as a child.</p><p><strong>still</strong>: 仍然 这个词放在这里大家不要觉得很奇怪，大家想想看，如果两句话用still相连接，是不是表示两句话当中肯定有相同的事情发生呢？例：十多年过去了，我仍然……后半句话我没有写完，但相信大家都能看出我在十年后肯定有和十年前相同的地方。所以still是个信号词，是same的相关词</p><p><strong>analogous</strong> (a.):</p><p>E.g. Marine construction technology like this is very complex, somewhat analogous to trying to build a bridge under water.<br>twin (n./v./a.): 记住阿娇和阿萨就记住这个单词了，本意是双胞胎的意思<br>E.g. identical twin<br>E.g. the twin problems of poverty and unemployment/ Meet my twin sister.<br>E.g. The opera twins the themes of love and death.<br>E.g. Chichester in England is twinned with Chartres in France. </p><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><blockquote><p>colour(red, blue, brown, etc.),hue, pigment, shade, tint, tone, dye, </p></blockquote><p>首先需要和大家说明的是colour的同义词并不是很多，从上的变化来看，对颜色的变化集中在将colour变成几种具体的颜色，这需要大家在考试的时候尤其注意。</p><p><strong>hue</strong> (n.): 色彩/观点，信念<br>E.g. Her paintings capture the subtle hues of the countryside in autumn.<br>E.g. political opinions of every hue (= of many kinds)<br>表示深色的形容词：dark, deep, rich<br>表示浅色的形容词：light, pale, soft, pastel<br>表示颜色很鲜艳，很亮的形容词：bright, brilliant, vivid,</p><p><strong>shade</strong> (n.): 色调，颜色的深浅<br>E.g. a delicate / pale / rich / soft shade of red</p><p><strong>pigment</strong>, <strong>dye</strong> (n.): 颜料，染料<br>tint和tone不需要掌握，大家只需要知道他们两个都是表示颜色的，只需要看到认识，不需要掌握用法。</p><h3 id="重要的-必要的-必不可少的-关键的-有意义的"><a href="#重要的-必要的-必不可少的-关键的-有意义的" class="headerlink" title="重要的,必要的,必不可少的,关键的,有意义的"></a>重要的,必要的,必不可少的,关键的,有意义的</h3><blockquote><p>important,significant,seminal,weighty,critical,momentous,vital,essential,crucial,indispensable,necessary,key,pivotal, chief, principal, leading, historic, (反义词：unimportant, trivial, minor, irrelevant, insignificant)</p></blockquote><p>这组词不仅在阅读中很重要，在写作中也尤为值得一提，这组词直接的或者间接的都表示重要的意思。<br><strong>significant</strong> (a. ): </p><p>E.g. Volunteer tutoring programs can have a significant impact on student achievement.</p><p>significant还可以表示变化很大或者大量的意思：<br>E.g. A significant number of drivers still refuse to wear seat belts.</p><p><strong>critical</strong> (a.): 至关重要的，危及的<br>E.g. Foreign trade is   of critical importance  to the economy.<br>Eight people were killed and four are still in a critical condition.<br>题外话：critical point在游戏中可以指暴击点数的意思</p><p><strong>momentous</strong>(a. ): 有意义的<br>E.g. The revolution taking place in Eastern Europe must be counted as one of the most momentous events of this century.</p><p><strong>vital</strong> (a.): E.g. Regular exercise is vital for your health.<br>E.g. The tourist industry is of  vital importance   to the national economy. (of vital importance= very important)</p><p>vital signs: 生命特征（判断一个人是否还活着，例如心跳，体温等）</p><p><strong>indispensable</strong> (a.): 必不可少的<br>E.g. International cooperation is indispensable to resolving the problem of the drug trade.</p><p><strong>necessary</strong>：这个词可以说是这组词里最简单，但也是最容易弄错的一个，很多学生都会说必要的和重要的是有不同的：重要的不一定是必要的，但必要的一定是重要的。关于这点的解释大家可以参考上面的similar和same的解释。</p><h3 id="紧急的，迫不及待的-临近的"><a href="#紧急的，迫不及待的-临近的" class="headerlink" title="紧急的，迫不及待的,临近的"></a>紧急的，迫不及待的,临近的</h3><blockquote><p>urgent, pressing, crucial, critical, immediate, emergent, </p></blockquote><p><strong>pressing</strong>(a.): E.g. Poverty is a more pressing problem than pollution.</p><p><strong>immediate</strong> (a. ): 急切的，迫切的，接近/临近的（这个词条非常常用，特别是后面接地点的时候，基本上都是表示接近和靠近的意思）<br>E.g. There is an immediate danger of war.<br>E.g. It is a thriving shopping centre for the people who live in the  immediate (=local) area.</p><p><strong>immediate family</strong>: 直系亲属（父母， 子女，兄弟姐妹等）</p><h3 id="长期的，慢性的"><a href="#长期的，慢性的" class="headerlink" title="长期的，慢性的"></a>长期的，慢性的</h3><blockquote><p>chronic, persistent, long-term, habitual, long-standing,  反义词：acute</p></blockquote><p><strong>chronic</strong>(a.): 这个单词的本意是慢性的，引申出长期的意思，或者说是这个单词的解释中包含长期的意思。<br>E.g. chronic heart disease<br>E.g. There is a chronic shortage of teachers.<br>E.g. He was a chronic alcoholic and unable to hold down a job. /chronic gambler<br>chron-这个前缀和时间有关，chronicle 编年史（把历史事件按照时间来排列编成的一本书）（来自希腊神话中宙斯(Zeus)他老爸的名字：Cronos。该神害怕自己的子女反抗自己，曾吞食了自己的后代，就象时间的无情，吞噬一切—利用古罗马，古希腊的神话故事来背单词是种不错的培养兴趣的背单词的方法， 而且在的写作中有很多还可以用得上， 何乐而不为，在随后的词条中会陆续介绍）chronometer 计时仪（常用语科学领域的）</p><p><strong>habitual</strong> (a.): 习惯性的（养成习惯了，那肯定是长期形成的）<br>E.g. an habitual smoker/​drinker/​liar/​criminal</p><p><strong>long-standing</strong> (a.): </p><p>E.g. a long-standing relationship/debate</p><h3 id="人工的，人造的，合成的"><a href="#人工的，人造的，合成的" class="headerlink" title="人工的，人造的，合成的"></a>人工的，人造的，合成的</h3><blockquote><p>artificial, synthetic, false, man-made, manufactured, artificial intelligence(AI)=machine reasoning</p></blockquote><p><strong>artificial</strong> (a.): 人工的<br>E.g. an artificial limb / flower / sweetener / fertilizer/colours</p><p><strong>synthetic</strong> (a.): 人工合成的<br>E.g. synthetic rubber</p><p><strong>false</strong> (a.): 假的，错误的（在某些时候人工的，合成的，不就是大家眼中的假货么？不是到大家有没有看过前段时间电视台的那个激情四溢的侯总，他说的仿钻不就是我们所说的假货么，大家好好体会） </p><p><strong>false teeth/hair/eyelashes</strong> etc 假牙/假发/假睫毛</p><p><strong>false friend</strong>: 就是来自一对不同两个语言的词（或者是两个字母表中的字母）看起来或者是听起来相仿，但是意义完全不同．例如busboy看上去很像是汽车售票员，确是表示餐厅勤杂工的意思（这样的例子还有很多）</p><p><strong>manufactured</strong> (a.): 人造的（其实manu-这个前缀本来是表示用手工制造的意思，但是随着时间的推移，这个前缀已经逐渐转变为用机器大批量制造的意思了，例如：The firm manufactures women’s clothing.）<br>E.g. a news story manufactured by an unscrupulous journalist</p><h3 id="联系-连接-绑定"><a href="#联系-连接-绑定" class="headerlink" title="联系,连接,绑定"></a>联系,连接,绑定</h3><blockquote><p>link, associate, connect, relate, tie, unite, attach, bind,</p></blockquote><p><strong>tie</strong> (v.): E.g. My social life and business life are closely tied.<br>tie作名词有领结和平局的意思</p><p>E.g. The first game ended in a tie.<br>E.g. Jason had taken off his jacket and loosened his tie.(=necktie)<br>tie the knot 结婚(非正式说法，一种很形象化的说法：打上蝴蝶结，类似于我们中文中的说法：结为连理或者走进教堂这种间接的说法)</p><p><strong>attach</strong> (v.): 附加，固定<br>E.g. A copy of my resume is attached to this letter.<br><strong>attachment</strong> (n.): E.g. old people’s attachment to traditional customs 忠诚<br>E.g. I’ll send the spreadsheet as an attachment. 附件<br>E.g. a child’s attachment to its mother 依恋</p><p><strong>bind</strong> (v.) 绑定 这个词的发音和汉语解释绑定非常的接近，可以帮助大家记忆(Bind on Acquire/Bind on equipment打过魔兽世界的应该很熟悉这两个短语吧：拾取后绑定和装备后绑定)<br>最后需要大家在写作中注意这几个动词和介词的搭配：<br>link A to/with B; associate A with B; connect A to/with B; tie A to B; relate A to B; bind A to B; </p><h3 id="足够的，充分的-大量的"><a href="#足够的，充分的-大量的" class="headerlink" title="足够的，充分的,大量的"></a>足够的，充分的,大量的</h3><blockquote><p>sufficient, adequate, enough, abundant, ample, plenty of ,considerable, plentiful, </p></blockquote><p><strong>sufficient</strong> (a.): E.g. sufficient time/​resources/​information 反义词：insufficient<br>E.g. Will the growth in output be sufficient to meet the increased demand?</p><p><strong>adequate</strong> (a.): E.g. an adequate supply of hot water 反义词：inadequate<br>E.g. There is a lack of adequate provision for disabled students.</p><p><strong>abundant</strong> (a.): E.g. We have abundant evidence to prove his guilt.</p><p><strong>ample</strong> (a.): 这个词一般都放在名词之前，不可以说A is ample.<br>an office complex with ample parking<br>这个词还可以用于幽默的说女性的身材很胖：a woman with an ample figure</p><p><strong>considerable</strong> (a.): 大量的，不要想当然得把这个词的意思想象成和考虑有关。这个词和足够的有些区别，但再次强调它和足够的意思并不矛盾，他们之间的关系很像necessary和important，在考试这种主要是考察考生语言和理解能力的测试中，一般来说我们不需要区分他们之间的细小的逻辑差别（负责不就变成律师资格考试啦）。<br>E.g. issues of considerable importance<br>E.g. We’ve saved a considerable amount of money.</p><h3 id="战争，军事"><a href="#战争，军事" class="headerlink" title="战争，军事"></a>战争，军事</h3><blockquote><p>military,army,battle(field),armed forces,attack,combat,conflict,crusade,war, the services, </p></blockquote><p><strong>armed forces</strong>: 武装部队/力量 arm本意是胳膊的，动词的意思是装备的意思（equip）,所以armed解释为武装的<br>E.g. Many of the gangs are armed to the teeth (=carrying a lot of weapons). 武装到牙齿，这个说法很形象<br>armed还可以解释为用知识或者技能来武装自己：E.g. She came to the meeting armed with all the facts and figures to prove us wrong.</p><p><strong>crusade</strong> (n.): 最初的意义是指11-13世纪之间欧洲天主教国家在解放耶路撒冷的口号之下对亚洲穆斯林国家发动的战争。到了现代，它的意义已经泛化，可以指代说话者认为具有正义性质的一切努力和行动。（十字军东征，参战者服装均饰以红十字为标志，故称“十字军”。 其实这场战争并不是正义的）<br>E.g. They led an unsuccessful crusade against government corruption.<br>E.g. a crusade for equal rights<br>那么crusader是什么人，大家可以猜猜<br>了解历史的目的是为了更好的明天，我在博客中（blog.hjenglish.com/chengxu）写了几篇关于游戏和英语的关系的文章，其实西方的很多史诗级的游戏都是和历史有关的WOW, HEROES(英雄无敌)等，里面的很多职业都是来源于历史典故或者神话传说。一句话：学英语主要靠兴趣，无处不在的学英语才是学英语的最高境界。（不一定指游戏）</p><p><strong>attack</strong> (v.): 这个词相信不用解释，给出大家很熟悉的一句话：Our forces are under attack.</p><p><strong>the services</strong>：在军队中服役</p><h3 id="隔绝，孤立，分离"><a href="#隔绝，孤立，分离" class="headerlink" title="隔绝，孤立，分离"></a>隔绝，孤立，分离</h3><blockquote><p>isolation,separation,detachment,disconnect,insulate,loneliness, desolate, remote, </p></blockquote><p><strong>isolation</strong> (n.): E.g. Because of its geographical isolation, the area developed its own unique culture.</p><p><strong>detachment</strong> (n.): E.g. He answered with an air of detachment.</p><p><strong>insulate</strong> (v.): 绝缘insulating tape 绝缘胶带</p><p><strong>lonely</strong> (a.): 孤独的（从而不开心的）， 注意和alone的区别（alone是表示一个人或者单单的意思，不是孤独的意思，例如travel alone）</p><p><strong>desolate</strong> (v.): 荒凉的，空虚的<br>E.g. In some of the more desolate regions, half of the active population is out of work.</p><p><strong>remote</strong> (a.): E.g. remote control 遥控器；remote chance/possibility 机会渺茫；</p><h3 id="表达，申明，陈述"><a href="#表达，申明，陈述" class="headerlink" title="表达，申明，陈述"></a>表达，申明，陈述</h3><blockquote><p>expression, statement, announcement, communication, declaration,</p></blockquote><p><strong>declaration</strong>:</p><p>E.g. a ceasefire declaration<br>The Declaration of Independence 独立宣言（the document written in 1776, in which the thirteen British colonies in America officially stated that they were an independent nation and would no longer agree to be ruled by Britain. The most famous part of it is: We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness.）</p><h3 id="最高点，顶峰"><a href="#最高点，顶峰" class="headerlink" title="最高点，顶峰"></a>最高点，顶峰</h3><blockquote><p>peak,summit,top,high point,crown,acme,zenith, highest point, </p></blockquote><p>这组词在A类小作文当中很常见<br><strong>peak</strong> (n./v.): E.g. Figures produced at a World Energy Conference showed that oil and gas production should reach a peak between 1985 and 2000.<br>E.g. Wind speeds peaked at 105 mph yesterday</p><p><strong>summit</strong> (n.): 山顶/峰会（就是国家首脑间的会议）<br>E.g. A summit meeting of OPEC leaders was called to find a solution to the oil crisis.<br>E.g. Many people have now reached the summit of Mount Everest.</p><p><strong>crown</strong> (n./v.): 本意是皇冠（大家可以注意丰田有款车型就叫皇冠，车尾会印有crown这个单词）<br>E.g. crown prince（the son of a king or queen, who is expected to become the next king）<br>crown princess<br>crown colony（a   colony controlled by the British government）</p><h3 id="脆弱的，容易受到伤害的"><a href="#脆弱的，容易受到伤害的" class="headerlink" title="脆弱的，容易受到伤害的"></a>脆弱的，容易受到伤害的</h3><blockquote><p>fragile,sensitive,vulnerable,delicate,frail,weak,susceptible,tender, maximum risks, powerless, feeble, weedy, flimsy, rickety, jerry-built, badly made, </p></blockquote><p><strong>fragile</strong> (a.):</p><p>E.g. Relations between the two countries are in a  fragile state.</p><p><strong>sensitive</strong> (a.): 敏感的，很多考生不明白脆弱的和敏感的怎么会是相关词，举个简单的例子：如果有篇文章中说南极的气候非常的敏感</p><p><strong>frail</strong> (a.): E.g. frail body/physique</p><p><strong>feeble</strong> (a.): E.g. a feeble light/​voice</p><p><strong>susceptible</strong> (a.): E.g. Children are particularly susceptible to the disease.</p><p><strong>delicate</strong> (a.): E.g. The sun can easily damage a child’s delicate skin.</p><h3 id="有吸引力的"><a href="#有吸引力的" class="headerlink" title="有吸引力的"></a>有吸引力的</h3><blockquote><p>attractive,charming,good-looking,inviting,lovely,pretty,pleasant,tempting, engaging(engage), </p></blockquote><p><strong>inviting</strong> (a.): E.g. an inviting smell (英英解释：something that is inviting is attractive and makes you want to experience it)</p><p><strong>engaging</strong> (a.): E.g. one of her most engaging and least known novels<br>E.g. engaging smile</p><h3 id="资金，金融，补助，福利，工资"><a href="#资金，金融，补助，福利，工资" class="headerlink" title="资金，金融，补助，福利，工资"></a>资金，金融，补助，福利，工资</h3><blockquote><p>fund,finance,pay for,subsidize,salary,economic,welfare, wage, money, income, fee, </p></blockquote><p>说白了，这组词都是和钱有关的<br><strong>welfare</strong> (n.): 福利（健康和幸福），这个词不要和farewell 弄混淆了，这个词是古语表示再见的意思，有不讲述关于同性恋的电影叫<em>Farewell, my concubine</em>—霸王别姬<br>很多考生都会认为福利和钱还是有差别的，福利是无形的，钱是看得见的，不过从个根本来说，福利其实就是种金钱激励（至少西方人是这么认为的），所以welfare和钱是相关词。<br>E.g. Annabelle stopped getting welfare benefits when her husband landed a minimum-wage job.</p><p><strong>subsidize</strong> (v.): 补助（sub-这个前缀的意思表示：under or below a particular level or thing）<br>补助的方式有很多，但归根结底都可以用钱来表示，在这点上可以参考welfare<br>E.g. Farming is   heavily subsidized (=subsidized a lot)   by the government.</p><p><strong>wage</strong> (n./v.): 工资<br>E.g. The wage increases will come into effect in June.<br>E.g. minimum wage/ wage-packet (an envelope that contains your wages)/<br>注意：wage作为动词用，解释为发动（战争或者运动的意思）<br>E.g. wage a campaign/struggle/battle etc；wage war (on somebody/something)</p><h3 id="第一，最初，最早"><a href="#第一，最初，最早" class="headerlink" title="第一，最初，最早"></a>第一，最初，最早</h3><blockquote><p>first, earliest, oldest, initial, original(反义词copy), introduction, commencement, pioneer, coin, launch, debut, </p></blockquote><p><strong>pioneer</strong> (n./v.): 先锋 （也就是第一批做某件事的人），所以pioneer和first的关系也属于定义型相关<br>E.g. The new cancer treatment was pioneered in the early eighties by Dr Sylvia Bannerjee.<br>E.g. He was a   pioneer in the field of biotechnology.</p><p><strong>initial</strong> (a./v.): <em>头文字D</em>的全称就是Initial Drift(drift是漂移的意思)<br>E.g. The two countries have initialled a new defence co-operation agreement.<br>E.g. initial stage/phase/period</p><p><strong>original</strong> (a.): 这个词在阅读中很多时候用来修饰一件艺术品，意思就是说这件作品是真的，不是后人仿造的或者赝品，所以original在这里和copy是反义词。<br>E.g. the original painting<br><strong>coin</strong> (v.): 发明，创造（当然包含第一次的意思了）<br>E.g. The word ‘cybershot’ was coined by SONY.<br><strong>introduction</strong> (n.): 引进the act of bringing something somewhere for the first time(英英解释)<br>E.g. the introduction of Buddhism to China nearly 2000 years ago<br><strong>launch</strong> (v.): 我们熟知的意思为火箭的发射，考试中常用的意思为开始或者推广<br>E.g. The company hopes to launch the new drug by next October.</p><p><strong>debut</strong> (n./v.): 初次登场<br>E.g. Paula is the only artist to achieve four number ones from a debut album.<br>E.g. He made his Major League debut as shortstop.<br>E.g. The show will debut next Monday at 8.00pm.</p><h3 id="常见的，寻常的"><a href="#常见的，寻常的" class="headerlink" title="常见的，寻常的"></a>常见的，寻常的</h3><blockquote><p>usual,normal,common,general,habitual,ordinary,regular,routine,typical,</p></blockquote><p><strong>habitual</strong> (a.): 习惯性的<br>E.g. an habitual smoker/​drinker/​liar/​criminal<br><strong>routine</strong> (a./n.): 例行公事，常规<br>E.g. Staying at your desk until 7.30 pm has become routine.<br>E.g. routine tasks/jobs</p><h3 id="潮湿的"><a href="#潮湿的" class="headerlink" title="潮湿的"></a>潮湿的</h3><blockquote><p>damp,wet,moist,humid,cave,</p></blockquote><p><strong>cave</strong> (n.): 山洞<br>同样的，cave和潮湿的意思也是相关，但不同义，这种同义关系属于特征类转换，也就是说山洞具有的特征之一就是潮湿性，这个同义关系在考试中还有不少，随后还会陆续举出<br><strong>damp</strong> (a.): E.g. damp clothes<br><strong>moist</strong> (a.): E.g. Her eyes were moist (= with tears).<br><strong>humid</strong> (a.): E.g. The island is hot and humid in the summer.</p><h3 id="反对"><a href="#反对" class="headerlink" title="反对"></a>反对</h3><blockquote><p>object, oppose, argue against, protest, disagree, dispute, quarrel, contradict, anti-,</p></blockquote><h3 id="导致，产生"><a href="#导致，产生" class="headerlink" title="导致，产生"></a>导致，产生</h3><blockquote><p>breed,produce,arouse,bring about,cause,generate,give rise to,lead to,result in,contribute to,be responsible for, create, </p></blockquote><p><strong>breed</strong> (v./n): 本义：繁殖/品种，引申为产生 (原句：Isolation breeds linguistic diversity 地域的隔离导致/产生语言的多样性)<br>E.g. Poverty is a breeding ground for crime.<br>E.g. Poor living conditions breed violence and despair.</p><p><strong>contribute to</strong>: contribute大家最常用的意思是贡献，所以很多考生都有个思维定势是，这个词只能导致好的结果。其实不然，这个短语是个中性词，后面接好的或者是坏的结果都是可以的。<br>E.g. Stress is a  contributing factor  in many illnesses.</p><p><strong>arouse</strong> (v.): E.g. He works hard to arouse his students’ curiosity.</p><p><strong>bring about</strong>: E.g. A huge amount of environmental damage has been brought about by the destruction of the rainforests.</p><p><strong>generate</strong> (v.): E.g. The program would generate a lot of new jobs.</p><p><strong>generation</strong> (n.): 有产生还有一代人的意思 E.g. the   new generation of mobile phones</p><p><strong>generation gap</strong>：代沟</p><p><strong>Generation X</strong> ：90后（没有目标的一代人）</p><p><strong>Generation Y</strong>  ：80后</p><h3 id="灭绝，消失"><a href="#灭绝，消失" class="headerlink" title="灭绝，消失"></a>灭绝，消失</h3><blockquote><p>extinct, vanished, gone, lost(loss), die out, kill off, disappear, absence, </p></blockquote><p><strong>extinct</strong> (a.): 这个词很多考生不会用，注意这个词是形容词，不是动词（不要少了形容词前的be动词）。<br>E.g. Dinosaurs have been extinct for millions of years.<br>extinct volcano 死火山/active volcano 活火山/dormant volcano休眠火山</p><p><strong>vanish</strong> (v.): E.g. a rapidly vanishing way of life<br>E.g. The bird  vanished from sight.</p><p><strong>absence</strong> (n.): 缺少，缺乏<br>E.g. The case was dismissed in the absence of any definite proof.<br>E.g. absence makes the heart grow fonder 距离产生美</p><h3 id="疾病，痛苦"><a href="#疾病，痛苦" class="headerlink" title="疾病，痛苦"></a>疾病，痛苦</h3><blockquote><p>complaint,illness,disease,sickness,upset,affliction,ailment,malady,</p></blockquote><p><strong>complaint</strong> (n.): 委婉语：疾病/抱怨，投诉<br>大家先看看disease这个词的构成，dis-是一个否定前缀，ease的形容词是easy，就是轻松，舒服的意思，由此可见，disease其实本来也是个委婉语，后来逐渐的就没有委婉的意思了，complaint也有这个趋势。<br>E.g. a kidney complaint（可不要解释为肾脏的抱怨）<br>E.g. minor complaints like headaches</p><p><strong>upset</strong> (n.): stomach upset</p><p><strong>affliction</strong> (n.): 非常正式的说法<br>E.g. Smoking is a major cause of cancer and other afflictions.</p><p><strong>ailment</strong> (n.): 不是很严重的病<br>E.g. minor ailments</p><p><strong>maladay</strong> (n.): 老式用法，还可引申为一种很严重的社会问题<br>E.g. Violent crime is only one of the maladies afflicting modern society.</p><h3 id="独特的"><a href="#独特的" class="headerlink" title="独特的"></a>独特的</h3><blockquote><p>unique, gifted, unparalleled, incomparable, unequalled, unrivalled, </p></blockquote><p>unique和gifted是真题中出现的一对相关词。原文中某些运动员的基因很独特，题目说他们很有天赋，意思是一致的。<br><strong>unique</strong> (a.): E.g. Joan has a unique talent for languages.<br><strong>unparalleled</strong> (a.): 无与伦比的<br>E.g. He has an unparalleled knowledge of local history.<br><strong>incomparable</strong> (a.): E.g. He was an incomparable teacher.</p><h3 id="营养"><a href="#营养" class="headerlink" title="营养"></a>营养</h3><blockquote><p>nutrition, diet, food, nutriment, nourishment,</p></blockquote><h3 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h3><blockquote><p>movie, film, feature, picture, motion picture, moving picture</p></blockquote><p> <strong>feature</strong> (n.): E.g. There were a couple of short cartoons before the main feature.<br> E.g. double feature (=when two films are shown together)<br> <strong>motion picture</strong>: (AM)=movie<br> E.g. the motion picture industry</p><h3 id="唯一的，排外的"><a href="#唯一的，排外的" class="headerlink" title="唯一的，排外的"></a>唯一的，排外的</h3><blockquote><p>sole, only, alone, exclusive. single, solitary, privilege</p></blockquote><p><strong>privilege</strong> (n.): 特权，有篇文章说的是artificial reef(人造礁石)，其中有个内容说的是日本政府有个政策就是给予渔民们特权：如果这块礁石是由这个地区的渔民造的并且带来了鱼群，那么这些鱼就专属于这些渔民。大家想想在这里privilege（特权）是不是就是表示只有他们才有的权利，是不是排他性的。<br>再给个例子，特权车，例如警车，闯红灯不犯法（非执勤情况而且不鸣警笛的情况）是不是警车的特权呢？<br>再如，贵族学校是不是有钱人家孩子的特权呢？以特低价买商品房是不是某些官员的特权呢？<br>E.g. A good education should not just be a privilege of the rich.<br><strong>sole</strong> (n.): 唯一的<br>E.g. The company has the sole rights to market Elton John’s records.<br><strong>exclusive</strong> (a.):  动词形式是exclude（就是include的反义词）<br>E.g. Our prices are exclusive of sales tax<br>E.g. mutually exclusive 相互排斥的<br>E.g. exclusive report/interview/coverage etc<br>E.g. an exclusive girls’ school（exclusive places, organizations, clothes etc are so expensive that not many people can afford to use or buy them）<br><strong>alone</strong> (a./adv.): E.g. The team earned over a million pounds from television alone last year.</p><h3 id="偶然的，不小心的"><a href="#偶然的，不小心的" class="headerlink" title="偶然的，不小心的"></a>偶然的，不小心的</h3><blockquote><p>by chance, by accident, accidentally, unintentionally, incidentally, </p></blockquote><p>阅读考试中还有种可能性就是文章描述一个事件，来说明它的偶然性。例如说一头驴掉进了一个洞里，那当然也是偶然的了（不知道是不是有笨驴看到洞,自己还故意往里面走的……）这种转换属于事例说明法。再如，题目如果说养蜜蜂失败了（fail）,文章中可能并没有fail的同义词，而描述了一个事件：例如运送蜜蜂的时候船翻了来说明fail的意思，这也是事例法。<br><strong>by accident</strong>: E.g. The discovery was made almost by accident.<br><strong>unintentional</strong>: E.g. Defense attorneys claimed the shooting was unintentional.<br><strong>incidental</strong>：E.g. incidental damage</p><h3 id="居住"><a href="#居住" class="headerlink" title="居住"></a>居住</h3><blockquote><p>settle, inhabit, dwell, live, reside, people, accommodate, </p></blockquote><p> <strong>people</strong> (v.): E.g. The region has traditionally been peopled by Indians.<br> E.g. an island peopled by hardy seafolk</p><h3 id="超越，超过，在……之外"><a href="#超越，超过，在……之外" class="headerlink" title="超越，超过，在……之外"></a>超越，超过，在……之外</h3><blockquote><p>exceed, beyond, surpass, beat, outdo, </p></blockquote><p><strong>beyond</strong> (prep.): BEYOND乐队应该很熟悉吧（黄家驹等）<br>What dangers and rewards lie in wait（to remain hidden in a place and wait for someone so that you can attack them e.g.a giant crocodile lying in wait for its prey） beyond the Dark Portal(黑暗之门)?—魔兽世界TBC介绍中的一句话<br>E.g. the year 2005 and beyond<br>E.g. The situation is beyond our control.</p><p><strong>exceed</strong> (v.): E.g. exceed the speed limit<br>E.g. Such tasks are far beyond the scope of the average schoolkid.<br>The beyond 来世</p><p><strong>surpass</strong> (v.): He was determined to surpass the achievements of his older brothers.</p><p><strong>outdo</strong> (v.): The kids were trying to outdo each other.</p><h3 id="意识到，认识到-辨别"><a href="#意识到，认识到-辨别" class="headerlink" title="意识到，认识到,辨别"></a>意识到，认识到,辨别</h3><blockquote><p>be aware of, appreciate, perceive, realize, recognize, notice, see,</p></blockquote><p> <strong>appreciate</strong> (v.): 这个词大家最常用的意思是欣赏的意思，注意在不同的场合使用意思上的差别。<br> E.g. We didn’t fully appreciate that he was seriously ill.<br> E.g. Her abilities are not fully appreciated by her employer.<br> appreciate在金融行业还可以解释为（货币的）增值<br> E.g. Most investments are expected to appreciate at a steady rate.<br> <strong>perceive</strong> (v.): E.g. Cats are not able to perceive colour.</p><h3 id="临近，接近"><a href="#临近，接近" class="headerlink" title="临近，接近"></a>临近，接近</h3><blockquote><p>nearby, neighboring, adjacent, adjoining, next to, near, immediate, close, not far, </p></blockquote><p><strong>immediate</strong> (a.): 这个词最常用的意思是立即，马上，指的是时间上的接近，当这个词接地点的时候，就表示地理位置上的靠近。<br>E.g. It is a thriving shopping centre for the people who live in the immediate area.(=local area)<br>E.g. in the immediate future.<br><strong>adjacent</strong> (a.): E.g. The site of the new building is adjacent to the park.</p><h3 id="但是，尽管"><a href="#但是，尽管" class="headerlink" title="但是，尽管"></a>但是，尽管</h3><blockquote><p>however, in fact, luckily, actually, nevertheless, nonetheless, notwithstanding, though, yet, as a matter of fact, whereas/while,<br> in fact, luckily, actually, n fact, as a matter of fact,</p></blockquote><p>这几个词的本意都不是但是的意思，但是这些连接词连接的前后两个句子的意思是包</p><p>含着有转折的意思。</p><p>这里给出几个例子：<br><strong>yet</strong> (conj.): E.g. an inexpensive yet effective solution to our problem<br>E.g. They charge incredibly high prices, yet customers keep coming back for more.<br><strong>nevertheless</strong> (adv.): Having managed somehow to skip going to college, he has nevertheless made a fortune as a very young man.</p><h3 id="媒体"><a href="#媒体" class="headerlink" title="媒体"></a>媒体</h3><p>media(newspaper, magazine, television, radio, etc)<br>media circus：<br>media hype：A great deal of media hype surrounded the release of the group’s latest CD.<br>mass media：The crime received heavy coverage in the mass media.<br>new media：<br>streaming media：流媒体</p><h3 id="超过，在…之间"><a href="#超过，在…之间" class="headerlink" title="超过，在…之间"></a>超过，在…之间</h3><blockquote><p>over, during, between, within, throughout, during/in/throughout/over the course of, </p></blockquote><p><strong>over</strong> (prep.): =during<br>E.g. Over the next few days they got to know the town well.<br>E.g. Can we talk about this over dinner?<br><strong>course</strong> (n.): E.g. Over the course of the next few years, the steel industry was reorganized.<br>E.g. In the course of researching customer needs, we discovered how few families have adequate life insurance<br>course平时我们所使用最常用的意思是课程<br>crash course<br>foundation course<br>correspondence course<br>refresher course</p><h3 id="退款，还钱"><a href="#退款，还钱" class="headerlink" title="退款，还钱"></a>退款，还钱</h3><blockquote><p>refund, repay, pay back, reimburse, return, </p></blockquote><p>re-这个前缀来自于拉丁语，这里用来表示back的意思，这个前缀也可以用来表示again的意思</p><p><strong>refund</strong> (n./v.): E.g. You will receive a full refund if you cancel the holiday.<br>E.g. Saturday’s concert is canceled, and tickets will be refunded.</p><p><strong>reimburse</strong> (v.): E.g. The company will reimburse you for travel expenses.</p><h3 id="客观的-公正的"><a href="#客观的-公正的" class="headerlink" title="客观的,公正的"></a>客观的,公正的</h3><blockquote><p>objective, unbiased, impartial, unprejudiced, fair, even-handed, disinterested, equitable, just, neutral, balanced, equal, </p></blockquote><p><strong>objective</strong> (a.): E.g. an objective analysis / assessment / report</p><p><strong>unbiased</strong> (a.): 没有偏见的<br>E.g. We aim to provide a service that is balanced and unbiased.</p><p><strong>Impartial</strong> (a.): E.g. A good system must be accessible, impartial, speedy, open, and effective.</p><p><strong>unprejudiced</strong> (a.): 有本英文名著叫《傲慢与偏见》-<em>pride and prejudice（Jane Austen）</em> 这当中最著名的一句话是：It is a truth universally acknowledged, that a single man in possession of a good fortune must be in want of a wife. </p><p><strong>even-handed</strong> (a.): E.g. The BBC has the reputation of being even-handed in its coverage of election news.<br>even 除了有甚至的意思之外，还有水平和平稳的意思，例如：The table kept wobbling because the floor wasn’t quite even.  一上有篇文章<em>Airport On Water</em> 里面有这么句话：This settlement is rarely even.大家可以结合那篇文章的背景来翻译一下。</p><p><strong>disinterested</strong> (a.): E.g. A lawyer should provide disinterested advice.</p><p><strong>neutral</strong> (a.): 中立的<br>E.g. Russia promised to remain neutral unless Germany attacked France.</p><p><strong>equitable</strong> (a.): 平等的<br>E.g. Competition that is structured carefully, however, can produce more equitable results than service delivery by a public monopoly.</p><h3 id="费力的，困难的-花费精力的，难对付的"><a href="#费力的，困难的-花费精力的，难对付的" class="headerlink" title="费力的，困难的,花费精力的，难对付的"></a>费力的，困难的,花费精力的，难对付的</h3><blockquote><p>demanding, difficult, challenging, taxing, tough, trying, wearing, daunting, exacting, </p></blockquote><p><strong>demanding</strong> (a.): E.g. a demanding job/ a demanding boss<br>E.g. Climbing is physically demanding.</p><p><strong>taxing</strong> (a.): E.g. You need a sound night’s sleep to prepare you for the taxing journey tomorrow.</p><p><strong>trying</strong> (a.): E.g. They do the best they can in trying circumstances.</p><p><strong>wearing</strong> (a.): </p><p><strong>exacting</strong> (a.): </p><h3 id="托儿所，幼儿园"><a href="#托儿所，幼儿园" class="headerlink" title="托儿所，幼儿园"></a>托儿所，幼儿园</h3><blockquote><p>nursery, kindergarten, children’s center, crèche, </p></blockquote><p><strong>nursery</strong> (n.): E.g. Nursery schools should fulfill the function of preparing children for school.<br>(a place where small children are cared for while their parents are at work)<br>想记住nursery的意思的话，有必要了解下nurse作为动词的意思：悉心照顾，护理<br>E.g. She nursed her daughter back to health.<br>E.g. nurse an ambition / a grievance / a grudge</p><h3 id="有名的-著名的"><a href="#有名的-著名的" class="headerlink" title="有名的,著名的"></a>有名的,著名的</h3><blockquote><p>famous, well-known, celebrated, prominent, renowned, distinguished, acclaimed, noted, notable, long-established, eminent, reliable, </p></blockquote><p><strong>celebrated</strong> (a.): E.g. a celebrated professor<br>E.g. Martin Luther King Jr. gave his celebrated speech before the Lincoln Memorial in 1963.</p><p><strong>celebrity</strong> (n.) 社会名流</p><p><strong>prominent</strong> (a.): E.g. She was prominent in the fashion industry.</p><p><strong>well-established</strong> (a.): 受人尊敬和信任的（和著名的意思还是有细微差别，不过并不矛盾，所以是相关词）<br>E.g. a well-established ​hotel</p><p><strong>reliable</strong> (a.): 可靠的<br>这个词的意思可能和这组词的意思差别很大。举个例子希望大家能好好体会，如果我们说一个银行例如爱存不存（ICBC）很可靠，我们换个说法，说它在老百姓当中很有名气，对不对呢？（相关词！！！）</p><h3 id="在…之前，早于…"><a href="#在…之前，早于…" class="headerlink" title="在…之前，早于…"></a>在…之前，早于…</h3><blockquote><p>prior to, before, earlier than, in advance of, ahead of, previously, formerly, beforehand, on the eve of, </p></blockquote><p><strong>prior to</strong>: E.g. The plane seemed to catch fire a few seconds prior to taking off.<br><strong>on the eve of</strong>: E.g. on the eve of the election<br><strong>Christmas Eve</strong>:<br><strong>New Year’s Eve</strong>: </p><h3 id="沙漠"><a href="#沙漠" class="headerlink" title="沙漠"></a>沙漠</h3><p>desert, driest parts特征法</p><p>这种相关转换往往很隐蔽，在考试中往往被考生所忽略。沙漠对应的特征是干燥，那么海洋呢？（潮湿）</p><h3 id="百科全书"><a href="#百科全书" class="headerlink" title="百科全书"></a>百科全书</h3><blockquote><p>encyclopedia, A-Z </p></blockquote><p><strong>encyclopedia</strong> (n.): the Encyclopedia of Movie<br>E.g. a walking encyclopedia/dictionary: </p><p><strong>A-Z</strong>: 如果一本书能够把所有A到Z的相关信息都包含进去的话，那么一定是百科全书，这种说法很形象化。</p><h3 id="目标-目的"><a href="#目标-目的" class="headerlink" title="目标,目的"></a>目标,目的</h3><blockquote><p>target, goal ,aim, object, objective, </p></blockquote><p><strong>target</strong> (n./v.): E.g. A collection like this makes your house an obvious target for burglars.<br>E.g. prime target<br>E.g. a new benefit targeted on/at low-income families<br><strong>object</strong> (n.): E.g. The object of the exercise was to build a sense of teamwork.<br><strong>objective</strong> (n.): E.g. career objectives/ accomplish an objective/ achieve/meet an objective</p><h3 id="坐落于"><a href="#坐落于" class="headerlink" title="坐落于"></a>坐落于</h3><blockquote><p>locate, situate, stand, seat, settle,</p></blockquote><p><strong>located</strong> (a.): E.g. The business is located right in the center of city.<br><strong>situated</strong> (a.): E.g. The hotel is ideally situated near the sea-front.<br><strong>stand</strong> (v.): E.g. The castle stands on the site of an ancient battlefield.<br><strong>seat</strong> (v.): E.g. Mrs. Summer was seated at the table directly opposite her husband.</p><h3 id="密集的-稠密的，厚的-压缩的"><a href="#密集的-稠密的，厚的-压缩的" class="headerlink" title="密集的,稠密的，厚的,压缩的"></a>密集的,稠密的，厚的,压缩的</h3><blockquote><p>dense, heavy(heavily populated area), thick, condensed, compact, impenetrable, opaque, solid,</p></blockquote><p> <strong>dense</strong> (a.): E.g. densely-populated area=heavily-populated area<br> E.g. a  dense  rurally-based  population<br> <strong>thick</strong> (a.): E.g. The furniture was  thick with dust (=there was thick dust on the furniture).<br> E.g. thick-skinned<br> <strong>condense</strong> (v): E.g. This whole chapter could be condensed into a few paragraphs<br> E.g. condensed milk<br> <strong>compact</strong> (a.): E.g. a compact car<br> E.g. CD=compact disk</p><h3 id="上瘾的，沉溺于，依赖于-致力于"><a href="#上瘾的，沉溺于，依赖于-致力于" class="headerlink" title="上瘾的，沉溺于，依赖于,致力于"></a>上瘾的，沉溺于，依赖于,致力于</h3><blockquote><p>addicted(to), dependent, hooked, habituated, devoted, obsessed, </p></blockquote><p><strong>be addicted to</strong>: E.g. kids are often addicted to surfing the Net.</p><p><strong>addict</strong> (n.): E.g. TV/video game etc addict<br><strong>dependent</strong> (a.): E.g. Norway’s economy is heavily dependent on natural resources.<br>反义词：independent</p><p><strong>obsessed</strong> (a.): 本意：过度关心/在乎<br>E.g. A lot of young girls are obsessed by their weight.<br>E.g. He was obsessed by a desire for revenge.<br>E.g. The thought of seeing him again completely obsessed her. </p><p><strong>devoted</strong> (a.): E.g. The journal had a devoted following of around 1000 subscribers.<br>E.g. a museum devoted to photography</p><p><strong>devote</strong> (v.): E.g. She devoted herself full-time to her business.<br>E.g. She’s devoting all her energies to the wedding plans.</p><h3 id="过时的"><a href="#过时的" class="headerlink" title="过时的"></a>过时的</h3><blockquote><p>out of date, outdated (反义backbone), old-fashioned, antiquated, dated, expired, invalid, obsolete, passé, outmoded, </p></blockquote><p><strong>outworn</strong>(=worn out),<br>首先先说下back作为动词是表示“支持”的意思（support），而不是像很多学生想当然的认为是背对着某人，所以表示反对的意思。Backbone就是人身上最重要的骨头：脊椎骨，如果说某事或某种观点仍然起着backbone的作用，那么就意味着它没有过时。<br>out of date: E.g. out-of-date technology<br>antiquated (a.): E.g. Hospitals suffer from inadequate facilities, antiquated equipment and shortages of medical supplies.<br><strong>expired</strong> (a.): 过期的(ex-这个前缀有表示out of 的意思，例如export, exit)<br>E.g. The lease on the flat expired on June 14th.</p><p><strong>obsolete</strong> (a.): E.g. computer hardware quickly became obsolete.<br>E.g. Will computers render (=make)   books  obsolete?<br>passé: 来自于法语</p><p><strong>outworn</strong> (a.): E.g. outworn traditions</p><h3 id="好处，优势，价值"><a href="#好处，优势，价值" class="headerlink" title="好处，优势，价值"></a>好处，优势，价值</h3><blockquote><p>merit, worth, value, advantage, excellence, goodness, strong point, quality, advantage, benefit, plus</p></blockquote><p>这组词在写作当中也非常常用<br><strong>quality</strong> (n./a.): 这个词本身就有质量好的意思，并不一定需要在前面加high或good(加上也没问题)<br>大家也不要以为只有形容词才可以修饰名词，名词修饰名次也是很常见的，例如：paper cup等<br>E.g. wines of quality<br>E.g. quality newspapers/press etc</p><p>worth (n.): E.g. The new computer system has already proved its worth.<br>worth这个词很容易用错，当想表示某物值多少钱时，这个时候worth是介词，一定不要忘记前面要丢了be动词<br>E.g. This art collection is   worth a fortune (=worth a very large amount of money).<br>这个单词的几种词性变化需要大家注意：worthwhile，worthy(someone who is important and should be respected), worthless</p><p><strong>value</strong> (n.): E.g. A group of athletes spoke to the students about the value of a college education.<br>E.g. I hope this book will be of value to both teachers and students.<br>注意：valuable=invaluable</p><p><strong>excellence</strong> (n.): E.g. the university’s reputation for excellence.</p><p><strong>plus</strong> (n.): E.g. The hotel’s closeness to the beach is definitely a plus.<br>E.g. The plus point of this area is its school system, which is considered one of the best in the city.</p><h3 id="成熟-成年"><a href="#成熟-成年" class="headerlink" title="成熟,成年"></a>成熟,成年</h3><blockquote><p>mature, adult, grown-up, full-grown, ripe, of age, seasoned, fully fledged, mellow, </p></blockquote><p><strong>mature</strong> (a./v.): E.g. Laura is very  mature for her age.<br>E.g. The human brain isn’t fully mature   until about age 25.<br>E.g. mature student: a student at a university or college who is over 25 years old.</p><p><strong>ripe</strong> (a.): </p><p>E.g. Don’t pick the apples until they’re really ripe.</p><p><strong>seasoned</strong> (a.): 经验丰富的<br>E.g. We need a seasoned manager to run this project.</p><p><strong>full-fledged</strong> (a.): E.g.  India has the potential to become a full-fledged major power.<br>mellow (a.): </p><h3 id="合作，同伴，同事"><a href="#合作，同伴，同事" class="headerlink" title="合作，同伴，同事"></a>合作，同伴，同事</h3><blockquote><p>cooperate, work with(together), collaborate, collaborator, coordinate, co-worker, colleague, fellow worker, workmate, partner, team-mate,  associate, company, </p></blockquote><p>这组词当中有很多都有co-这个前缀，这个前缀表示together with</p><p><strong>company</strong> (n.):  最常见的是表示“公司”的意思，同时它也有“同伴”的意思<br>E.g. People judge you by  the company  you keep<br>记得在CON AIR（空中监狱）这部电影中，有个匪徒就说过这么一句话：We got companies.就是表示我们有伴了，当然了这个伴就是指那些没用的警察了。</p><p><strong>associate</strong> (n.): 同事<br>E.g. business associates</p><p><strong>collaborate</strong> (v.): E.g. Elephants collaborate in looking after their young.</p><h3 id="撤离-放弃-离开"><a href="#撤离-放弃-离开" class="headerlink" title="撤离,放弃,离开"></a>撤离,放弃,离开</h3><blockquote><p>evacuate, abandon, desert, move out, leave, forsake, quit, vacate, withdraw, send away, depart, run away, </p></blockquote><p><strong>evacuate</strong> (v.): 很多e开头的单词都和ex-这个前缀的意思接近（out of的意思）<br>考试中如果考到灾难性文章的主题例如火山，飓风，海啸等(注意这些自然灾害的词的拼写)，evacuate 这个词就会经常出现<br>E.g. During the war he was evacuated to Scotland.<br>Police evacuated the area.</p><p><strong>desert</strong> (v.): E.g. He deserted her for another woman.</p><p><strong>forsake</strong> (v.): E.g. He has forsaken his native Finland to live in Britain.<br>E.g. children forsaken by their parents</p><p><strong>vacate</strong> (v.): E.g. Guests must vacate their rooms by 11:00.<br>E.g. Clay will vacate the position on June 19.</p><p><strong>depart</strong> (v.): E.g. The bus was due to depart at any moment.</p><p><strong>departure</strong> (n.)<br>de-这个前缀表示“相反，移除或者减少”的意思<br>例如：deforest, depopulation, debone</p><h3 id="持久的，耐用的"><a href="#持久的，耐用的" class="headerlink" title="持久的，耐用的"></a>持久的，耐用的</h3><blockquote><p>durable(Marathon), long-lasting, enduring, persistent, hard-wearing(=long-wearing), dependable, </p></blockquote><p><strong>durable</strong> (a.): 马拉松当然是项考验耐力和持久力的运动了<br>马拉松的来历：Marathon, place in Greece; from the story that in 490BC a Greek soldier ran about 25 miles from the battlefield of Marathon to Athens, to bring news of the Athenian victory over the Persians<br>E.g. Finding a durable solution will not be easy.<br>E.g. durable goods</p><p><strong>hard-wearing</strong> (a.): 以前很多学生说这个词的意思是“衣服很难穿”的意思，吐血中…<br>E.g. It is hard-wearing, crease-resistant, easy to wash and quick drying.</p><p><strong>dependable</strong> (a.)：可依靠的，靠得住的<br>大家需要注意的是这个词和old这个词的相关性，如果说一个公司能够靠得住，是不是说明这个公司有一定历史呢？<br><strong>persistent</strong> (a.): E.g. Persistent offenders (=people who often break the law)   face a prison sentence.</p><h3 id="密集的、费力的"><a href="#密集的、费力的" class="headerlink" title="密集的、费力的"></a>密集的、费力的</h3><blockquote><p>intensive (100m sprint), demanding, exhaustive, concentrated, </p></blockquote><p><strong>intensive</strong> (a.): 这个词和上面一组的durable是反义词，表示“力量或者努力集中爆发”的意思，100米跑就属于能力集中爆发的一项运动。 </p><p>E.g. labour-intensive</p><p>E.g. energy-intensive/knowledge-intensive</p><p><strong>demanding</strong> (a.): 费力的，吃力的（这个词的词义千万不要从字面上去理解）<br>E.g. a  demanding job<br>E.g. Climbing is physically demanding.</p><h3 id="同意，支持"><a href="#同意，支持" class="headerlink" title="同意，支持"></a>同意，支持</h3><blockquote><p>advocate, argue for, vote for, in favour of, prefer (to), side with, agree, support, uphold, commend, consent, assent, concur, </p></blockquote><p><strong>advocate</strong> (v.): E.g. Those who advocate doctor-assisted suicide say the terminally ill should not have to suffer.</p><p><strong>argue for</strong> (反：argue against): E.g. They argued for the right to strike.<br>E.g. Baker argued against cutting the military budget.<br><strong>In favour for</strong>: I’m all in favour of (= completely support) equal pay for equal work.<br><strong>side with</strong>: She always sided with my brother.</p><h3 id="额外的，补充的"><a href="#额外的，补充的" class="headerlink" title="额外的，补充的"></a>额外的，补充的</h3><blockquote><p>extra,additional,added,supplementary, </p></blockquote><h3 id="❗-Pls-Help-Me（ToDo-Lists）"><a href="#❗-Pls-Help-Me（ToDo-Lists）" class="headerlink" title="❗ Pls Help Me（ToDo Lists）"></a>❗ Pls Help Me（ToDo Lists）</h3><blockquote><p>有空再来整理，It would be better if someone could help! 欢迎共同编辑来笔记，有意向者请留言</p></blockquote><details cyan><summary> ToDo Lists </summary>              <div class='content'>              <p>grant, give, allocate, allot, award, assign, confer, bestow, </p><p>comply with, abide by, adhere to, conform to, obey, follow, observe, </p><p>heat, high temperature, warmth, </p><p>reject, throw away(out), discard, scrap, get rid of, abandon, drop, cast aside, </p><p>double, twice, two times, coupled, dual, twofold, duplicate, twin, </p><p>justified, reasonable, acceptable, logical, sensible, plausible, practical, sound, rational, well-organized, </p><p>immigrant, settler, incomer, </p><p>consist of, be composed of, be made up of, comprise, contain, include, involve, amount to, feature, </p><p>standard, universal, usual, established, accepted, customary, orthodox, regular, </p><p>erode, wear down(away), abrade, consume, corrode, deteriorate, grind down, </p><p>violence, abuse, maltreatment, cruelty, </p><p>business, entrepreneurship, enterprise, firm, company, corporate, venture, establishment, corporation</p><p>slight, modest, small, insignificant, minor, trivial, fair, limited, small, unexceptional, middling, </p><p>reduce, cut, decrease, sip, dip, slide, descend, go down, </p><p>account for, have, make up, take up, constitute, comprise, represent, cover, </p><p>emit, give off, discharge, send out, cast out, emission, leak, release, expand, </p><p>downpour, rainfall, rainstorm,</p><p>rapid, quick ,fast, swift, in no time, immediately, at once, right away, without delay, instantly, express,</p><p>large,big,considerable,enormous,gigantic,great,hugem,substantial,vast, massive</p><p>dominant, popular, ruling, fashionable, prevalent, prevailing, common, usual, typical, keep busy, </p><p>financial, salary, money, commercial, economic, welfare, capital, fortune, </p><p>elderly, the aged, advancing years, grey hair, senior citizen,</p><p>coast, coastline, shore, beach, seaside, seaboard,</p><p>skill, expertise, craft, skillfulness, technique, competence, proficiency, knowledge, </p><p>exchange, others, interchange, swap, switch, barter, trade, </p><p>visual, visible, 3D, disclosed, openly, </p><p>reproduce, copy, duplicate, replicate, imitate, emulate, mimic, repeat, </p><p>air, atmosphere,</p><p>produce, provide, supply, yield, </p><p>magma, lava, liquid rock, molten rock, </p><p>self-conscious, embarrassed, nervous, diffident, bashful, ill at ease, insecure, shy, </p><p>distort reality, dishonest, deform, bend, twist, cheating, lying, </p><p>document, record, report, log, write down, file, account, chronicle, </p><p>abroad, in foreign lands, overseas, out of the country, international, </p><p>express(delivery), next –day(delivery), overnight, fast, speedy, swift, transport, </p><p>bird, nest, </p><p>varied, different, various, diverse, heterogeneous, assorted, miscellaneous, mixed, </p><p>habitat, house, home, abode, domicile, dwelling, residence, </p><p>change, alternative, alternate, another, other, substitute, different, </p><p>spread, advance, broaden, expand, extend, sprawl, stretch, widen, develop, proliferation, sweep, </p><p>impact, effect, consequences, significance, impression, influence, repercussions, </p><p>account, description, explanation, narrative, report, statement, story, </p><p>probably, likely, maybe, perhaps, possibly, presumably, </p><p>income, return, payback, revenue, taxation, money, earnings, pay, proceeds, profits, salary, takings, wages, receipts, </p><p>concept, idea, conception, view, theory, notion, </p><p>measure, gauge, calculate, calibrate, weigh, compute, quantify,</p><p>rural,country,agricultural,countryside,farmland,</p><p>stress,burden,pressure,tension,strain,</p><p>distinct,different,detached,discrete,</p><p>agree,in favour of,consent,comply,approval,</p><p>identify,recognize,spot,</p><p>vision,sight,image,</p><p>appreciate,be aware of,realize,recognize,</p><p>curve,bend,arc,wavy,</p><p>frustration, annoyance, disappointment, dissatisfaction, irritation, resentment, </p><p>attend, be present, appear, go to, participate in, take part in, show oneself, turn up, visit, enroll, register, competitor, </p><p>demolish, destroy, knock down, bulldoze, dismantle, tear down, raze, level, flatten, </p><p>disclose, make known, broadcast, communicate, reveal, relate, bring to light, expose, uncover, unveil, lay bare, publicize, openly, </p><p>ease, relieve, alleviate, calm, comfort, lessen, lighten, relax, soothe, </p><p>costume, outfit, clothing, dress, attire, uniform, clothes, </p><p>delinquency, crime, illegal/immoral behaviour, </p><p>genius, talent, gift, unique, bent, brilliance, aptitude, flair, prodigy, </p><p>flexible, plastic, variable, pliable, elastic, adjustable, adaptable, pliant, </p><p>infringe, break, contravene, disobey, violate, transgress, encroach upon, invade, </p><p>integrity, honesty, uprightness, virtue, purity, </p><p>interfere, intervene, intrude, meddle, tamper, impede, inhibit, </p><p>please, must, </p><p>office hours, weekday, Monday to Friday, </p><p>supplement, complement, consummation, counterpart, rounding-off, addition, appendix, </p><p>civil engineering, (the planning, building, and repair of roads, bridges, large buildings etc)土木工程</p><p>lavish, extravagant, exaggerated, excessive, immoderate, wasteful, wild, prodigal, grand, generous, abundant, </p><p>potential, dormant, hidden, latent, likely, promising, future, possible, inherent, would-be, </p><p>zeal(zealot), enthusiasm, fervour, zest, eagerness, ardour, fanaticism, gusto, passion, spirit, keenness, </p><p>denote, indicate, express, imply, show, signify, </p><p>approximately, almost, some, around, circa, nearly, roughly, close to, </p><p>unknown, little known, rarely known, undiscovered, unexplored, anonymous, nameless, unidentified, </p><p>ideal, dream, ambition, aim, goal, aspiration, desire, hope, wish, fantasy, </p><p>innovation, novelty, newness, variation, freshness, oddity, </p><p>innocent, not guilty, guiltless, honest, naïve, blameless, uninvolved, </p><p>link, correlation, connection, association, tie-up, relation, attachment, affinity, </p><p>predict, expect, foretell, forecast, prophesy, portend, divine, forewarn,</p><p>exercise, physical activity,  labour, training, work, </p><p>regular, daily, monthly, habitual, routine, customary, everyday, </p><p>isolated, lonely, remote, hidden, secluded, off the beaten track, outlying, </p><p>feedback, comment, remark, explanation, </p><p>achievement, accomplishment, performance, effort, fulfillment, </p><p>shrink, lose, decrease, contract, diminish, dwindle, narrow, shorten, </p><p>kind, gentle, benign, pleasant, considerate, charitable, friendly, compassionate, courteous, generous, obliging, philanthropic, tender-hearted, </p><p>waste, consume, misuse, lavish, squander, dissipate, </p><p>maximum, up to, top, ceiling, peak, upper limit, peak, </p><p>drawback, minus(There are both  pluses and minuses to living in a big city.), disadvantage, downside, flow, deficiency, problem, </p><p>minimum, start at, least, lowest, minimal, slightest, smallest, minimize, constrain, </p><p>overhead, bill, charge, money, </p><p>buy, invest (in), purchase, acquire, obtain, pay for, procure, shop for, </p><p>hold-up, delay, postpone, detain, set back, deter, put off, hold over, shelve, </p><p>intend, plan (to), mean, aim, propose, </p><p>cold, chilled, chilly, arctic, cool, freezing, frigid, frozen, icy, </p><p>difficulty, pitfall, problem, hazard, peril, trap, danger, drawback, snag, </p><p>part, proportion, portion, share, section, scrap, fragment, fraction, piece, </p><p>book, reserve, arrange for, charter, schedule, arrange, make reservations, </p><p>gym, fitness center, recreation, </p><p>ambitious, enterprising, aspiring, eager, avid, striving, zealous, intent, </p><p>compile, edit, write, put together, accumulate, amass, collect, gather, organize, garner, cull, </p><p>annual, per year, yearly, once a year, yearlong, </p><p>reptile, snake, wildlife, butterfly, </p><p>romance, love story, love affair, relationship, amour, liaison, attachment, </p><p>detrimental, damaging, adverse, deleterious, disadvantageous, harmful, unfavourable, </p><p>helpful, beneficial, conducive, </p><p>interesting, engrossing, intriguing, appealing, engaging, gripping, attractive, thought-provoking, compelling, </p><p>access, entrance, </p><p>recommend, go for, </p><p>behind, back, </p><p>panorama ,view, scene, sight, spectacle, visual, vista, </p><p>individual, personal, </p><p>valid, realistic, </p><p>advancement, promotion, </p><p>aging, growing old, </p><p>few, not many, scarce, short supply, </p><p>less likely, reduced chance, decreased likelihood, </p><p>starving, hungry, famished, ravenous, starved, famine, </p><p>optimistic, hopeful, confident, encouraged, expectant, positive, rosy, </p><p>trash, rubbish, garbage, junk, refuse, waste, litter, dross, </p><p>disdain, contempt, arrogance, scorn, derision, </p><p>intense(heat), extreme, excessive, fierce, great, severe, </p><p>ancestor, forefather, forebear, forerunner, predecessor, precursor, </p><p>poor, impoverished, poverty-stricken, on the breadline, needy, indigent, penurious, destitute, </p><p>acute(short term), severe, intense, crucial, critical, urgent, </p><p>tension, tightness, pressure, rigidity, stiffness, stress, pressure, strain, unease, suspense, nervousness, </p><p>preserve, save, care for, protect, defend, conserve, keep, safeguard, shelter, shield, maintain, sustain, reserve, </p><p>vicious, malicious, venomous, ferocious, </p><p>harbor(keep bad thoughts), maintain, hold, cling to, contain(germs), protect(criminals), nurse, </p><p>fraud, deception, swindling, cheat, deceit, treachery, trickery, </p><p>depression, low spirits, dejection, despair, gloominess, sadness, the blues, downheartedness, despondency, melancholy, </p><p>wear off, fade, wane, subside, decrease, diminish, disappear, dwindle, peter out, </p><p>again,once more,anew,afresh,in addition,</p><p>hazard, danger, risk, threat, jeopardy, peril,</p><p>fall, decline, descend, dive, drop, plummet, plunge, sink, decrease(improve),go down, slump, cut, dip,</p><p>depend on,rely upon(on),count on,lean on,reckon on,rest on,bank on,</p><p>ignore,overlook,neglect,pass over,turn a blind eye to,disregard,</p><p>change,modify,alter,shift,vary,convert,mutate,reorganize,</p><p>easy,not difficult,child’s play,effortless,no trouble,a piece of cake,</p><p>because(of),due to,since,for,by reason of,in that,on account of,owing to,thanks to, </p><p>zero, nothing, nil, nought, </p><p>wealth, plenty, abundance, richness, affluence, fortune, money, prosperity, </p><p>custom, habit, tradition, convention, practice, routine, </p><p>country, nation, state, commonwealth, </p><p>encounter, face(in the face of), confront, run across, chance upon, come upon,</p><p>classroom, tuition, schooling, lessons, tutoring, education, </p><p>misconception, mistaken view, fallacy, error, misapprehension, misunderstanding, delusion, </p><p>accessible(easy), approachable, available, attainable, obtainable, reachable, affable, </p><p>destruction, ruin, annihilation, demolition, devastation, eradication, extermination, wreckage, havoc, destroy, loss, reduction,</p><p>benefit, improvement, advantage, profit, aid,</p><p>small,tiny,miniature,minute,trivial,insignificant,negligible,minor,marginal,</p><p>no, without, none, absence, lack, deficiency, nothing, zero, failure, free from, want, </p><p>complex, complicated, intricate,</p><p>simple, easy, plain, uncomplicated,</p><p>damage, harm, hurt, impair, ruin, destroy, weaken, spoil, kill</p><p>leisure, recreation, spare time, ease, relaxation, rest,</p><p>inhibit, hinder, impede, obstruct, stop, hamper, forbid, obstacle, bar, barrier, block, hurdle, obstruction, impediment, prevent, ban, difficulty,</p><p>profitable, achieve commercial success, money-making, lucrative, </p><p>cattle, beef, diary, </p><p>infant, early childhood, baby, toddler, </p><p>recreation, pastime, amusement, entertainment, fun, fitness, leisure activity, relaxation, sport, </p><p>abolish, annul, cancel, end(put an end to), eradicate, stamp out, do away with, rescind, quash, revoke, </p><p>abort, stop, call off, halt, terminate, check, </p><p>abound, be plentiful, flourish, proliferate, swarm, thrive, rich, abundant, abounding, ample, copious, fertile, fruitful, productive, prolific, </p><p>definite, clear, clear-cut, black-and-white, exact, precise, certain, resolved, clarity, clearness, simplicity, definition, limpidity, lucidity, precision, transparency, </p>              </div>            </details><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="数字前缀"><a href="#数字前缀" class="headerlink" title="数字前缀"></a>数字前缀</h3><p>英文中表示数字的前缀一般来自于拉丁文和希腊文<br>bi-前缀，表示数字2 ，例如：bilingual education 双语教学<br>这里补充一些考试常见的关于数字的前缀和例子<br>数字一：mono-/uni-<br>monolingual；monologue；monopoly；monotonous；monogamy；<br>unicorn；unilateral; uniform；</p><p>数字二：bi-/di-<br>bicycle；bilateral；bigamy；binoculars；biplane<br>dioxide；dilemma</p><p>数字三：tri-<br>tricycle；triangle；tripod；</p><p>数字四：quadr-/tetra-<br>quadragenarian；quadrangle；quadruple；</p><p>数字五：quin-/penta-<br>pentagon；Pentium</p><p>数字六：hex-</p><p>数字七：hept-/sept-</p><p>数字八：octo-<br>octopus；octagon</p><p>数字九：novem-</p><p>数字十：deca-<br>decathlon；decade；</p><h3 id="月份来历"><a href="#月份来历" class="headerlink" title="月份来历"></a>月份来历</h3><p>下面给大家简单介绍下罗马历中十二个月份的来历（很多考生不明白为什么October十月的前缀表示的是数字八的意思）：</p><p>公历一年有12个月，起源于古罗马历法。罗马原来只有10个月，古罗马皇帝决定增加两个月放在年尾，后来朱里斯·凯撒大帝把这两个月移到年初，成为1月、2月，原来的1月、2月便成了3月、4月，依次类推。这就是今天世界沿用的公历。</p><p>January——1月　　在罗马传说中，有一位名叫雅努斯的守护神，生有先后两副脸，一副回顾过去，一副要眺望未来。人们认为选择他的名字作为除旧迎新的第一个月月名，很有意义。英语January，便是由这位守护神的拉丁文名字演变而来的。</p><p>February——2月　　每年2月初，罗马人民都要杀牲饮酒，欢庆菲勃卢姆节。这一天，人们常用一种牛、草制成的名叫Februa的鞭子，抽打不育的妇女，以求怀孕生子。这一天，人们还要忏悔自己过去一年的罪过，洗刷自己的灵魂，求得神明的饶恕，使自己成为一个贞洁的人。英语2月February，便是由拉丁文Februar-ius（即菲勃卢姆节）演变而来。</p><p>March——3月　　3月，原是罗马旧历法的1月，新年的开始。凯撒大帝改革历法后，原来的1月变成3月，但罗马人仍然把3月看做是一年的开始。另外，按照传统习惯，3月是每年出征远战的季节。为了纪念战神玛尔斯，人们便把这位战神的拉丁名字作为3月的月名。英语3月March，便是由这位战神的名字演变而来的。</p><p>April——4月　　罗马的4月，正是大地回春，鲜花初绽的美好季节。</p><p>May——5月　　罗马神话中的女神玛雅，专门司管春天和生命。为了纪念这位女神，罗马人便用她的名字——拉丁文Maius命名5月，英文5月May便由这位女神的名字演变而来。</p><p>June——6月　　罗马神话中的裘诺，是众神之王，又是司管生育和保护妇女的神。古罗马对她十分崇敬，便把6月奉献给她，以她的名字——拉丁文Junius来命名6月。英语6月June便由这位女神的名字演变而来。也有学者认为，Junius可能是拉丁家族中一个显赫贵族的姓氏。</p><p>July——7月　　罗马统治者朱里斯·凯撒大帝被刺死后，著名的罗马将军马克·安东尼建议将凯撒大帝诞生的7月，用凯撒的名字——拉丁文Julius（即朱里斯）命名之。这一建议得到了元老院的通过。英语7月July由此演变而来。</p><p>August——8月　　朱里斯·凯撒死后，由他的甥孙屋大维续任罗马皇帝。为了和凯撒齐名，他也想用自己的名字来命名一个月份。他的生日在9月，但他选定8月。因为他登基后，罗马元老院在8月授予他Augustus（奥古斯都）的尊号。于是，他决定用这个尊号来命名8月。原来8月比7月少一天，为了和凯撒平起平坐，他又决定从2月中抽出一天加在8月上。从此，2月便少了一天。英语8月August便由这位皇帝的拉丁语尊号演变而来。</p><p>September——9月　　老历法的7月，正是凯撒大帝改革历法后的9月，拉丁文Septem是“7”月的意思。虽然历法改革了，但人们仍袭用旧名称来称呼9月。英语9月September，便由此演变而来。</p><p>October——10月　　英语10月，来自拉丁文Octo，即“8”的意思。它和上面讲的9月一样，历法改了，称呼仍然沿用未变。</p><p>November——11月　　罗马皇帝奥古斯都和凯撒都有了自己名字命名的月份，罗马市民和元老院要求当时的罗马皇帝梯比里乌斯用其名命名11月。但梯比里乌斯没有同意，他明智地对大家说，如果罗马每个皇帝都用自己的名字来命名月份，那么出现了第13个皇帝怎么办？于是，11月仍然保留着旧称Novem，即拉丁文“9”的意思。英语11月November便由此演变而来。</p><p>December——12月 罗马皇帝琉西乌斯要把一年中最后一个月用他情妇的Amagonius的名字来命名，但遭到元老院的反对。于是，12月仍然沿用旧名Decem，即拉丁文”10”的意思。英语12月December，便由此演变而来。</p>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10相关问题合集</title>
      <link href="posts/d9d0b5ee/"/>
      <url>posts/d9d0b5ee/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言</strong>：</p><p>记录了从博主 18 年买笔记本以来，在使用过程中遇到五花八门问题的解决方案，目的是防止重复在网上找教程，方便集中查阅。若能帮到大家，It would be great!</p></blockquote><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td><code>Ctrl + C</code></td><td>复制</td></tr><tr><td><code>Ctrl + V</code></td><td>粘贴</td></tr><tr><td><code>Ctrl + X</code></td><td>剪切</td></tr><tr><td><code>Ctrl + W</code></td><td>关闭当前页面<br>（浏览器单个页面、文件夹等等）</td></tr><tr><td><code>Alt + F4</code></td><td>关闭当前<strong>所有</strong>页面<br>（如果是浏览器，则关闭所有打开页面）</td></tr><tr><td><code>Win + I</code></td><td>打开Windows设置</td></tr><tr><td><code>Win + P</code></td><td>打开Windows投屏</td></tr><tr><td><code>Win + E</code></td><td>打开<code>我的电脑</code></td></tr><tr><td><code>Win + R</code></td><td>打开<code>命令行</code></td></tr><tr><td><code>右键 + Shift + D</code></td><td>彻底删除该文件，不会放在回收站</td></tr></tbody></table><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td><code>F11</code></td><td>网页全屏显示<br>一些笔记本需额外再按<code>Fn</code></td></tr><tr><td><code>F12</code></td><td>打开谷歌浏览器调试模式</td></tr><tr><td><code>Ctrl + Shift + B</code></td><td>谷歌浏览器显示/隐藏书签栏</td></tr><tr><td><code>Ctrl + P</code></td><td>谷歌浏览器中截取网页</td></tr><tr><td><code>Ctrl + G</code> / <code>Ctrl + F</code></td><td>搜索页面中文字</td></tr></tbody></table><h2 id="🔥百度网盘限速解决方案"><a href="#🔥百度网盘限速解决方案" class="headerlink" title="🔥百度网盘限速解决方案"></a>🔥百度网盘限速解决方案</h2><blockquote><p>网上提速方法五花八门非常之多，这里只介绍我用过的方法。当然有更好的方法欢迎评论！</p></blockquote><p><strong>方法 1：开启下载提速</strong></p><p>依次点击右上角<code>设置</code>👉 左栏<code>传输</code>👉 右侧<code>下载速度</code>即可。官方说明速度是平均用户的 3.2 倍，而我这是差不多提速了 10 倍，原先是 100kbps 左右，现在 1Mbps 左右。</p><p><strong>方法 2：使用 KinhDown 软件</strong></p><p>优点：下载速度很快，最快几 M 每秒，可以自动读取你剪切板里的链接和密码。<br>缺点：最后只能一个一个文件的下载，不能包含整个文件目录逻辑，而且下载时容易下载失败，但是失败了可关闭再重启软件继续下载就好了，这样多反复横跳，如果你网好，失败的情况就相对少，或者没有，可以试试。</p><p><strong>方法 3：手机百度网盘</strong></p><ol><li>用手机 百度网盘 来下载！</li><li>再导入电脑</li></ol><p>我的电脑下载速度平均 100Kb/s 左右，但用手机下载平均 1.0Mb/s 左右</p><div class="note warning no-icon flat"><p><strong>注意</strong>：经我多次测试，结果发现下载<strong>几个 G 的视频</strong>很快，但下载<strong>exe 软件</strong>很慢（基本原来速度），当然这不能保证所有人都有效，但可以当作你白嫖的 <u>Last choice</u>，但还是墙裂建议试试！</p></div><p>方法 4：买会员</p><p>自己买会员 👍，<del>想白嫖不可能</del>。</p><h2 id="🔥解除网页限制"><a href="#🔥解除网页限制" class="headerlink" title="🔥解除网页限制"></a>🔥解除网页限制</h2><h3 id="解除百度文库等网站对复制文本的限制"><a href="#解除百度文库等网站对复制文本的限制" class="headerlink" title="解除百度文库等网站对复制文本的限制"></a>解除百度文库等网站对复制文本的限制</h3><p>方法一：</p><ol><li>按<code>F12</code>并定位到console控制台</li><li>输入<code>$(&quot;.ie-fix&quot;).text();</code>再敲<code>Enter</code>即可获取所有文本（对于其他网站，通过文本类名来替换<code>.ie-fix</code>即可）</li></ol><blockquote><p>若代码报错<code>Uncaught TypeError: $ is not a function at &lt;anonymous&gt;:1:1</code>，则可以试试<code>jQuery(“.ie-fix”).text();</code></p></blockquote><p>方法二：直接选中，用鼠标按住不动往文档编辑软件里拖，松开即可看到选中的文字，由于都是文本，所以样式可能还需要后期微调。</p><p>参考视频：<a href="https://www.bilibili.com/video/BV17Q4y1d7eF">【建议收藏】多种方法解除网页不让复制限制</a></p><h3 id="F12和右键被禁用"><a href="#F12和右键被禁用" class="headerlink" title="F12和右键被禁用"></a>F12和右键被禁用</h3><blockquote><p>我最初目的是想复制文本，但是被禁用了，于是我冷笑，内心OS：“还想难住程序员？？？”，于是按下F12和点击右键，发现都被禁用了，经过一番百度发现直接输入查看源码的代码即可，毕竟你的浏览器能访问源码，并且渲染成页面，我们使用者怎么可能没办法看源码呢？是吧？</p></blockquote><p>方法：</p><ol><li>在地址栏输入<code>view-source:</code> + <code>&lt;URL&gt;</code>，查看网页源码</li><li>按下<code>Ctrl + F</code>搜索关键词，即可复制你想复制的内容</li></ol><blockquote><p>虽麻烦，但是确实是个不错的解决办法，然后对于复制文本来说，你完全可以利用QQ的智能识别文字功能来复制网页内容。</p></blockquote><h2 id="🔥激活Windows"><a href="#🔥激活Windows" class="headerlink" title="🔥激活Windows"></a>🔥激活Windows</h2><blockquote><p>不知道为什么我同学电脑从买来到现在从未遇过需要激活的问题，但我每年都会遇到一次，这次我找到了一个声称永久激活的教程。 </p></blockquote><p>激活软件下载地址：<code>盘.百度.com/s/1neGJ0P4LkP7vuB7dvLjYwg</code></p><p>提取码: <code>rxb6</code></p><p>具体操作教程请移步👉<a href="https://www.cnblogs.com/xuexianqi/p/12342664.html">Win10激活工具 —— HWIDGen的使用方法</a></p><div class="note warning no-icon flat"><p>注意：激活成功后，你电脑的某个盘中首个文件名可能会是<code>$WINDOWS.~TMP</code>，这是旧系统的备份，<u>不需要用它恢复系统的话可以删除</u>。</p></div><br><h2 id="电脑待机时间过长自动关机怎么办？"><a href="#电脑待机时间过长自动关机怎么办？" class="headerlink" title="电脑待机时间过长自动关机怎么办？"></a>电脑待机时间过长自动关机怎么办？</h2><p>步骤：</p><ol><li>我的电脑 -&gt; 右键属性</li><li>设备管理器 -&gt; 系统设备 -&gt; 找到一个 Intel(R) Management Engine Interface 的驱动并双击</li><li>在<code>电源管理</code>中禁用<code>允许关闭此设备以节约电源</code>，轻松解决</li></ol><p>参考链接：<a href="https://jingyan.baidu.com/article/6fb756ec7d1432241958fb4c.html">解决win10休眠后自动关机的问题</a></p><br><h2 id="键盘打不出字来"><a href="#键盘打不出字来" class="headerlink" title="键盘打不出字来"></a>键盘打不出字来</h2><blockquote><p>我遇到的情况是，键盘打不出字，但是功能键是好的，比如：<code>Ctrl</code>、<code>Shift</code>、<code>Esc</code></p></blockquote><p>原因：</p><p>除了键盘本身问题外，原因有仨</p><ol><li>微软输入法有问题</li><li>搜狗输入法有Bug需要自动修复</li><li>搜狗输入法的版本很久没有更新</li></ol><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">原因</button></li><li class="tab"><button type="button" data-href="#test-2">test 2</button></li><li class="tab"><button type="button" data-href="#test-3">test 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><p>切换至搜狗输入法即可</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><ol><li>右键点击搜狗输入法框</li><li>点击<code>输入法修复</code>即可</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-3"><ol><li><p>直接在搜狗输入法官网下载安装包安装即可</p></li><li><p>如果安装包打不开，很可能是你电脑开了火绒，关闭即可</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="增强电脑视觉流畅丝滑感"><a href="#增强电脑视觉流畅丝滑感" class="headerlink" title="增强电脑视觉流畅丝滑感"></a>增强电脑视觉流畅丝滑感</h2><p>步骤：</p><ol><li>右键我的电脑，点开<code>属性</code></li><li>点击<code>高级系统设置</code></li><li>高级 -&gt; 性能 -&gt; 设置</li><li>根据喜好来勾选</li></ol><blockquote><p>如果电脑配置不高，日常运行非常卡顿，不建议使用该 Windows 自带功能，会影响性能。</p></blockquote><br><h2 id="增强电脑自带文件搜索能力"><a href="#增强电脑自带文件搜索能力" class="headerlink" title="增强电脑自带文件搜索能力"></a>增强电脑自带文件搜索能力</h2><p>步骤：</p><ol><li>点击 开始菜单-【设置】</li><li>点击 搜索</li><li>选择左侧的 搜索 windows</li><li>从经典和增强中选择 增强</li><li>在下方找到并点击 高级搜索索引器设置</li><li>点击 修改（M）</li><li>勾选你想搜索的磁盘，并点击 确定（我建议勾选全部，如果因此影响了搜索速度，那么则选择你经常用于搜索的磁盘）</li><li>等待<strong>索引状态</strong>完成之后，即可开始搜索！</li></ol><blockquote><p>第一次搜索必须将电脑接上电源</p></blockquote><br><h2 id="修改文件的创建时间、修改时间"><a href="#修改文件的创建时间、修改时间" class="headerlink" title="修改文件的创建时间、修改时间"></a>修改文件的创建时间、修改时间</h2><blockquote><p>至于为什么要修改文件时间，<del>各取所需，懂的都懂</del></p></blockquote><p><u>直接改系统时间，再来改文件时间</u>。</p><p>步骤：</p><ol><li>按<code>Win</code>或<code>Win + I</code>，输入<code>更改日期和时间</code></li><li>关闭<code>自动设置时间按钮</code></li><li>点击<code>手动设置日期和时间</code>下的<code>更改</code>按钮，选择你想改的时间</li><li>接下来直接创建或修改文件即可，它都会显示你改后的时间，即使调回正常时间，文件创建修改时间也不变，除非你在当前时间又修改了文件</li><li>想调回正常时间，再次点<code>更改</code>按钮即可</li></ol><br><h2 id="定时关机设置"><a href="#定时关机设置" class="headerlink" title="定时关机设置"></a>定时关机设置</h2><blockquote><p>使用背景：有时候小神兽们玩你电脑时，你可以设置定时关机，<del>从小养成守时的好习惯</del>。当然，有时候你要下载文件或者运行代码时，可能需要这样一个定时关机操作。</p></blockquote><ol><li><p>按<code>Win + R</code></p></li><li><p>在弹出的窗口中输入：</p><table><thead><tr><th>按照（单位）</th><th>伪命令</th><th>例子</th></tr></thead><tbody><tr><td>秒</td><td>shutdown -s -t [秒数]</td><td>shutdown -s -t 3600</td></tr><tr><td>时:分</td><td>at [时:分] shutdown -s</td><td>at 23:10 shutdown -s</td></tr></tbody></table></li><li><p>若突然想取消，则在窗口中输入<code>shutdown -a</code></p></li></ol><br><h2 id="安装电脑驱动程序正确姿势"><a href="#安装电脑驱动程序正确姿势" class="headerlink" title="安装电脑驱动程序正确姿势"></a>安装电脑驱动程序正确姿势</h2><blockquote><p>问题：官网下载的驱动程序安装不了</p><p>原因：由于当前系统下存于老版本的驱动导致的报错，在设备管理器卸载删除旧版本驱动问题解决</p></blockquote><p>步骤：</p><ol><li><p>首先右键点击“开始”菜单选择“设备管理器”</p></li><li><p>展开“显示适配器”</p></li><li><p>找到集成显卡右键卸载设备，勾选删除此设备的驱动程序软件点击“卸载”</p></li><li><p>勾上“删除此设备的驱动程序软件”</p></li><li><p>卸载设备后点击“扫描硬件改动”（上框最右边蓝色 ICON），看集成显卡是否显示为 Microsoft 基本显示适配器，如依旧是显示显卡型号重复三步骤后继续扫描硬件改动直至集成显卡变为 Microsoft 基本显示适配器。</p></li><li><p>然后直接双击下载好的驱动程序安装即可，注意软件启动较慢耐心等待</p></li></ol><p>参考教程：<a href="https://www.kkpan.com/article/3074.html">https://www.kkpan.com/article/3074.html</a></p><br><h2 id="报错“操作无法完成因为文件在-system-打开”"><a href="#报错“操作无法完成因为文件在-system-打开”" class="headerlink" title="报错“操作无法完成因为文件在 system 打开”"></a>报错“操作无法完成因为文件在 system 打开”</h2><p>步骤：</p><ol><li><p>打开任务管理器</p></li><li><p>在“性能”这一栏中打开“资源监视器”</p></li><li><p>在“CPU”这一栏中的“关联的句柄”右侧框中去输入你想删除的文件名，以此来搜索与它关联的进程</p></li><li><p>框选所有相关进程，右键结束所有进程</p></li><li><p>最后方可删除该文件</p></li></ol><p>参考教程：<a href="https://jingyan.baidu.com/article/8cdccae9bc8b65705413cdb2.html">https://jingyan.baidu.com/article/8cdccae9bc8b65705413cdb2.html</a></p><br><h2 id="端口被占用解决办法"><a href="#端口被占用解决办法" class="headerlink" title="端口被占用解决办法"></a>端口被占用解决办法</h2><p>报错内容：<code>The Tomcat connector configured to listen on port 8080 failed to start</code><br>原因: 8080 端口被占用了<br>解决:</p><ol><li>用管理员身份打开 cmd 命令窗口，输入如下指令查看所有端口和 PID<br><code>netstat -ano</code></li><li>找到对应的端口对应的 PID，输入指令找到对应的进程<br><code>tasklist | findstr &quot;[PID]&quot;</code></li><li>杀掉该进程，再次启动就 OK 啦<br>taskkill /f /t /im “[FileName]”</li></ol><div class="note warning no-icon flat"><p>注意：文件名记得加后缀，最好直接复制过来</p></div><p>参考链接：<a href="https://blog.csdn.net/q343509740/article/details/80821409">https://blog.csdn.net/q343509740/article/details/80821409</a></p><br><h2 id="以管理员身份运行-cmd"><a href="#以管理员身份运行-cmd" class="headerlink" title="以管理员身份运行 cmd"></a>以管理员身份运行 cmd</h2><p>步骤：</p><ol><li><p>按 <code>WIN + R</code></p></li><li><p>输入 <code>cmd</code></p></li><li><p>按 <code>Ctrl + Shift + Enter</code></p></li></ol><p>如果直接 Enter 则是普通身份进入命令提示符</p><br><h2 id="华为荣耀手机在电脑上数据备份失败怎么办？"><a href="#华为荣耀手机在电脑上数据备份失败怎么办？" class="headerlink" title="华为荣耀手机在电脑上数据备份失败怎么办？"></a>华为荣耀手机在电脑上数据备份失败怎么办？</h2><p><strong>案发背景</strong>：我的华为荣耀 Play用了一年半后，手机内存近乎爆满，APP 实在是运行不畅，于是我又在网上找到了个非常 practicable 的方案：<u>先备份数据，再恢复出厂设置，最后再恢复数据</u>。这样手机里只有重要文件，其余不重要的已经全删了，备份数据的时候认真做取舍即可。</p><p><strong>失败原因及方法</strong>：其实是手机内部储存空间不足的问题，经过一番百度，我们大概可知道，它原理是手机备份时，它得先拷贝完整的一份，再将那一份导出到电脑上，而拷贝的那一份是占空间的，手机本来空间就不足，所以也就是选择时注意下所选文件大小，不能超过内存余量！所以你要减少勾选的数量，多备份几次即可解决。原理大概是这样，效果亲测有效。</p><h3 id="番外"><a href="#番外" class="headerlink" title="番外"></a>番外</h3><p>🔥<strong>上传媒体文件方法</strong>：下载<strong>手机助手Suite</strong>，炒鸡好用，比华为自带手机助手好用一万倍，缺点是没有备份功能。</p><p>🔥<strong>备份方法</strong>：如果你有手机储存卡的话，可以将文件备份到储存卡中，再备份QQ和VX在电脑上，手机恢复出厂设置后，再恢复数据</p><span class="hide-inline"><button type="button" class="hide-button button--animated" style=""> 吐槽  </button><span class="hide-content">我今天2021.8.17正式成为华为一生黑，还有一个多月，再坚持一下，必买 iPhone 2021，没想到吧，不到半年手机内存又满了，何况我新增照片才一两百兆，不知道什么莫名其妙的文件占满我手机内存 </span></span><div class="note warning no-icon flat"><p>注意：</p><ol><li>手机要预留一定内存，否则数据大于预留内存就传输不了，并且又要等半天刷新才能到备份文件选择的页面。</li><li>手机要留在华为手机助手页面，请勿离开，屏幕保持常亮。</li></ol></div><br><h2 id="命令行-cmd-下载插件速度慢"><a href="#命令行-cmd-下载插件速度慢" class="headerlink" title="命令行 cmd 下载插件速度慢"></a>命令行 cmd 下载插件速度慢</h2><p>要引入镜像网站</p><p>步骤：</p><ol><li><p>在 C:\Users\&lt;UserName&gt;目录下创建文件夹，名为 pip</p></li><li><p>新建 pip.ini 配置文件</p></li><li><p>写入如下代码：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><ol start="4"><li>完毕，下载插件速度嗷嗷快！</li></ol><p>tips：镜像网站可以更换的，在下方链接里找</p><p>参考网站：<a href="https://blog.csdn.net/u012798683/article/details/92763162">Python 安装第三方库，pip install 安装慢，安装不上的解决办法</a></p><br><h2 id="无法修改-hosts-文件"><a href="#无法修改-hosts-文件" class="headerlink" title="无法修改 hosts 文件"></a>无法修改 hosts 文件</h2><ol><li><p>右键文件点击属性</p></li><li><p>常规-&gt;属性-&gt;只读，直接取消<code>只读</code>勾选即可修改</p></li></ol><br><h2 id="bat-脚本执行显示中文乱码的问题"><a href="#bat-脚本执行显示中文乱码的问题" class="headerlink" title="bat 脚本执行显示中文乱码的问题"></a>bat 脚本执行显示中文乱码的问题</h2><p><strong>方法 1：</strong></p><p>使用 Windows 自带记事本编辑，然后另存的时候，可选择<code>ANSI</code>编码方式即可。</p><p><strong>方法 2：</strong></p><p>在代码里修改执行时的编码格式<br>测试文件如下（可运行的看下效果）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">REM 后续命令使用的是：UTF-8编码</span><br><span class="line">chcp 65001</span><br><span class="line"><span class="built_in">echo</span> 中文测试</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>所以就是在代码中加 chcp 65001 即可</p><blockquote><p>小知识了解一下：<br>doc 代码页(自行百度):<br>chcp 65001 就是换成 UTF-8 代码页<br>chcp 936 可以换回默认的 GBK<br>chcp 437 是美国英语</p><p>cmd 脚本文件的描述是 “windows nt 命令脚本” （年轻人，本事儿多）<br>bat 脚本文件的描述是 “ms dos 批处理文件” （上年纪的，办事牢靠）</p></blockquote><p>参考链接：<a href="https://blog.csdn.net/u013948858/article/details/81036079">【Window】解决window的bat脚本执行出现中文乱码的问题</a></p><br><h2 id="Dll-文件删除方法"><a href="#Dll-文件删除方法" class="headerlink" title="Dll 文件删除方法"></a>Dll 文件删除方法</h2><ol><li>首先，在“开始”中的搜索文本框中输入“regedit”。</li><li>点击“regedit.exe”打开注册表编辑器。</li><li>在窗口左侧依次展开，<code>HEKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer</code>。</li><li>在左边的窗口的空白处右击，选择“新建”目录下的“字符串值”。</li><li>之后左侧窗口会出现一个<code>新值#1</code>，右击进行重命名，新建的字符串值名称为“AlwaysUnloaDll“；双击进行值修改，字符串的值设置为”1“。</li><li>完成以上步骤后需要重启电脑才能使设置有效。之后关闭程序后，内存中与之相关的 DLL 文件就会随之关闭，这样就可以删除它们了。</li></ol><br><h2 id="ini-配置文件无权修改解决方案"><a href="#ini-配置文件无权修改解决方案" class="headerlink" title=".ini 配置文件无权修改解决方案"></a>.ini 配置文件无权修改解决方案</h2><p>步骤：</p><ol><li>右键文件，点击属性</li><li>属性 - 安全 - 编辑(E)</li><li>点击 Users（登录系统的用户），并且在权限框中勾选“修改”，后点确定</li></ol><p>参考教程：<a href="https://www.cnblogs.com/dreamsqin/p/6606211.html">配置文件无法修改（以修改my-default.ini为例）</a></p><br><blockquote><p><strong>结束语</strong>：</p><p>若是有疑问或建议或教程链接失效欢迎留言噢！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 👓Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微型计算机笔记</title>
      <link href="posts/2b0afdc8/"/>
      <url>posts/2b0afdc8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://doc.hassanwong.top/#/Notes/Microcomputer_Note/C1">传送门🌀</a></p>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 💻微型计算机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDU OJ C语言刷题笔记</title>
      <link href="posts/3bc57976/"/>
      <url>posts/3bc57976/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前言：</p><p>本刷题记录几乎都是基础题，无需用到算法、数据结构，适合小白食用，但言归正传，算法和数据结构很重要，无论是面试还是工作都会用到。</p></blockquote><h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><h3 id="我的常用头文件"><a href="#我的常用头文件" class="headerlink" title="我的常用头文件"></a>我的常用头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure><h3 id="头文件相关函数及用法"><a href="#头文件相关函数及用法" class="headerlink" title="头文件相关函数及用法"></a>头文件相关函数及用法</h3><h4 id="math-h（math-函数）"><a href="#math-h（math-函数）" class="headerlink" title="math.h（math 函数）"></a>math.h（math 函数）</h4><ol><li><p><strong>fabs(double x)</strong></p><p>对 double 型变量取绝对值</p><p><strong>abs(int x)</strong></p><p>对 int 型变量取绝对值</p><div class="note warning no-icon flat"><p>注意：该函数不会根本上改变变量的值，使用时注意保存该变量或直接输出它</p></div></li><li><p><strong>floor(double x)和 ceil(double x)</strong></p><p>对 double 型变量向下取整和向上取整，返回类型为 double 类型</p></li><li><p><strong>round(double x)</strong></p><p>四舍五入求整</p></li><li><p><strong>pow(double r,double p)</strong></p><p>返回 r 的 p 次方</p></li><li><p><strong>sqrt(double x)</strong></p><p>返回 double 型变量的算术平方根</p></li><li><p><strong>log(double x)</strong></p><p>返回 double 型变量的以 e 为底的对数</p></li><li><p><strong>sin(double x)、cos(double x)、tan(double x)</strong></p><p>返回 double 型变量的正弦值、余弦值和正切值，参数要求是弧度制</p></li><li><p><strong>asin(double x)、acos(double x)、atan(double x)</strong></p><p>返回 double 型变量的反正弦值、反余弦值、反正切值</p></li></ol><h4 id="algorithm"><a href="#algorithm" class="headerlink" title="algorithm"></a>algorithm</h4><ol><li><strong>sort (array+xnum, array+ynum)</strong></li></ol><p>对 [xnum, ynum) 之间的数组升序排序，数字和字母等都可以排序</p><p>例如：<code>sort(a, a + sizeof(a));</code></p><ol start="2"><li><p><strong>sort (array+xnum, array+ynum, compare)</strong></p><p>可以加条件判断 compare 函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例子：下面表示的是按照从大到小排序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>(a) &gt; <span class="built_in">abs</span>(b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>reverse (array+xnum, array+ynum)</strong></p><p>对 [xnum, ynum) 之间的数组翻转顺序，同上</p><div class="note warning no-icon flat"><p>注意：只能反转<strong>字符串</strong>和<strong>数字数组</strong>，不能反转字符数组</p></div><div class="note primary no-icon flat"><p>例子：</p><ol><li><p>reverse(str.begin(), str.end());</p></li><li><p>reverse(array, array + length);</p></li></ol></div></li></ol><h4 id="string-h"><a href="#string-h" class="headerlink" title="string.h"></a>string.h</h4><ol><li><p><strong>memset (array, 0, sizeof(array))</strong></p><p>如果 array 是数字型，只能将全初始化为 0</p><p>如果 array 是 char 型，可以初始化为任意字符</p></li><li><p><strong>strrev (array)</strong></p><p>即可实现<strong>字符数组</strong>的反转</p></li><li><p><strong>strcpy (charA, charB)</strong></p><p> 把charB所指向的字符串<strong>复制</strong>到charA</p></li><li><p><strong>memcpy (b, a, sizeof(a))</strong></p><p>将数组 a 赋值给 b</p></li></ol><h2 id="零碎知识点"><a href="#零碎知识点" class="headerlink" title="零碎知识点"></a>零碎知识点</h2><ol><li><p>不要写打印输出的提示信息</p></li><li><p>数组定义时，大小不能用变量</p></li><li><p>字符数组结束标志为’\0’</p></li><li><p>%c 是单个字符，%s 是字符串</p><p> 巧记：c指char，s指string</p></li><li><p>判断奇偶最简方法：</p><p>if (num &amp; 1) 👉 true 为奇数，false 为偶数</p></li><li><p>gets 函数用于输入字符串，还可以输入空格</p></li><li><p>getchar 函数用于输入字符，也可以输入空格</p><div class="note success no-icon flat"><p>tips：<code>getchar()</code> 的一个功能是可将回车字符吸收掉</p></div></li><li><p>不同数据类型所占的字节/位数：</p><table><thead><tr><th>类型</th><th>字节</th><th>位数</th></tr></thead><tbody><tr><td>char</td><td>1</td><td>8</td></tr><tr><td>short</td><td>2</td><td>16</td></tr><tr><td>int, long, float</td><td>4</td><td>32</td></tr><tr><td>long long, double</td><td>8</td><td>64</td></tr></tbody></table></li><li><p>获取数组长度：</p><p><code>length = sizeof(array) / sizeof(array[0]);</code></p></li><li><p>将 char 型转化为 int 型：</p><p><code>int a_int = a_char + 0;</code></p></li><li><p><u>循环输入</u>（输多少数据，数组记录多少数据）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[max],i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) == <span class="number">1</span>) &#123; <span class="comment">// while (cin&gt;&gt;x)</span></span><br><span class="line">a[i++] = x;</span><br><span class="line">&#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>此处的等于 1 作用是判断输入 1 个值是否成功，以此类推，输入 n 个值就将 1 换成 n。算法竞赛中，常常难以确定所需数组大小，一般数组得先声明得大一点（有些题目会提到范围），在空间够用前提下，再来写后续代码。如果要数组定义的很大，那么建议在 main 函数外定义。</p></blockquote></li></ol><br><h2 id="HDU-OJ-刷题记录"><a href="#HDU-OJ-刷题记录" class="headerlink" title="HDU OJ 刷题记录"></a>HDU OJ 刷题记录</h2><blockquote><p>刷题通道：<a href="http://acm.hdu.edu.cn/listproblem.php?vol=1">HDU OJ</a></p><p>题目分类：<a href="https://www.cnblogs.com/lzmfywz/archive/2012/02/11/2347056.html">HDU OJ 题目分类</a></p></blockquote><h3 id="1000-A-B"><a href="#1000-A-B" class="headerlink" title="1000 A+B"></a>1000 A+B</h3><p><strong>Problem Description</strong><br>计算 A + B。</p><p><strong>Input</strong><br>每一行包含两个整数 A 和 B，程序可一直进行下去</p><p><strong>Output</strong><br>对于每种情况，在一行中输出 A+B</p><p><strong>Sample Input</strong><br>1 1</p><p><strong>Sample Output</strong><br>2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b) == <span class="number">2</span>) &#123; <span class="comment">//==2也可以换成 !=EOF</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a+b&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>scanf(&quot;%d%d&quot;, &amp;a, &amp;b) == 2</code>这一判断是确保输入了俩数</p></blockquote><h3 id="1001-总和问题"><a href="#1001-总和问题" class="headerlink" title="1001 总和问题"></a>1001 总和问题</h3><p><strong>Problem Description</strong><br>在此问题中，您的任务是计算 SUM（n）= 1 + 2 + 3 + … + n。</p><p><strong>Input</strong><br>输入将由一系列整数 n 组成，每行一个整数。</p><p><strong>Output</strong><br>对于每种情况，在一行中输出 SUM（n），然后输出空白行。您可以假设计算结果将在 32 位带符号整数的范围内。</p><p><strong>Sample Input</strong><br>1<br>100</p><p><strong>Sample Output</strong><br>1<br>5050</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)((<span class="number">1.0</span> + n) * n / <span class="number">2</span> + <span class="number">0.5</span>) &lt;&lt; <span class="built_in">endl</span></span><br><span class="line">     &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//计算(1+n)*n时可能会超出 int 的最大值，即造成上溢overflow</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1008-电梯"><a href="#1008-电梯" class="headerlink" title="1008 电梯"></a>1008 电梯</h3><p><strong>Problem Description</strong><br>我们城市最高的建筑物只有一部电梯。请求列表由 N 个正数组成。数字按指定顺序指示电梯将停在的楼层。<br>将电梯上移一层需要 6 秒钟，而将一层下移则需要 4 秒钟。电梯将在每个站点停留 5 秒钟。<br>对于给定的请求列表，您将计算完成列表上的请求所花费的总时间。电梯在开始时位于 0 楼，并且在满足请求后不必返回 0 楼。</p><p><strong>Input</strong><br>有多个测试用例。每个案例包含一个正整数 N，后跟 N 个正数。输入中的所有数字均小于 100。N = 0 的测试用例表示输入结束。该测试用例将不被处理。</p><p><strong>Output</strong><br>将每个测试用例的总时间打印在一行上。</p><p><strong>Sample Input</strong><br>1 2<br>3 2 3 1<br>0</p><p><strong>Sample Output</strong><br>17<br>41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N) == <span class="number">1</span> &amp;&amp; N) &#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> ((a[i]-b[i]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">t += (a[i]-b[i])*<span class="number">6</span> + <span class="number">5</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">t += (b[i]-a[i])*<span class="number">4</span> + <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">b[i + <span class="number">1</span>] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; t&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1021-斐波那契"><a href="#1021-斐波那契" class="headerlink" title="1021 斐波那契"></a>1021 斐波那契</h3><p><strong>Problem Description</strong><br>还有另一种斐波那契数：F（0）= 7，F（1）= 11，F（n）= F（n-1）+ F（n-2）（n&gt; = 2）。</p><p><strong>Input</strong><br>输入由一系列行组成，每行包含一个整数 n。（n &lt;1,000,000）。</p><p><strong>Output</strong><br>如果 3 被 F（n）均分，则打印单词”yes”。</p><p>如果没有，则打印单词“ no”。</p><p><strong>Sample Input</strong><br>0<br>1<br>2<br>3<br>4<br>5</p><p><strong>Sample Output</strong><br>no<br>no<br>yes<br>no<br>no<br>no</p><div class="note success no-icon flat"><p>技巧：本题需要自己找规律，因为到最后数字变得很大,long long 数组都会溢出，所以它是找规律题 f(2)、f(6)、f(10)、f(14)、f(18)、f(22)、f(26)、f(30)……都是 yes</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) == <span class="number">1</span>)  &#123;</span><br><span class="line"><span class="keyword">if</span>((n+<span class="number">2</span>) % <span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;yes&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2000-字母-ASCII-大小排序"><a href="#2000-字母-ASCII-大小排序" class="headerlink" title="2000 字母 ASCII 大小排序"></a>2000 字母 ASCII 大小排序</h3><p><strong>Problem Description</strong><br>输入三个字符后，按各字符的 ASCII 码从小到大的顺序输出这三个字符。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，有三个字符组成，之间无空格。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，字符中间用一个空格分开。</p><p><strong>Sample Input</strong><br>qwe<br>asd<br>zxc</p><p><strong>Sample Output</strong><br>e q w<br>a d s<br>c x z</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a) &#123;</span><br><span class="line">sort(a, a + <span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2001-计算两点间距"><a href="#2001-计算两点间距" class="headerlink" title="2001 计算两点间距"></a>2001 计算两点间距</h3><p><strong>Problem Description</strong><br>输入两点坐标（X1,Y1）,（X2,Y2）,计算并输出两点间的距离。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由 4 个实数组成，分别表示 x1,y1,x2,y2,数据之间用空格隔开。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，结果保留两位小数。</p><p><strong>Sample Input</strong><br>0 0 0 1<br>0 1 1 0</p><p><strong>Sample Output</strong><br>1.00<br>1.41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x1, y1, x2, y2;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x1&gt;&gt; y1&gt;&gt; x2&gt;&gt; y2) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">sqrt</span>((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2002-计算球体积"><a href="#2002-计算球体积" class="headerlink" title="2002 计算球体积"></a>2002 计算球体积</h3><p><strong>Problem Description</strong><br>根据输入的半径值，计算球的体积。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行包括一个实数，表示球的半径。</p><p><strong>Output</strong><br>输出对应的球的体积，对于每组输入数据，输出一行，计算结果保留三位小数。</p><p><strong>Sample Input</strong><br>1<br>1.5</p><p><strong>Sample Output</strong><br>4.189<br>14.137</p><div class="note success no-icon flat"><p>提示：#define PI 3.1415927</p></div><div class="note warning no-icon flat"><p>注意：球体积公式是 4/3<em>PI</em>R^3</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415927</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> r;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; r) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, (<span class="built_in">pow</span>(r, <span class="number">3</span>)*PI*<span class="number">4</span>/<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2003-求绝对值"><a href="#2003-求绝对值" class="headerlink" title="2003 求绝对值"></a>2003 求绝对值</h3><p><strong>Problem Description</strong><br>求实数的绝对值。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行包含一个实数。</p><p><strong>Output</strong><br>对于每组输入数据，输出它的绝对值，要求每组数据输出一行，结果保留两位小数。</p><p><strong>Sample Input</strong><br>123<br>-234.00</p><p><strong>Sample Output</strong><br>123.00<br>234.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> x;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="built_in">fabs</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2004-成绩等级"><a href="#2004-成绩等级" class="headerlink" title="2004 成绩等级"></a>2004 成绩等级</h3><p><strong>Problem Description</strong><br>输入一个百分制的成绩 t，将其转换成对应的等级，具体转换规则如下：<br>90~100 为 A;</p><p>80~89 为 B;</p><p>70~79 为 C;</p><p>60~69 为 D;</p><p>0~59 为 E;</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由一个整数组成。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行。如果输入数据不在 0~100 范围内，请输出一行：“Score is error!”。</p><p><strong>Sample Input</strong><br>56<br>67<br>100<br>123</p><p><strong>Sample Output</strong><br>E<br>D<br>A<br>Score is error!</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; t) &#123;</span><br><span class="line"><span class="keyword">if</span> (t &gt; <span class="number">100</span> || t &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Score is error!&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">90</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;A&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">80</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;B&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">70</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;C&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">60</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;D&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;E&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2005-第几天"><a href="#2005-第几天" class="headerlink" title="2005 第几天"></a>2005 第几天</h3><p><strong>Problem Description</strong><br>给定一个日期，输出这个日期是该年的第几天。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，数据格式为 YYYY/MM/DD 组成，具体参见 sample input ,另外，可以向你确保所有的输入数据是合法的。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，表示该日期是该年的第几天。</p><p><strong>Sample Input</strong><br>1985/1/20<br>2006/3/12</p><p><strong>Sample Output</strong><br>20<br>71</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> y, m, d;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; y&gt;&gt; c&gt;&gt; m&gt;&gt; c&gt;&gt; d) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span> &amp;&amp; (y % <span class="number">400</span> == <span class="number">0</span> || (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>))) &#123; <span class="comment">//是否是闰年</span></span><br><span class="line">ans += <span class="number">29</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>) &#123;</span><br><span class="line">ans += <span class="number">28</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (i==<span class="number">4</span> || i==<span class="number">6</span> || i==<span class="number">9</span> || i==<span class="number">11</span>) &#123;</span><br><span class="line">ans += <span class="number">30</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ans += <span class="number">31</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans + d&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2006-求奇数的乘积"><a href="#2006-求奇数的乘积" class="headerlink" title="2006 求奇数的乘积"></a>2006 求奇数的乘积</h3><p><strong>Problem Description</strong><br>给你 n 个整数，求他们中所有奇数的乘积。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例占一行，每行的第一个数为 n，表示本组数据一共有 n 个，接着是 n 个整数，你可以假设每组数据必定至少存在一个奇数。</p><p><strong>Output</strong><br>输出每组数中的所有奇数的乘积，对于测试实例，输出一行。</p><p><strong>Sample Input</strong><br>3 1 2 3<br>4 2 3 4 5</p><p><strong>Sample Output</strong><br>3<br>15</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">ans *= a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2007-平方和与立方和"><a href="#2007-平方和与立方和" class="headerlink" title="2007 平方和与立方和"></a>2007 平方和与立方和</h3><p><strong>Problem Description</strong><br>给定一段连续的整数，求出他们中所有偶数的平方和以及所有奇数的立方和。</p><p><strong>Input</strong><br>输入数据包含多组测试实例，每组测试实例包含一行，由两个整数 m 和 n 组成。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行，应包括两个整数 x 和 y，分别表示该段连续的整数中所有偶数的平方和以及所有奇数的立方和。<br>你可以认为 32 位整数足以保存结果。</p><p><strong>Sample Input</strong><br>1 3<br>2 5</p><p><strong>Sample Output</strong><br>4 28<br>20 152</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x, y, temp;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x&gt;&gt; y) &#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> evenSum = <span class="number">0</span>, oddSum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">temp = x;</span><br><span class="line">x = y;</span><br><span class="line">y = temp;</span><br><span class="line">&#125;  <span class="comment">//注意当题目过不了的时候可以考虑加上这种方法</span></span><br><span class="line"><span class="keyword">for</span> (; x &lt;= y; x++) &#123;</span><br><span class="line"><span class="keyword">if</span> (x%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">evenSum += x*x;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">oddSum += x*x*x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; evenSum &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; oddSum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2008-数值统计"><a href="#2008-数值统计" class="headerlink" title="2008 数值统计"></a>2008 数值统计</h3><p><strong>Problem Description</strong><br>统计给定的 n 个数中，负数、零和正数的个数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数是整数 n（n&lt;100），表示需要统计的数值的个数，然后是 n 个实数；如果 n=0，则表示输入结束，该行不做处理。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行 a,b 和 c，分别表示给定的数据中负数、零和正数的个数。</p><p><strong>Sample Input</strong><br>6 0 1 2 3 -1 0<br>5 1 2 3 4 0.5<br>0</p><p><strong>Sample Output</strong><br>1 2 3<br>0 0 5</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">99</span>];</span><br><span class="line"><span class="keyword">int</span> z = <span class="number">0</span>, f = <span class="number">0</span>, l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">f++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">z++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; f&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; l&lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; z&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2009-求数列的和"><a href="#2009-求数列的和" class="headerlink" title="2009 求数列的和"></a>2009 求数列的和</h3><p><strong>Problem Description</strong><br>数列的定义如下：<br>数列的第一项为 n，以后各项为前一项的平方根，求数列的前 m 项的和。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由两个整数 n（n&lt;10000）和 m(m&lt;1000)组成，n 和 m 的含义如前所述。</p><p><strong>Output</strong><br>对于每组输入数据，输出该数列的和，每个测试实例占一行，要求精度保留 2 位小数。</p><p><strong>Sample Input</strong><br>81 4<br>2 2</p><p><strong>Sample Output</strong><br>94.73<br>3.41</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">ans += n;</span><br><span class="line">n = <span class="built_in">sqrt</span>(n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2010-水仙花数"><a href="#2010-水仙花数" class="headerlink" title="2010 水仙花数"></a>2010 水仙花数</h3><p><strong>Problem Description</strong><br>春天是鲜花的季节，水仙花就是其中最迷人的代表，数学上有个水仙花数，他是这样定义的：<br>“水仙花数”是指一个三位数，它的各位数字的立方和等于其本身，比如：153=1^3+5^3+3^3。<br>现在要求输出所有在 m 和 n 范围内的水仙花数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包括两个整数 m 和 n（100&lt;=m&lt;=n&lt;=999）。</p><p><strong>Output</strong><br>对于每个测试实例，要求输出所有在给定范围内的水仙花数，就是说，输出的水仙花数必须大于等于 m,<br>并且小于等于 n，如果有多个，则要求从小到大排列在一行内输出，之间用一个空格隔开;<br>如果给定的范围内不存在水仙花数，则输出 no; 每个测试实例的输出占一行。</p><p><strong>Sample Input</strong><br>100 120<br>300 380</p><p><strong>Sample Output</strong><br>no<br>370 371</p><div class="note warning no-icon flat"><p>注意： 1.每行数据末尾没有空格 2.输出给定范围内的数据</p></div><p><strong>方法一</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> b, s, g, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp = n;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">100</span> &lt;= m &amp;&amp; n &lt;= <span class="number">999</span> &amp;&amp; m &lt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (;m &lt;= n; m++) &#123;  <span class="comment">// 注意小于等于</span></span><br><span class="line">b = m / <span class="number">100</span>;</span><br><span class="line">s = m / <span class="number">10</span> % <span class="number">10</span>;</span><br><span class="line">g = m % <span class="number">100</span> % <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span> ((b*b*b + s*s*s + g*g*g) == m) &#123;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; m;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法2：通过已知答案来推敲</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (; m &lt; n; m++) &#123;</span><br><span class="line"><span class="keyword">if</span> (m==<span class="number">153</span>||m==<span class="number">370</span>||m==<span class="number">371</span>||m==<span class="number">407</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; m&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;no&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2011-多项式求和"><a href="#2011-多项式求和" class="headerlink" title="2011 多项式求和"></a>2011 多项式求和</h3><p><strong>Problem Description</strong><br>多项式的描述如下：<br>1 - 1/2 + 1/3 - 1/4 + 1/5 - 1/6 + …<br>现在请你求出该多项式的前 n 项的和。</p><p><strong>Input</strong><br>输入数据由 2 行组成，首先是一个正整数 m（m&lt;100），表示测试实例的个数，第二行包含 m 个正整数，对于每一个整数(不妨设为 n,n&lt;1000），求该多项式的前 n 项的和。</p><p><strong>Output</strong><br>对于每个测试实例 n，要求输出多项式前 n 项的和。每个测试实例的输出占一行，结果保留 2 位小数。</p><p><strong>Sample Input</strong><br>2<br>1 2</p><p><strong>Sample Output</strong><br>1.00<br>0.50</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">ans = (i % <span class="number">2</span> == <span class="number">0</span>) ? (ans - <span class="number">1.0</span>/i) : (ans + <span class="number">1.0</span>/i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2012-素数判定"><a href="#2012-素数判定" class="headerlink" title="2012 素数判定"></a>2012 素数判定</h3><p><strong>Problem Description</strong><br>对于表达式 n^2 + n + 41，当 n 在（x,y）范围内取整数值时（包括 x, y）(-39&lt;=x&lt;y&lt;=50)，判定该表达式的值是否都为素数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，由两个整数 x，y 组成，当 x=0,y=0 时，表示输入结束，该行不做处理。</p><p><strong>Output</strong><br>对于每个给定范围内的取值，如果表达式的值都为素数，则输出”OK”,否则请输出“Sorry”,每组输出占一行。</p><p><strong>Sample Input</strong><br>0 1<br>0 0</p><p><strong>Sample Output</strong><br>OK</p><div class="note warning no-icon flat"><p>注意：素数判断只需看 2 ~ √m 之间是否能被整除，能则不是素数</p><p>By the way, 质数又称素数</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; x&gt;&gt; y &amp;&amp; (x || y)) &#123;</span><br><span class="line"><span class="keyword">int</span> ss;  <span class="comment">//素数</span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;   <span class="comment">//标志素数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= y; i++) &#123;</span><br><span class="line">ss = i*i + i + <span class="number">41</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= <span class="built_in">sqrt</span>(ss); j++) &#123;  <span class="comment">//判断素数</span></span><br><span class="line"><span class="keyword">if</span> (ss % j == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Sorry&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;OK&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2013-蟠桃记"><a href="#2013-蟠桃记" class="headerlink" title="2013 蟠桃记"></a>2013 蟠桃记</h3><p><strong>Problem Description</strong><br>喜欢西游记的同学肯定都知道悟空偷吃蟠桃的故事，其实你们是有所不知：悟空是在研究一个数学问题！他研究的问题是蟠桃一共有多少个！<br>当时的情况是这样的：<br>第一天悟空吃掉桃子总数一半多一个，第二天又将剩下的桃子吃掉一半多一个，以后每天吃掉前一天剩下的一半多一个，到第 n 天准备吃的时候只剩下一个桃子。聪明的你，请帮悟空算一下，他第一天开始吃的时候桃子一共有多少个呢？</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包含一个正整数 n（1&lt;n&lt;30），表示只剩下一个桃子的时候是在第 n 天发生的。</p><p><strong>Output</strong><br>对于每组输入数据，输出第一天开始吃的时候桃子的总数，每个测试实例占一行。</p><p><strong>Sample Input</strong><br>2<br>4</p><p><strong>Sample Output</strong><br>4<br>22</p><blockquote><p>逆向思维(倒放)：猴子每天先吐出一个桃子，然后再吐出 2 倍的桃子</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> pnum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">pnum = <span class="number">2</span> * (pnum + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; pnum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2014-大赛评分"><a href="#2014-大赛评分" class="headerlink" title="2014 大赛评分"></a>2014 大赛评分</h3><p><strong>Problem Description</strong><br>青年歌手大奖赛中，评委会给参赛选手打分。选手得分规则为去掉最高最低分，然后计算平均分，请编程输出某选手的得分。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数是 n(2&lt;n&lt;=100)，表示评委的人数，然后是 n 个评委的打分。</p><p><strong>Output</strong><br>对于每组输入数据，输出选手的得分，结果保留 2 位小数，每组输出占一行。</p><p><strong>Sample Input</strong><br>3 99 98 97<br>4 100 99 98 97</p><p><strong>Sample Output</strong><br>98.00<br>98.50</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">double</span> grades[<span class="number">100</span>], avg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; grades[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(grades, grades+n);  <span class="comment">//排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">avg += grades[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, avg/(n<span class="number">-2</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2015-偶数数列平均值"><a href="#2015-偶数数列平均值" class="headerlink" title="2015 偶数数列平均值"></a>2015 偶数数列平均值</h3><p><strong>Problem Description</strong><br>有一个长度为 n(n&lt;=100)的数列，该数列定义为从 2 开始的递增有序偶数，现在要求你按照顺序每 m 个数求出一个平均值，如果最后不足 m 个，则以实际数量求平均值。编程输出该平均值序列。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，包含两个正整数 n 和 m，n 和 m 的含义如上所述。</p><p><strong>Output</strong><br>对于每组输入数据，输出一个平均值序列，每组输出占一行。</p><p><strong>Sample Input</strong><br>3 2<br>4 2</p><p><strong>Sample Output</strong><br>3 6<br>3 7</p><div class="note warning no-icon flat"><p>注意：用数列的中位数来算均值方便些</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, a[<span class="number">100</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i+=m) &#123;</span><br><span class="line"><span class="keyword">if</span> (n - i &lt; m) &#123;      <span class="comment">//最后数列不足m个</span></span><br><span class="line"><span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>) &#123;  <span class="comment">//m为偶数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a[i+(n-i)/<span class="number">2</span>] + a[i])/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">//m为奇数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i-((n-i)<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (m % <span class="number">2</span> == <span class="number">0</span>) &#123;  <span class="comment">//m为偶数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a[i+m/<span class="number">2</span>] + a[i])/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;    <span class="comment">//m为奇数</span></span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i+(m<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2016-数据的交换输出"><a href="#2016-数据的交换输出" class="headerlink" title="2016 数据的交换输出"></a>2016 数据的交换输出</h3><p><strong>Problem Description</strong><br>输入 n(n&lt;100)个数，找出其中最小的数，将它与最前面的数交换后输出这些数。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的开始是一个整数 n，表示这个测试实例的数值的个数，跟着就是 n 个整数。n=0 表示输入的结束，不做处理。</p><p><strong>Output</strong><br>对于每组输入数据，输出交换后的数列，每组输出占一行。</p><p><strong>Sample Input</strong><br>4 2 1 3 4<br>5 5 4 3 2 1<br>0</p><p><strong>Sample Output</strong><br>1 2 3 4<br>1 4 3 2 5</p><div class="note warning no-icon flat"><p>注意：一定要将 flag 初始化，否则 min 一开始就是最小的话，<br>那么 if 就不执行，从而 flag 至始至终没有值， 从而导致 temp 那儿的转化出错</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n &amp;&amp; n &lt; <span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>, min, a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> (!i) &#123;min = a[i];&#125;</span><br><span class="line"><span class="keyword">if</span> (min &gt; a[i]) &#123;</span><br><span class="line">min = a[i];</span><br><span class="line">flag = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp = a[<span class="number">0</span>];</span><br><span class="line">a[<span class="number">0</span>] = a[flag];</span><br><span class="line">a[flag] = temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2017-字符串统计"><a href="#2017-字符串统计" class="headerlink" title="2017 字符串统计"></a>2017 字符串统计</h3><p><strong>Problem Description</strong><br>对于给定的一个字符串，统计其中数字字符出现的次数。</p><p><strong>Input</strong><br>输入数据有多行，第一行是一个整数 n，表示测试实例的个数，后面跟着 n 行，每行包括一个由字母和数字组成的字符串。</p><p><strong>Output</strong><br>对于每个测试实例，输出该串中数值的个数，每个输出占一行。</p><p><strong>Sample Input</strong><br>2<br>asdfasdf123123asdfasdf<br>asdf111111111asdfasdfasdf</p><p><strong>Sample Output</strong><br>6<br>9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; a[i] &gt;= <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2018-母牛的数量"><a href="#2018-母牛的数量" class="headerlink" title="2018 母牛的数量"></a>2018 母牛的数量</h3><p><strong>Problem Description</strong><br>有一头母牛，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第 n 年的时候，共有多少头母牛？</p><p><strong>Input</strong><br>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数 n(0&lt;n&lt;55)，n 的含义如题目中描述。<br>n=0 表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出在第 n 年的时候母牛的数量。<br>每个输出占一行。</p><p><strong>Sample Input</strong><br>2<br>4<br>5<br>0</p><p><strong>Sample Output</strong><br>2<br>4<br>6</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="comment">// 各年龄牛数的初始化</span></span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">0</span>; <span class="comment">//1岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num2 = <span class="number">0</span>; <span class="comment">//2岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num3 = <span class="number">0</span>; <span class="comment">//3岁的母牛数</span></span><br><span class="line"><span class="keyword">int</span> num4 = <span class="number">1</span>; <span class="comment">//4岁及以上的母牛数，可生牛了</span></span><br><span class="line"><span class="keyword">int</span> t1, t2, t3, t4; <span class="comment">//temp</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">t1 = num1;</span><br><span class="line">t2 = num2;</span><br><span class="line">t3 = num3;</span><br><span class="line">t4 = num4;</span><br><span class="line">num1 += t4 - t1; <span class="comment">//num1取决于num4有多少，又因为大了一岁，所以这个年龄区间牛数还要减去原来的</span></span><br><span class="line">num2 += t1 - t2; <span class="comment">//num2取决于num1有多少，同样需要减去原来牛数</span></span><br><span class="line">num3 += t2 - t3; <span class="comment">//以此类推</span></span><br><span class="line">num4 += t3; <span class="comment">//4年及以上不用减去原来的牛数了，扎堆</span></span><br><span class="line">num1 += t3;      <span class="comment">//3岁牛一到4岁就要生一岁的牛，再加t3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; num1 + num2 + num3 + num4&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2019-数列有序"><a href="#2019-数列有序" class="headerlink" title="2019 数列有序"></a>2019 数列有序</h3><p><strong>Problem Description</strong><br>有 n(n&lt;=100)个整数，已经按照从小到大顺序排列好，现在另外给一个整数 m，<br>请将该数插入到序列中，并使新的序列仍然有序。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每组数据由两行组成，第一行是 n 和 m，<br>第二行是已经有序的 n 个数的数列。n 和 m 同时为 0 标示输入数据的结束，本行不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出插入新的元素后的数列。</p><p><strong>Sample Input</strong><br>3 3<br>1 2 4<br>0 0</p><p><strong>Sample Output</strong><br>1 2 3 4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m &amp;&amp; (n || m)) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">a[n] = m;</span><br><span class="line">sort(a, a+n+<span class="number">1</span>); <span class="comment">//+1是因为又多了一个m数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2020-绝对值排序"><a href="#2020-绝对值排序" class="headerlink" title="2020 绝对值排序"></a>2020 绝对值排序</h3><p><strong>Problem Description</strong><br>输入 n(n&lt;=100)个整数，按照绝对值从大到小排序后输出。题目保证对于每一个测试实例，所有的数的绝对值都不相等。</p><p><strong>Input</strong><br>输入数据有多组，每组占一行，每行的第一个数字为 n,接着是 n 个整数，n=0 表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，输出排序后的结果，两个数之间用一个空格隔开。每个测试实例占一行。</p><p><strong>Sample Input</strong><br>3 3 -4 2<br>4 0 1 2 -3<br>0</p><p><strong>Sample Output</strong><br>-4 3 2<br>-3 2 1 0</p><p><strong>方法一</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">b[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">b[i] = <span class="built_in">abs</span>(b[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(b, b+n);</span><br><span class="line">reverse(b, b+n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] == -a[j]) &#123;</span><br><span class="line">b[i] = -b[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>(a) &gt; <span class="built_in">abs</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">sort(a, a+n, compare);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2021-发工资"><a href="#2021-发工资" class="headerlink" title="2021 发工资"></a>2021 发工资</h3><p><strong>Problem Description</strong><br>作为杭电的老师，8 号这一天是发工资的日子，财务处的小胡老师最近就在考虑一个问题：<br>如果每个老师的工资额都知道，最少需要准备多少张人民币，才能在给每位老师发工资的时候都不用老师找零呢？<br>这里假设老师的工资都是正整数，单位元，人民币一共有 100 元、50 元、10 元、5 元、2 元和 1 元六种。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例的第一行是一个整数 n（n&lt;100），表示老师的人数，然后是 n 个老师的工资。<br>n=0 表示输入的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例输出一个整数 x,表示至少需要准备的人民币张数。每个输出占一行。</p><p><strong>Sample Input</strong><br>3<br>1 2 3<br>0</p><p><strong>Sample Output</strong><br>4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n &amp;&amp; n) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;           <span class="comment">//人民币张数</span></span><br><span class="line">        <span class="keyword">int</span> a[<span class="number">100</span>];            <span class="comment">//老师工资</span></span><br><span class="line">        <span class="keyword">int</span> b, ws, s, w, e, y; <span class="comment">//六种面值的张数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">            b = a[i] / <span class="number">100</span>;</span><br><span class="line">            ws = a[i] % <span class="number">100</span> / <span class="number">50</span>;</span><br><span class="line">            s = a[i] % <span class="number">100</span> % <span class="number">50</span> / <span class="number">10</span>;</span><br><span class="line">            w = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> / <span class="number">5</span>;</span><br><span class="line">            e = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> % <span class="number">5</span> / <span class="number">2</span>;</span><br><span class="line">            y = a[i] % <span class="number">100</span> % <span class="number">50</span> % <span class="number">10</span> % <span class="number">5</span> % <span class="number">2</span>;</span><br><span class="line">            num += b + ws + s + w + e + y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2022-海选女主角"><a href="#2022-海选女主角" class="headerlink" title="2022 海选女主角"></a>2022 海选女主角</h3><p><strong>Problem Description</strong><br>hss 开办了一个女友竞选面试，面试那天，来了 m<em>n 个 MM，站成一个 m</em>n 的队列，hss 的助理团为每个 MM 打了分数，分数都是 32 位有符号整数。如果 MM 不太优秀，分数有可能是负数哦! 奇怪的是，hss 的目的是要选一个面试分数绝对值（必须还是 32 位整数）最大的 MM，差到极点也是好。</p><p><strong>Input</strong><br>输入数据有多组，每组的第一行是两个整数 m 和 n，表示应聘 MM 的总共的行列数，然后是 m 行整数，每行有 n 个，m 和 n 的定义见题目的描述。</p><p><strong>Output</strong><br>对于每组输入数据，输出三个整数 x,y 和 s，分别表示选中的 MM 的行号、列号和分数。<br>note:行号和列号从一开始，如果有多个 MM 的分数绝对值一样，那么输出排在最前面的一个（即行号最小的那个，如果行号相同则取列号最小的那个）。</p><p><strong>Sample Input</strong><br>2 3<br>1 4 -3<br>-7 3 0</p><p><strong>Sample Output</strong><br>2 1 -7</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; m&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> mm[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>, I, J;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; mm[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(max) &lt; <span class="built_in">abs</span>(mm[i][j])) &#123;</span><br><span class="line">max = mm[i][j];</span><br><span class="line">I = i;</span><br><span class="line">J = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; I+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; J+<span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; max&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2023-求平均成绩"><a href="#2023-求平均成绩" class="headerlink" title="2023 求平均成绩"></a>2023 求平均成绩</h3><p><strong>Problem Description</strong><br>假设一个班有 n(n&lt;=50)个学生，每人考 m(m&lt;=5)门课，求每个学生的平均成绩和每门课的平均成绩，并输出各科成绩均大于等于平均成绩的学生数量。</p><p>Inp<br>输入数据有多个测试实例，每个测试实例的第一行包括两个整数 n 和 m，分别表示学生数和课程数。然后是 n 行数据，每行包括 m 个整数（即：考试分数）。</p><p><strong>Output</strong><br>对于每个测试实例，输出 3 行数据，第一行包含 n 个数据，表示 n 个学生的平均成绩，结果保留两位小数；第二行包含 m 个数据，表示 m 门课的平均成绩，结果保留两位小数；第三行是一个整数，表示该班级中各科成绩均大于等于平均成绩的学生数量。<br>每个测试实例后面跟一个空行。</p><p><strong>Sample Input</strong><br>2 2<br>5 10<br>10 20</p><p><strong>Sample Output</strong><br>7.50 15.00<br>7.50 15.00<br>1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m) &#123;</span><br><span class="line"><span class="keyword">double</span> Savg[<span class="number">50</span>], Cavg[<span class="number">5</span>];  <span class="comment">//数组大小要大于题目给定的极值</span></span><br><span class="line"><span class="keyword">int</span> sc[<span class="number">50</span>][<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;  <span class="comment">//各科成绩均 &gt;= 平均成绩的学生数量</span></span><br><span class="line"><span class="built_in">memset</span>(Savg, <span class="number">0</span>, <span class="keyword">sizeof</span>(Savg));</span><br><span class="line"><span class="built_in">memset</span>(Cavg, <span class="number">0</span>, <span class="keyword">sizeof</span>(Cavg));</span><br><span class="line"></span><br><span class="line"><span class="comment">//输入每名学生成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; sc[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求每位同学的平均成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">//学生</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;  <span class="comment">//课程</span></span><br><span class="line">Savg[i] += sc[i][j];  <span class="comment">//把第i位同学所有课程成绩累加</span></span><br><span class="line">Cavg[j] += sc[i][j];  <span class="comment">//把第j门课程所有同学成绩累加</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Savg[i] /= (m*<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, Savg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求每们课的平均成绩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(i) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Cavg[i] /= (n*<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, Cavg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求各科成绩均 &gt;= 平均成绩的学生数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">//学生</span></span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;  <span class="comment">//1代表符合，0代表不符合</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;  <span class="comment">//课程</span></span><br><span class="line"><span class="keyword">if</span> (sc[i][j] &lt; Cavg[j]) &#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//注意题目要求：每个实例后跟一个空行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2024-C-语言合法标识符判断"><a href="#2024-C-语言合法标识符判断" class="headerlink" title="2024 C 语言合法标识符判断"></a>2024 C 语言合法标识符判断</h3><p><strong>Problem Description</strong><br>输入一个字符串，判断其是否是 C 的合法标识符。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，数据的第一行是一个整数 n，表示测试实例的个数，<br>然后是 n 行输入数据，每行是一个长度不超过 50 的字符串。</p><p><strong>Output</strong><br>对于每组输入数据，输出一行。如果输入数据是 C 的合法标识符，则输出”yes”，否则，输出“no”。</p><p><strong>Sample Input</strong><br>3<br>12ajf<br>fi8x_a<br>ff ai_2</p><p><strong>Sample Output</strong><br>no<br>yes<br>no</p><div class="note success no-icon flat"><p>提示：合法标识符由字母、下划线、数字这三个方面组成，但开头必须是字母或下划线</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    getchar(); <span class="comment">//把无用的回车字符吸收掉</span></span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="keyword">char</span> s[<span class="number">50</span>];</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>; <span class="comment">// 0不满足，1满足</span></span><br><span class="line">        gets(s);</span><br><span class="line">        <span class="keyword">if</span> ((s[<span class="number">0</span>] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[<span class="number">0</span>] &lt;= <span class="string">&#x27;z&#x27;</span>) || (s[<span class="number">0</span>] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[<span class="number">0</span>] &lt;= <span class="string">&#x27;Z&#x27;</span>) ||</span><br><span class="line">            s[<span class="number">0</span>] == <span class="string">&#x27;_&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!((s[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;z&#x27;</span>) ||</span><br><span class="line">                      (s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) || (s[i] == <span class="string">&#x27;_&#x27;</span>) ||</span><br><span class="line">                      (s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>))) &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2025-查找最大字母"><a href="#2025-查找最大字母" class="headerlink" title="2025 查找最大字母"></a>2025 查找最大字母</h3><p><strong>Problem Description</strong><br>对于输入的每个字符串，查找其中的最大字母，在该字母后面插入字符串“(max)”。</p><p><strong>Input</strong><br>输入数据包括多个测试实例，每个实例由一行长度不超过 100 的字符串组成，字符串仅由大小写字母构成。</p><p><strong>Output</strong><br>对于每个测试实例输出一行字符串，输出的结果是插入字符串“(max)”后的结果，<br>如果存在多个最大的字母，就在每一个最大字母后面都插入”(max)”。</p><p><strong>Sample Input</strong><br>abcdefgfedcba<br>xxxxx</p><p><strong>Sample Output</strong><br>abcdefg(max)fedcba<br>x(max)x(max)x(max)x(max)x(max)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a) &#123;</span><br><span class="line"><span class="keyword">char</span> max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; a[i]) &#123;</span><br><span class="line">max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[i];</span><br><span class="line"><span class="keyword">if</span> (max == a[i]) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;(max)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2026-首字母变大写"><a href="#2026-首字母变大写" class="headerlink" title="2026 首字母变大写"></a>2026 首字母变大写</h3><p><strong>Problem Description</strong><br>输入一个英文句子，将每个单词的第一个字母改成大写字母。</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例是一个长度不超过 100 的英文句子，占一行。</p><p><strong>Output</strong><br>请输出按照要求改写后的英文句子。</p><p><strong>Sample Input</strong><br>i like acm<br>i want to get an accepted</p><p><strong>Sample Output</strong><br>I Like Acm<br>I Want To Get An Accepted</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">while</span>(gets(s)) &#123;</span><br><span class="line">s[<span class="number">0</span>] -= <span class="number">32</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">s[i+<span class="number">1</span>] -= <span class="number">32</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; s&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2027-统计元音"><a href="#2027-统计元音" class="headerlink" title="2027 统计元音"></a>2027 统计元音</h3><p><strong>Problem Description</strong><br>统计每个元音字母在字符串中出现的次数。</p><p><strong>Input</strong><br>输入数据首先包括一个整数 n，表示测试实例的个数，<br>然后是 n 行长度不超过 100 的字符串。</p><p><strong>Output</strong><br>对于每个测试实例输出 5 行，格式如下：<br>a:num1<br>e:num2<br>i:num3<br>o:num4<br>u:num5<br>多个测试实例之间由一个空行隔开。</p><p>请特别注意：最后一块输出后面没有空行：）</p><p><strong>Sample Input</strong><br>2<br>aeiou<br>my name is ignatius</p><p><strong>Sample Output</strong><br>a:1<br>e:1<br>i:1<br>o:1<br>u:1</p><p>a:2<br>e:1<br>i:3<br>o:0<br>u:1</p><div class="note warning no-icon flat"><p>注意：定义变量时变量名不要搞重复了</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, a, e, i, o, u;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        a = e = i = o = u = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> c[<span class="number">100</span>];</span><br><span class="line">        gets(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; c[k] != <span class="string">&#x27;\0&#x27;</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c[k] == <span class="string">&#x27;a&#x27;</span>) &#123;</span><br><span class="line">                a++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;e&#x27;</span>) &#123;</span><br><span class="line">                e++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;i&#x27;</span>) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;o&#x27;</span>) &#123;</span><br><span class="line">                o++;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[k] == <span class="string">&#x27;u&#x27;</span>) &#123;</span><br><span class="line">                u++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;e:&quot;</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;i:&quot;</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;o:&quot;</span> &lt;&lt; o &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;u:&quot;</span> &lt;&lt; u &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span> (n) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2028-最小公倍数"><a href="#2028-最小公倍数" class="headerlink" title="2028 最小公倍数"></a>2028 最小公倍数</h3><p><strong>Problem Description</strong><br>求 n 个数的最小公倍数。</p><p><strong>Input</strong><br>输入包含多个测试实例，每个测试实例的开始是一个正整数 n，然后是 n 个正整数。</p><p><strong>Output</strong><br>为每组测试数据输出它们的最小公倍数，每个测试实例的输出占一行。你可以假设最后的输出是一个 32 位的整数。</p><p><strong>Sample Input</strong><br>2 4 6<br>3 2 5 7</p><p><strong>Sample Output</strong><br>12<br>70</p><div class="note success no-icon flat"><p>提示：最小公倍数为<strong>俩数之积除它们的最大公约数</strong>，而最大公约数采用<strong>辗转相除法</strong>。</p><p><strong>辗转相除法 思路</strong>：</p><p>有两整数 a 和 b</p><ol><li>a%b 得余数 c</li><li>若 c=0，则 b 即为两数的最大公约数</li><li>若 c≠0，则 a=b，b=c，再回去执行步骤 1</li></ol></div><blockquote><p>本题 <code>a = a / divisor(a, b) * b</code> 这个地方，OJ 只能让 b 在后面乘才能通过，终于想明白了，因为如果 b 先乘，可能数字会越界，所以先除，数变小了再乘，细节。。。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divisor</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;  <span class="comment">//用来求最大公约数，运用到了递归</span></span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> divisor(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; b;</span><br><span class="line">a = a / divisor(a, b) * b; <span class="comment">//每一次和新输入的数进行求最小公倍数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2029-回文数（简单版）"><a href="#2029-回文数（简单版）" class="headerlink" title="2029 回文数（简单版）"></a>2029 回文数（简单版）</h3><p><strong>Problem Description</strong><br>“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。<br>请写一个程序判断读入的字符串是否是“回文”。</p><p><strong>Input</strong><br>输入包含多个测试实例，输入数据的第一行是一个正整数 n,表示测试实例的个数，后面紧跟着是 n 个字符串。</p><p><strong>Output</strong><br>如果一个字符串是回文串，则输出”yes”,否则输出”no”.</p><p><strong>Sample Input</strong><br>4<br>level<br>abcde<br>noon<br>haha</p><p><strong>Sample Output</strong><br>yes<br>no<br>yes<br>no</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> str, s;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        s = str;</span><br><span class="line">        reverse(str.begin(), str.end());</span><br><span class="line">        <span class="keyword">if</span> (str == s) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;yes&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;no&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2030-汉字统计"><a href="#2030-汉字统计" class="headerlink" title="2030 汉字统计"></a>2030 汉字统计</h3><p><strong>Problem Description</strong><br>统计给定文本文件中汉字的个数。</p><p><strong>Input</strong><br>输入文件首先包含一个整数 n，表示测试实例的个数，然后是 n 段文本。</p><p><strong>Output</strong><br>对于每一段文本，输出其中的汉字的个数，每个测试实例的输出占一行。</p><p>[提示:]从汉字机内码的特点考虑~</p><p><strong>Sample Input</strong><br>2<br>WaHaHa! WaHaHa! 今年过节不说话要说只说普通话 WaHaHa! WaHaHa!<br>马上就要期末考试了 Are you ready?</p><p><strong>Sample Output</strong><br>14<br>9</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, count;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((c = getchar()) != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (c &lt; <span class="number">0</span>) &#123;  <span class="comment">//汉字ASCii码小于0</span></span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; count / <span class="number">2</span> &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//因为汉字有2个字节，所以除以2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2032-杨辉三角打印"><a href="#2032-杨辉三角打印" class="headerlink" title="2032 杨辉三角打印"></a>2032 杨辉三角打印</h3><p><strong>Problem Description</strong><br>还记得中学时候学过的杨辉三角吗？具体的定义这里不再描述，你可以参考以下的图形：<br>1<br>1 1<br>1 2 1<br>1 3 3 1<br>1 4 6 4 1<br>1 5 10 10 5 1</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个测试实例的输入只包含一个正整数 n（1&lt;=n&lt;=30），表示将要输出的杨辉三角的层数。</p><p><strong>Output</strong><br>对应于每一个输入，请输出相应层数的杨辉三角，每一层的整数之间用一个空格隔开，每一个杨辉三角后面加一个空行。</p><p><strong>Sample Input</strong><br>2 3</p><p><strong>Sample Output</strong><br>1<br>1 1</p><p>1<br>1 1<br>1 2 1</p><div class="note warning no-icon flat"><p>注意：</p><ol><li>不要用阶乘的方式，因为容易超出字节长度。</li><li>每行结尾不要有空格</li></ol></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, i, j;</span><br><span class="line"><span class="keyword">int</span> yhsj[<span class="number">30</span>][<span class="number">30</span>];</span><br><span class="line">yhsj[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">yhsj[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">yhsj[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> || j == i) &#123;</span><br><span class="line">yhsj[i][j] = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">yhsj[i][j] = yhsj[i<span class="number">-1</span>][j] + yhsj[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; yhsj[i][j]&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; yhsj[i][j]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2035-A-B"><a href="#2035-A-B" class="headerlink" title="2035 A^B"></a>2035 A^B</h3><p><strong>Problem Description</strong><br>求 A^B 的最后三位数表示的整数。<br>说明：A^B 的含义是“A 的 B 次方”</p><p><strong>Input</strong><br>输入数据包含多个测试实例，每个实例占一行，由两个正整数 A 和 B 组成（1&lt;=A,B&lt;=10000），<br>如果 A=0, B=0，则表示输入数据的结束，不做处理。</p><p><strong>Output</strong><br>对于每个测试实例，请输出 A^B 的最后三位表示的整数，每个输出占一行。</p><p><strong>Sample Input</strong><br>2 3<br>12 6<br>6789 10000<br>0 0</p><p><strong>Sample Output</strong><br>8<br>984<br>1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> A, B;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; A&gt;&gt; B &amp;&amp; A &amp;&amp; B) &#123;</span><br><span class="line"><span class="keyword">int</span> ans = A;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B - <span class="number">1</span>; i++) &#123;</span><br><span class="line">ans = (ans * A) % <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; ans&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2039-三角形"><a href="#2039-三角形" class="headerlink" title="2039 三角形"></a>2039 三角形</h3><p><strong>Problem Description</strong><br>给定三条边，请你判断一下能不能组成一个三角形。</p><p><strong>Input</strong><br>输入数据第一行包含一个数 M，接下有 M 行，每行一个实例，包含三个正数 A,B,C。其中 A,B,C &lt;1000;</p><p><strong>Output</strong><br>对于每个测试实例，如果三条边长 A,B,C 能组成三角形的话，输出 YES，否则 NO。</p><p><strong>Sample Input</strong><br>2<br>1 2 3<br>2 2 2</p><p><strong>Sample Output</strong><br>NO<br>YES</p><div class="note warning no-icon flat"><p>注意：ABC 的描述是正数(用 double)，别理解成整数了(不用 int)</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> M;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; M;</span><br><span class="line"><span class="keyword">while</span> (M--) &#123;</span><br><span class="line"><span class="keyword">double</span> A, B, C;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; A&gt;&gt; B&gt;&gt; C;</span><br><span class="line"><span class="keyword">if</span> ((A+B)&gt;C &amp;&amp; (A+C)&gt;B &amp;&amp; (B+C)&gt;A</span><br><span class="line">&amp;&amp; A&lt;<span class="number">1000</span> &amp;&amp; B&lt;<span class="number">1000</span> &amp;&amp; C&lt;<span class="number">1000</span></span><br><span class="line">&amp;&amp; A&gt;<span class="number">0</span> &amp;&amp; B&gt;<span class="number">0</span> &amp;&amp; C&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2040-亲和数"><a href="#2040-亲和数" class="headerlink" title="2040 亲和数"></a>2040 亲和数</h3><p><strong>Problem Description</strong><br>古希腊数学家毕达哥拉斯在自然数研究中发现，220 的所有真约数(即不是自身的约数)之和为：<br>1+2+4+5+10+11+20+22+44+55+110 ＝ 284。<br>而 284 的所有真约数为 1、2、4、71、 142，加起来恰好为 220。人们对这样的数感到很惊奇，并称之为亲和数。<br>一般地讲，如果两个数中任何一个数都是另一个数的真约数之和，则这两个数就是亲和数。<br>你的任务就编写一个程序，判断给定的两个数是否是亲和数</p><p><strong>Input</strong><br>输入数据第一行包含一个数 M，接下有 M 行，每行一个实例,包含两个整数 A,B； 其中 0 &lt;= A,B &lt;= 600000 ;</p><p><strong>Output</strong><br>对于每个测试实例，如果 A 和 B 是亲和数的话输出 YES，否则输出 NO。</p><p><strong>Sample Input</strong><br>2<br>220 284<br>100 200</p><p><strong>Sample Output</strong><br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>], sum0, sum1;</span><br><span class="line">sum0 = sum1 = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[<span class="number">0</span>]&gt;&gt; a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">0</span>] / <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">0</span>] % i == <span class="number">0</span>) &#123;</span><br><span class="line">sum0 += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">1</span>] / <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[<span class="number">1</span>] % i == <span class="number">0</span>) &#123;</span><br><span class="line">sum1 += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum1==a[<span class="number">0</span>] &amp;&amp; sum0==a[<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2042-老汉付过路费"><a href="#2042-老汉付过路费" class="headerlink" title="2042 老汉付过路费"></a>2042 老汉付过路费</h3><p><strong>Problem Description</strong><br>徐老汉带着一群羊准备到另一个地方卖掉，路途有很多路口收费站，由于徐老汉没钱，收费员就将他的羊拿走一半，<br>看到老汉泪水涟涟，心疼又还给老汉一只。巧的是，后面每过一个收费站，都是拿走当时羊的一半，<br>然后退还一只，等到老汉到达市场，就只剩下 3 只羊了，你能帮忙算一下老汉最初有多少只羊吗？</p><p><strong>Input</strong><br>输入数据第一行是一个整数 N，下面由 N 行组成，每行包含一个整数 a(0&lt;a&lt;=30),表示收费站的数量。</p><p><strong>Output</strong><br>对于每个测试实例，请输出最初的羊的数量,每个测试实例的输出占一行。</p><p><strong>Sample Input</strong><br>2<br>1<br>2</p><p><strong>Sample Output</strong><br>4<br>6</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">station</span><span class="params">(<span class="keyword">int</span> sheep, <span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= a; i++) &#123;</span><br><span class="line">        sheep = <span class="number">2</span> * (sheep - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sheep;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, a, sheep = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="keyword">while</span> (N--) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; station(sheep, a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2043-判断安全密码"><a href="#2043-判断安全密码" class="headerlink" title="2043 判断安全密码"></a>2043 判断安全密码</h3><p><strong>Problem Description</strong><br>首先，我们要设一个安全的密码。那什么样的密码才叫安全的呢？<br>一般来说一个比较安全的密码至少应该满足下面两个条件：<br>(1)密码长度大于等于 8，且不要超过 16。<br>(2)密码中的字符应该来自下面“字符类别”中四组中的至少三组。<br>这四个字符类别分别为： 1.大写字母：A,B,C…Z; 2.小写字母：a,b,c…z; 3.数字：0,1,2…9; 4.特殊符号：~,!,@,#,$,%,^;</p><p>给你一个密码，你的任务就是判断它是不是一个安全的密码。</p><p><strong>Input</strong><br>输入数据第一行包含一个数 M，接下有 M 行，每行一个密码（长度最大可能为 50），密码仅包括上面的四类字符。</p><p><strong>Output</strong><br>对于每个测试实例，判断这个密码是不是一个安全的密码，是的话输出 YES，否则输出 NO。</p><p><strong>Sample Input</strong><br>3<br>a1b2c3d4<br>Linle@ACM<br>^~^@^@!%</p><p><strong>Sample Output</strong><br>NO<br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> M;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; M;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (M--) &#123;</span><br><span class="line"><span class="keyword">char</span> pwd;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d, num, flag;</span><br><span class="line">a = b = c = d = num = <span class="number">0</span>;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((pwd = getchar()) != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; pwd &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">c = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (pwd == <span class="string">&#x27;~&#x27;</span> || pwd == <span class="string">&#x27;!&#x27;</span> || pwd == <span class="string">&#x27;@&#x27;</span></span><br><span class="line">|| pwd == <span class="string">&#x27;#&#x27;</span> || pwd == <span class="string">&#x27;$&#x27;</span> || pwd == <span class="string">&#x27;%&#x27;</span> || pwd == <span class="string">&#x27;^&#x27;</span>) &#123;</span><br><span class="line">d = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">num++; <span class="comment">// 统计密码长度</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123; <span class="comment">// flag为0则说明之前已经打印了NO，无需在判断了</span></span><br><span class="line"><span class="keyword">if</span> (a + b + c + d &gt;= <span class="number">3</span> &amp;&amp; num &gt;= <span class="number">8</span> &amp;&amp; num &lt;= <span class="number">16</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2055-一个简单的问题"><a href="#2055-一个简单的问题" class="headerlink" title="2055 一个简单的问题"></a>2055 一个简单的问题</h3><p>问题描述<br>我们定义 f（A）= 1，f（a）= -1，f（B）= 2，f（b）= -2，… f（Z）= 26，f（z）= -26;<br>给您一个字母 x 和一个数字 y，您应该输出 y + f（x）的结果。</p><p>输入项<br>第一行包含一个数字 T，然后是 T 行，每行是一个 case。每个 case 包含一个字母和一个数字。</p><p>输出量<br>对于每种情况，您应将 y + f（x）的结果放在一行上。</p><p>样本输入<br>6<br>R 1<br>P 2<br>G 3<br>r 1<br>p 2<br>g 3</p><p>样本输出<br>19<br>18<br>10<br>-17<br>-14<br>-4</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> length 1000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">a += <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">97</span>) &#123;</span><br><span class="line">a = <span class="number">96</span> - a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a -= <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">char</span> ltr[length];</span><br><span class="line"><span class="keyword">int</span> num[length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; ltr[i]&gt;&gt; num[i];  <span class="comment">//字母和数字都输入进去</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; num[i] + f(ltr[i])&lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//计算结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2070-斐波那契数"><a href="#2070-斐波那契数" class="headerlink" title="2070 斐波那契数"></a>2070 斐波那契数</h3><p>问题描述<br>您对此问题的目标是开发一个程序，该程序将生成一个斐波纳契数。fibbonacci 函数的定义如下：<br>f（0）= 0<br>f（1）= 1<br>f（n）= f（n-1）+ f（n-2）<br>您的程序应该能够处理 n 中的 n 值。范围从 0 到 50。</p><p>输入项<br>每个测试用例在一行中由一个整数 n 组成，其中 0≤n≤50。输入以-1 终止。</p><p>输出量<br>针对每个测试用例，在一行中打印出答案。</p><p>样本输入<br>3<br>4<br>5<br>-1</p><p>样本输出<br>2<br>3<br>5</p><div class="note warning no-icon flat"><p>注意：函数返回值也要是 long long 型</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">51</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">50</span>; i++) &#123;  <span class="comment">//斐波那契数组</span></span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n &amp;&amp; n != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; a[n]&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2071-最大身高"><a href="#2071-最大身高" class="headerlink" title="2071 最大身高"></a>2071 最大身高</h3><p>问题描述<br>班上有一些学生，你能帮助老师找到最高的学生吗？</p><p>输入项<br>有一些情况。第一行包含一个整数 t，表示情况；每个案例的整数 n（1≤n≤100），后跟 n 个学生的身高。</p><p>输出量<br>对于每种情况，输出的最高高度均为两个十进制小数点的高度；</p><p>样本输入<br>2<br>3 170.00 165.00 180.00<br>4 165.00 182.00 172.00 160.00</p><p>样本输出<br>180.00<br>182.00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t, n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t-- &amp;&amp; <span class="built_in">cin</span>&gt;&gt; n) &#123;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">100</span>], max;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">max = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; a[i]) &#123;</span><br><span class="line">max = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, max);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2073-无限的路"><a href="#2073-无限的路" class="headerlink" title="2073 无限的路"></a>2073 无限的路</h3><p>甜甜从小就喜欢画图画，最近他买了一支智能画笔，由于刚刚接触，<br>所以甜甜只会用它来画直线，于是他就在平面直角坐标系中画出如下的图形：<br>如图（2073 无限的路.jpg）<br>甜甜的好朋友蜜蜜发现上面的图还是有点规则的，于是他问甜甜：<br>在你画的图中，我给你两个点，请你算一算连接两点的折线长度（即沿折线走的路线长度）吧。</p><p><strong>Input</strong><br>第一个数是正整数 N（≤100）。代表数据的组数。<br>每组数据由四个非负整数组成 x1，y1，x2，y2；所有的数都不会大于 100。</p><p><strong>Output</strong><br>对于每组数据，输出两点(x1,y1),(x2,y2)之间的折线距离。注意输出结果精确到小数点后 3 位。</p><p><strong>Sample Input</strong><br>5<br>0 0 0 1<br>0 0 1 0<br>2 3 3 1<br>99 99 9 9<br>5 5 5 5</p><p><strong>Sample Output</strong><br>1.000<br>2.414<br>10.646<br>54985.047<br>0.000</p><div class="note success no-icon flat"><p>思路：先算出每个点到原点的距离，然后再相减。在算点到原点距离时，要将斜率为-1 的线和非-1 的线分开算，最后加在一起。</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> len = <span class="number">0</span>;</span><br><span class="line">n = a + b;  <span class="comment">//可称为截距</span></span><br><span class="line"><span class="comment">// 斜率为-1的线的长度</span></span><br><span class="line">len = n * (n - <span class="number">1</span>) / <span class="number">2</span> * <span class="built_in">sqrt</span>(<span class="number">2</span>);</span><br><span class="line">len += a * <span class="built_in">sqrt</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 斜率为非-1的线的长度</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">len += <span class="built_in">sqrt</span>(i*i + (i - <span class="number">1</span>)*(i - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; N;</span><br><span class="line"><span class="keyword">while</span> (N--) &#123;</span><br><span class="line"><span class="keyword">int</span> x1, y1, x2, y2;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; x1&gt;&gt; y1&gt;&gt; x2&gt;&gt; y2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, <span class="built_in">fabs</span>(fun(x1, y1) - fun(x2, y2)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2075-A-B"><a href="#2075-A-B" class="headerlink" title="2075 A%B"></a>2075 A%B</h3><p><strong>Problem Description</strong><br>正整数 A 是否能被正整数 B 整除?</p><p><strong>Input</strong><br>输入数据的第一行是一个数据 T，表示有 T 组数据。<br>每组数据有两个正整数 A 和 B(A,B&lt;10^9)。</p><p><strong>Output</strong><br>对于每组输入数据，输出”YES”表示可以被整除，”NO”表示不能被整除。</p><p><strong>Sample Input</strong><br>2<br>4 2<br>5 3</p><p><strong>Sample Output</strong><br>YES<br>NO</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (a % b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;YES&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2076-时针夹角大小"><a href="#2076-时针夹角大小" class="headerlink" title="2076 时针夹角大小"></a>2076 时针夹角大小</h3><p><strong>Problem Description</strong><br>时间过的好快，一个学期就这么的过去了，xhd 在傻傻的看着表，出于对数据的渴望，突然他想知道这个表的时针和分针的夹角是多少。现在 xhd 知道的只有时间，请你帮他算出这个夹角。</p><p>注：夹角的范围[0，180]，时针和分针的转动是连续而不是离散的。</p><p><strong>Input</strong><br>输入数据的第一行是一个数据 T，表示有 T 组数据。<br>每组数据有三个整数 h(0 &lt;= h &lt; 24)，m(0 &lt;= m &lt; 60)，s(0 &lt;= s &lt; 60)分别表示时、分、秒。</p><p><strong>Output</strong><br>对于每组输入数据，输出夹角的大小的整数部分。</p><p><strong>Sample Input</strong><br>2<br>8 3 17<br>5 13 30</p><p><strong>Sample Output</strong><br>138<br>75</p><div class="note warning no-icon flat"><p>注意：h 赋值时，要知道 m 已经值变了，所以要用 temp 获取最初的值</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">double</span> h, m, s, temp;</span><br><span class="line"><span class="keyword">int</span> angle;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; h&gt;&gt; m&gt;&gt; s;</span><br><span class="line"><span class="keyword">if</span> (h &gt;= <span class="number">12</span>) &#123;</span><br><span class="line">h -= <span class="number">12</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp = m;</span><br><span class="line">m = m*<span class="number">6</span> + s/<span class="number">10</span>;</span><br><span class="line">h = h*<span class="number">30</span> + temp/<span class="number">2</span> + s/<span class="number">120</span>;</span><br><span class="line">angle = <span class="built_in">fabs</span>(m - h) &gt; <span class="number">180</span> ? <span class="built_in">fabs</span>(<span class="number">360</span> - <span class="built_in">fabs</span>(m - h)) : <span class="built_in">fabs</span>(m - h);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; angle&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2078-复习时间"><a href="#2078-复习时间" class="headerlink" title="2078 复习时间"></a>2078 复习时间</h3><p><strong>Problem Description</strong><br>hss 复习有个习惯，在复习完一门课后，他总是挑一门更简单的课进行复习，而他复习这门课的效率为两门课的难度差的平方，<br>而复习第一门课的效率为 100 和这门课的难度差的平方。hss 这学期选了 n 门课，但是一晚上他最多只能复习 m 门课，<br>请问他一晚上复习的最高效率值是多少？</p><p><strong>Input</strong><br>输入数据的第一行是一个数据 T，表示有 T 组数据。<br>每组数据的第一行是两个整数 n(1 &lt;= n &lt;= 40)，m(1 &lt;= m &lt;= n)。<br>接着有 n 行，每行有一个正整数 a(1 &lt;= a &lt;= 100)，表示这门课的难度值。</p><p><strong>Output</strong><br>对于每组输入数据，输出一个整数，表示最高效率值。</p><p><strong>Sample Input</strong><br>2<br>2 2<br>52<br>25<br>12 5<br>89<br>64<br>6<br>43<br>56<br>72<br>92<br>23<br>20<br>22<br>37<br>31</p><p><strong>Sample Output</strong><br>5625<br>8836</p><div class="note success no-icon flat"><p>提示：其实只要是找出难度系数最低的那个跟 100 的差平方一下就是答案了，这道题看似难，其实题目没有出好，很多条件/变量都是和答案的解出没关系</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//找出最小值</span></span><br><span class="line"><span class="keyword">int</span> min = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (min &gt; d[i]) &#123;</span><br><span class="line">min = d[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span>(j&lt;T) &#123;</span><br><span class="line"><span class="keyword">int</span> n, m, d[<span class="number">40</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; d[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(<span class="number">100</span>-min(d, n))*(<span class="number">100</span>-min(d, n))&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2081-手机短号"><a href="#2081-手机短号" class="headerlink" title="2081 手机短号"></a>2081 手机短号</h3><p><strong>Problem Description</strong><br>手机号是一个 11 位长的数字串，同时作为学生，可以申请加入校园网，如果加入成功，你将另外拥有一个短号。<br>假设所有的短号都是是 6 + 手机号的后 5 位，比如号码为 13512345678 的手机，对应的短号就是 645678。<br>现在，如果给你一个 11 位长的手机号码，你能找出对应的短号吗？</p><p><strong>Input</strong><br>输入数据的第一行是一个 N(N &lt;= 200)，表示有 N 个数据，接下来的 N 行每一行为一个 11 位的手机号码。</p><p><strong>Output</strong><br>输出应包括 N 行，每行包括一个对应的短号，输出应与输入的顺序一致。</p><p><strong>Sample Input</strong><br>2<br>13512345678<br>13787654321</p><p><strong>Sample Output</strong><br>645678<br>654321</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; N;</span><br><span class="line"><span class="keyword">char</span> pnum[<span class="number">200</span>][<span class="number">11</span>], lnum[<span class="number">200</span>][<span class="number">6</span>]; <span class="comment">//放手机号和放短号的二位数组</span></span><br><span class="line"><span class="built_in">memset</span>(lnum, <span class="string">&#x27;6&#x27;</span>, <span class="keyword">sizeof</span>(lnum));  <span class="comment">//将短号数组初始化为6，只有char型数组才可以初始化为某字符</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//输入电话号码</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; pnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//获取短号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">6</span>; j &lt; <span class="number">11</span>; j++) &#123;</span><br><span class="line">lnum[i][j<span class="number">-5</span>] = pnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;     <span class="comment">//输出短号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; lnum[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>方法二</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">string</span> newstr;</span><br><span class="line">    <span class="keyword">int</span> lines;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lines;</span><br><span class="line">    <span class="keyword">while</span>(lines--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;6&#x27;</span>&lt;&lt; &amp;str[<span class="number">6</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2090-算菜价"><a href="#2090-算菜价" class="headerlink" title="2090 算菜价"></a>2090 算菜价</h3><p><strong>Problem Description</strong><br>妈妈每天都要出去买菜，但是回来后，兜里的钱也懒得数一数，到底花了多少钱真是一笔糊涂帐。现在你可以给她写程序算一下。</p><p><strong>Input</strong><br>输入含有一些数据组，每组数据包括菜种（字串），数量（计量单位不论，一律为 double 型数）和单价（double 型数，表示人民币元数），<br>因此，每组数据的菜价就是数量乘上单价啊。菜种、数量和单价之间都有空格隔开的。</p><p><strong>Output</strong><br>支付菜价的时候，由于最小支付单位是角，所以总是在支付的时候采用四舍五入的方法把分头去掉。最后，请输出一个精度为角的菜价总量。</p><p><strong>Sample Input</strong><br>青菜 1 2<br>罗卜 2 1.5<br>鸡腿 2 4.2</p><p><strong>Sample Output</strong><br>13.4</p><div class="note warning no-icon flat"><p>注意：本题有缺陷，就是没有说明输入终止条件，本人试出来终止条件是输入 EOF，不过和我们没关系，OJ 系统自己会输入判断的</p></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> cname[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">double</span> num, price, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt; cname&gt;&gt; num&gt;&gt; price) &#123;</span><br><span class="line">sum += num*price;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2092-整数解"><a href="#2092-整数解" class="headerlink" title="2092 整数解"></a>2092 整数解</h3><p><strong>Problem Description</strong><br>有二个整数，它们加起来等于某个整数，乘起来又等于另一个整数，它们到底是真还是假，<br>也就是这种整数到底存不存在，实在有点说不准，你能快速回答吗？看来只能通过编程。<br>例如：<br>x + y = 9，x * y = 15 ? 找不到这样的整数 x 和 y<br>1+4=5，1<em>4=4，所以，加起来等于 5，乘起来等于 4 的二个整数为 1 和 4<br>7+(-8)=-1，7\</em>（-8）=-56，所以，加起来等于-1，乘起来等于-56 的二个整数为 7 和-8</p><p><strong>Input</strong><br>输入数据为成对出现的整数 n，m（-10000&lt;n,m&lt;10000），它们分别表示整数的和与积，如果两者都为 0，则输入结束。</p><p><strong>Output</strong><br>只需要对于每个 n 和 m，输出“Yes”或者“No”，明确有还是没有这种整数就行了。</p><p><strong>Sample Input</strong><br>9 15<br>5 4<br>1 -56<br>0 0</p><p><strong>Sample Output</strong><br>No<br>Yes<br>Yes</p><blockquote><p>关键：▲&gt;=0 表示方程有解，sqrt_t*sqrt_t == t 表示解都为整数</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> n, m;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; n&gt;&gt; m &amp;&amp; (n || m)) &#123;</span><br><span class="line"><span class="keyword">double</span> t = n*n - <span class="number">4</span>*m;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">sqrt_t</span> = <span class="built_in">sqrt</span>(t);</span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">0</span> &amp;&amp; <span class="keyword">sqrt_t</span>*<span class="keyword">sqrt_t</span> == t) &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2096-小明-A-B"><a href="#2096-小明-A-B" class="headerlink" title="2096 小明 A+B"></a>2096 小明 A+B</h3><p><strong>Problem Description</strong><br>小明今年 3 岁了, 现在他已经能够认识 100 以内的非负整数, 并且能够进行 100 以内的非负整数的加法计算.<br>对于大于等于 100 的整数, 小明仅保留该数的最后两位进行计算, 如果计算结果大于等于 100, 那么小明也仅保留计算结果的最后两位.<br>例如, 对于小明来说:</p><ol><li>1234 和 34 是相等的</li><li>35+80=15</li></ol><p>给定非负整数 A 和 B, 你的任务是代表小明计算出 A+B 的值.</p><p><strong>Input</strong><br>输入数据的第一行为一个正整数 T, 表示测试数据的组数. 然后是 T 组测试数据. 每组测试数据包含两个非负整数 A 和 B(A 和 B 均在 int 型可表示的范围内).</p><p><strong>Output</strong><br>对于每组测试数据, 输出小明 A+B 的结果.</p><p><strong>Sample Input</strong><br>2<br>35 80<br>15 1152</p><p><strong>Sample Output</strong><br>15<br>67</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; (a%<span class="number">100</span> + b%<span class="number">100</span>) % <span class="number">100</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2098-分拆素数和"><a href="#2098-分拆素数和" class="headerlink" title="2098 分拆素数和"></a>2098 分拆素数和</h3><p><strong>Problem Description</strong><br>把一个偶数拆成两个不同素数的和，有几种拆法呢？</p><p><strong>Input</strong><br>输入包含一些正的偶数，其值不会超过 10000，个数不会超过 500，若遇 0，则结束。</p><p><strong>Output</strong><br>对应每个偶数，输出其拆成不同素数的个数，每个结果占一行。</p><p><strong>Sample Input</strong><br>30<br>26<br>0</p><p><strong>Sample Output</strong><br>3<br>2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sushu</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>; <span class="comment">//0素数，1非素数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++) &#123;  <span class="comment">//判断i素数</span></span><br><span class="line"><span class="keyword">if</span> (a % i == <span class="number">0</span>) &#123;  <span class="comment">//不是素数</span></span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a &amp;&amp; a) &#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;  <span class="comment">//拆法数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; a/<span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (sushu(i) + sushu(a-i) == <span class="number">0</span>) &#123;  <span class="comment">//若i和a-i都为为素数</span></span><br><span class="line">sum++;  <span class="comment">//拆法加1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; sum&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2099-整除的尾数"><a href="#2099-整除的尾数" class="headerlink" title="2099 整除的尾数"></a>2099 整除的尾数</h3><p><strong>Problem Description</strong><br>一个整数，只知道前几位，不知道末二位，被另一个整数除尽了，那么该数的末二位该是什么呢？</p><p><strong>Input</strong><br>输入数据有若干组，每组数据包含二个整数 a，b（0&lt;a&lt;10000, 10&lt;b&lt;100），若遇到 0 0 则处理结束。</p><p><strong>Output</strong><br>对应每组数据，将满足条件的所有尾数在一行内输出，格式见样本输出。同组数据的输出，其每个尾数之间空一格，行末没有空格。</p><p><strong>Sample Input</strong><br>200 40<br>1992 95<br>0 0</p><p><strong>Sample Output</strong><br>00 40 80<br>15</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; a&gt;&gt; b &amp;&amp; (a || b)) &#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">a *= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (a % b == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(flag) &#123;<span class="built_in">cout</span>&lt;&lt; <span class="string">&quot; &quot;</span>;&#125;</span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">10</span>)  <span class="comment">//个位数前面要加0</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;0&quot;</span>&lt;&lt;i;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; i;</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">a++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>结束语</strong>：</p><p>各路好汉们若是有疑问或建议欢迎留言噢！祝各位好运！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📜C语言 </tag>
            
            <tag> 📃C++ </tag>
            
            <tag> 🌌蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo-WebStack网址导航</title>
      <link href="posts/61c6c2e8/"/>
      <url>posts/61c6c2e8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言：</strong></p><p>看此篇教程前请确保你曾搭建过 hexo 博客，有一定的经验。若是首次建站建议搭配其他博主<a href="https://zhuanlan.zhihu.com/p/114195340">Hexo 搭建博客教程</a>一起食用，遇到一些基础问题<u>多百度百度</u>。</p><p><strong>本教程推荐使用的软件</strong>：</p><p>markdown编辑器：<code>Typora</code>。代码编辑器：<code>VSCode</code>。代码管理工具：<code>Git</code></p></blockquote><br><details ><summary> 碎碎念，搭建时的艰辛历程 </summary>              <div class='content'>              <p>我开始以为 webstack 可以通过像<code>hexo new page xxx</code>一样简单地直接加到博客导航栏里，但经过半天的实践发现没那么简单，再经过大量搜寻最后发现原来它是一个Hexo主题，就是一<strong>独立的网站</strong>，尽管自己已经看到它的文件名叫<code>hexo-theme-webstack</code>。在此之前我还寻思着，这怎么看也不像一个博客网站的 Theme，更像一个小网页，还消耗了我几天的时间去找搭建教程。首先我想吐槽，网上关于 WebStack 的教程本来就很少，而且 WebStack 它还有很多框架版本（本网址导航是 Hexo），就在海淘后零星的几个教程中，又全都是 WebStack <code>config.yml</code>参数配置讲解的教程，哎心累，但现在我终于搭建成功了，我觉得有必要去写我人生中第一个教程（这应该是全网第一篇吧？😂 至少我没找到，可能他们认为这太基础了，默认使用者都会）。最后其实呀，<strong>你只需要像创建你第一个博客那样去创建它</strong>，有搭建 Hexo 博客经验的小伙伴来说，应该简单不少，甚至不用看本篇。</p>              </div>            </details><p>话不多说，先上效果<a class="btn-beautify button--animated outline blue larger" href="https://navi.hassanwong.top"   title="网址导航Demo"><i class="far fa-hand-point-right"></i><span>网址导航Demo</span></a></p><h2 id="WebStack-简介"><a href="#WebStack-简介" class="headerlink" title="WebStack 简介"></a>WebStack 简介</h2><p>WebStack是一个可以收藏网址和导航搜索的网站模板，内容均由<a href="http://viggoz.com/">Viggo</a>收集并整理。本项目前端基于<code>bootstrap</code>前端框架开发，各后台及主题版本由广大网友提供。而我的网址导航，是基于<a href="https://hexo.io/">Hexo</a>版<a href="https://github.com/HCLonely/hexo-theme-webstack">WebStack</a>搭建的。</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>网址导航主要实现两个功能：</p><ol><li>可设为自己默认浏览器页面，方便快捷使用自己收藏的网址。</li><li>可以使用各种搜索引擎。</li></ol><h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><blockquote><p>食用教程前，建议先扫视目录中的<a href="/posts/61c6c2e8/#%E9%9B%95%E8%99%AB%E5%B0%8F%E6%8A%80">【雕虫小技】</a>板块和<a href="https://hassanwong.top/posts/223fd004/">《教程&amp;笔记常量申明》</a>。</p></blockquote><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">若想直接用我的网址导航</button></li><li class="tab"><button type="button" data-href="#test-2">若动手能力强，想白手起家</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><ol><li><p>打开<a href="https://github.com/hassanblog/navigation/">我的开源项目</a>，点击右上角<code>Fork</code>，拉取到你的远程仓库，喜欢的话顺便给我点个 <code>⭐Star</code>，谢谢~</p></li><li><p>将我的项目下载到本地任意位置</p><blockquote><p>其中下载项目方法如下：</p><p><strong>方法 1</strong>：直接下载 source 分支下的<a href="https://codeload.github.com/hassanblog/navigation/zip/refs/heads/source">ZIP 压缩包</a>。</p><p><strong>方法 2</strong>：在任意地方打开命令行，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐使用，下载速度更快</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/hassanblog/navigation.git</span><br><span class="line"><span class="comment"># 若失效则用下方命令</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/hassanblog/navigation.git</span><br></pre></td></tr></table></figure></blockquote></li><li><p>下载完毕后，先解压，再删除压缩包（教程接下来将该文件地址称之为<code>&lt;BlogRoot&gt;</code>）。</p></li><li><p>在<code>&lt;BlogRoot&gt;</code>下的命令行中输入<code>npm install hexo-util --save</code>下载 Hexo 相关组件。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><ol><li>在 GitHub 新建仓库，仓库名随意，选择<code>Public</code>公开按钮，点击<code>Create repository</code>。（若第一次使用 GitHub，名称建议:<code>&lt;UserName&gt;.github.io</code>）。</li><li>在电脑本地任意位置新建文件夹，名称随意，教程接下来将该文件地址称之为<code>&lt;BlogRoot&gt;</code>。</li><li>在<code>&lt;BlogRoot&gt;</code>下的命令行中输入<code>hexo init</code>初始化 Hexo 资源，稍等片刻你的文件夹下会多出以下文件。（<code>&lt;BlogRoot&gt;\themes\.gitkeep</code>文件可删除）</li></ol><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210401/posts/WebStack_Bulid/image-20210317135122470.png" style="zoom:80%;" /><ol start="4"><li>直接下载<a href="https://github.com/HCLonely/hexo-theme-webstack">Hexo 版 Webstack 的官方项目</a>到 <code>&lt;BlogRoot&gt;\themes</code>文件夹下</li></ol><blockquote><p>其中下载项目方法如下：</p><p><strong>方法 1</strong>：直接下载 master 分支下的<a href="https://codeload.github.com/HCLonely/hexo-theme-webstack/zip/master">ZIP 压缩包</a>。</p><p><strong>方法 2</strong>：在该文件夹下打开命令行，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐使用，下载速度更快</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com.cnpmjs.org/hassanblog/navigation.git</span><br><span class="line"><span class="comment"># 若失效则用下方命令</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/hassanblog/navigation.git</span><br></pre></td></tr></table></figure></blockquote><p>下载完毕后，先解压，再删除压缩包，最后将该文件夹命名为<code>webstack</code>。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>接下来继续 👇</p><ol><li><p>修改<code>&lt;BlogRoot&gt;\_config.yml</code>文件<code>theme</code>和<code>deploy</code>配置参数：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line"><span class="addition">+ theme: webstack</span></span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line"><span class="addition">+  type: git</span></span><br><span class="line"><span class="addition">+  repo: &lt;RepoGit&gt;</span></span><br><span class="line"><span class="addition">+  branch: &lt;BranchName&gt;</span></span><br><span class="line"># 2020年10月后&lt;BranchName&gt;默认为main</span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;BlogRoot&gt;</code>下打开命令行中输入 <code>Hexo 三连</code> ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清空缓存</span></span><br><span class="line">hexo g<span class="comment">#部署代码</span></span><br><span class="line">hexo s<span class="comment">#预览效果</span></span><br></pre></td></tr></table></figure></li><li><p>然后在浏览器地址栏中输入<code>localhost:4000</code>浏览网站的效果。</p><details ><summary> 如果提示4000端口被占用（FATAL Port 4000 has been used） </summary>              <div class='content'>              <ol><li><p>命令行中输入<code>sudo lsof -i:4000</code>，查看被占用进程的<code>pid</code></p></li><li><p>再输<code>sudo kill -9 [pid]</code></p></li><li><p>然后再继续<code>hexo s</code>，看到<code>INFO Hexo is running at ttp://localhost:4000</code>则成功。</p></li></ol>              </div>            </details></li><li><p>最后输入<code>hexo d</code>即可部署到 GitHub 远端（如果你第一次部署，可能会要输入 GitHub 账密）。</p></li><li><p>开启 GitHub 页面：</p><p>进入 GitHub 刚建的仓库 👉 点击<code>Settings</code>👉 点击左侧栏<code>Pages</code>👉 点击<code>Source</code>👉 选择默认代码分支<code>master或main</code>和默认的<code>/(root)</code> 👉 点击<code>Save</code>。</p></li><li><p>直接点击上方绿框里生成的网站链接，或在浏览器地址框中输入网址，即可看到部署之后的网站效果。</p><ul><li><p>第一次使用博客的选手直接输入：<code>&lt;UserName&gt;.github.io</code></p></li><li><p><del>老油条</del>则输入<code>&lt;UserName&gt;.github.io/&lt;RepoName&gt;/</code></p></li></ul></li></ol><h3 id="搭建后续"><a href="#搭建后续" class="headerlink" title="搭建后续"></a>搭建后续</h3><p>🎉 到此网站初始搭建部署已经完成 🎉，接下来你可以做的事情：</p><ol><li><p>根据<a href="https://blog.hclonely.com/posts/3cd4fb34/">官方文档</a>来进行基本参数配置，或者直接查看本地<code>&lt;BlogRoot&gt;\README.md</code>文件。</p></li><li><p>更换域名。</p></li><li><p>自定义美化。</p><p>这里提供我的网址导航美化代码</p><a class="btn-beautify button--animated outline larger" href="https://cdn.jsdelivr.net/gh/hassanblog/navigation/css/custom.css"   title="自定义CSS"><i class="far fa-hand-point-right"></i><span>自定义CSS</span></a><a class="btn-beautify button--animated outline larger" href="https://cdn.jsdelivr.net/gh/hassanblog/navigation/js/custom.js"   title="自定义JS"><i class="far fa-hand-point-right"></i><span>自定义JS</span></a><p><strong>使用方法</strong>：</p><p>在<code>&lt;BlogRoot&gt;\themes\webstack\source\js</code>下新建文件<code>&lt;Custom&gt;.js</code>，js 代码直接用我的或自定义写。</p><p>在<code>&lt;BlogRoot&gt;\themes\webstack\source\css</code>下新建文件<code>&lt;Custom&gt;.css</code>，css 代码直接用我的或自定义写。</p><p>打开<code>&lt;BlogRoot&gt;\themes\webstack\_config.yml</code>填入以下代码即可导入自定义文件：（当然你也可以直接用我的外链，不用在本地新建文件，<code>href=&quot;&quot;</code>、<code>src=&quot;&quot;</code>处填对应外链即可）</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">custom:</span><br><span class="line">  head: # 以下内容插入到&lt;head&gt;&lt;/head&gt;标签内，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/css/&lt;Custom&gt;.css&quot;&gt;</span></span><br><span class="line">  body: # 以下内容插入到&lt;/body&gt;标签之前，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;script src=&quot;/js/&lt;Custom&gt;.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>搭建博客镜像网站，例如在 Gitee、Vercel、Coding 等代码托管平台搭建。（因为在国内用 GitHub 搭建的网站访问速度非常慢）。</p></li><li><p><strong>版本控制</strong>：</p><p>将网址导航的源码上传至项目仓库下的<strong>Source</strong>分支。</p><p>备份项目代码目的是：</p><ol><li>魔改失败时可以拉取上一次提交的代码到本地。</li><li>在外地没带自己电脑情况下，可以用其它电脑操作。</li></ol><p>具体操作：在<code>&lt;BlogRoot&gt;</code>下的<strong>Git Bash</strong>中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git init  <span class="comment">#初始化</span></span><br><span class="line">git add .  <span class="comment">#上传所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;&lt;Custom&gt;&quot;</span>  <span class="comment">#提交时的注释，例如：&quot;update&quot;</span></span><br><span class="line">git remote add origin &lt;RepoGit&gt;  <span class="comment">#连接你仓库的Git地址，使Git Bash知道代码要上传至哪个仓库</span></span><br><span class="line">git branch -M &lt;BranchName&gt;  <span class="comment">#将默认master分支名改为你自己设置的</span></span><br><span class="line"><span class="comment">#若第一次提交要加上&quot;-u&quot;，如下，这里推荐分支名为&quot;Source&quot;</span></span><br><span class="line">git push -u origin &lt;BranchName&gt;</span><br><span class="line"><span class="comment">#若提交失败，显示：error: failed to push some refs to，则加上&quot;-f&quot;来强制提交</span></span><br><span class="line">git push [-u] origin &lt;BranchName&gt; -f</span><br></pre></td></tr></table></figure></li></ol><br><h2 id="雕虫小技"><a href="#雕虫小技" class="headerlink" title="雕虫小技"></a>雕虫小技</h2><ol><li><p>如何获取一个网站的 Logo 图标？</p><ul><li><p>在目标网站的首页网址后加上<code>/favicon.ico</code>并敲下<code>Enter</code>，可以得到近 90%网站的 Logo 图标。</p></li><li><p>也可以按下<code>Ctrl + U</code>打开网页源码，按下<code>Ctrl+ F</code>搜索<code>ico</code>、<code>logo</code>、<code>.png</code>等关键词，可找到 Logo 链接。</p><blockquote><p>这俩方法下来，几乎绝大多数网站的 Logo 不在话下</p></blockquote></li></ul></li><li><p>打开命令行<code>cmd</code>快捷方法：</p><p>直接在文件地址栏输入<code>cmd</code>并敲下<code>Enter</code>即可打开命令行</p></li><li><p>加快<code>git clone</code>下载速度：</p><p>只需在<strong>HTTPS 型</strong>仓库 Git 地址里的<code>github.com</code>后加<code>.cnpmjs.org</code>，不出意外下载速度会很快。</p></li></ol><p><a href="/posts/61c6c2e8/#%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B">👈 返回【搭建教程】</a></p><br><h2 id="可能有的八阿哥"><a href="#可能有的八阿哥" class="headerlink" title="可能有的八阿哥"></a>可能有的八阿哥</h2><ul><li><p>网址图片可能会加载不出来</p><p>打开<code>&lt;BlogRoot&gt;\themes\webstack\_config.yml</code>填入以下代码：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">custom:</span><br><span class="line">  head: # 以下内容插入到&lt;head&gt;&lt;/head&gt;标签内，可设置多行，注意每行开头至少四个空格</span><br><span class="line">  body: # 以下内容插入到&lt;/body&gt;标签之前，可设置多行，注意每行开头至少四个空格</span><br><span class="line"><span class="addition">+   &lt;script src=&quot;&lt;FilePath_lozad.min.js&gt;&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><details ><summary> 碎碎念，处理Bug时的心路历程 </summary>              <div class='content'>              <p>其实我自己在没有教程的情况下能搭建成功网址导航，至少对于刚上道的我来说很骄傲自豪的，但谁 tm 又能想得到，在摸爬滚打的过程中，突然遇到网址图片显示不出来的问题，于是我疯狂百度，也问了很多使用过的博主，都说其他网站可能存在防盗链机制，大致意思是有这个机制的网站，它的图片链接只在自己网站可显示，放其他网站是无法使用的。但当我将所有图片换成我自己仓库的图片时，仍显示不出图片，所以问题不一定出现在图片链接上，也可以说我收藏的那些网站根本没有开防盗链机制。</p><p>于是我花了一周时间找原因，源码对比测试。这一周中，有很多离谱的情况发生，我用<a href="https://dh.xiaokang.me/">小康</a>的源码，图片可以正常显示，但我的就不行，于是我一点一点将他的代码的改成我的，目的是为了找到问题出现在哪一块，但就是找不到问题出现的原因。更离谱的是，经过几天的测试后，我放弃了各种推断，再次全部使用小康的源码准备重新找原因的时候，结果连小康图片都不显示了，那为什么我最开始用他的源码就可以？就在昨天，我又双叒叕用他的源码再次部署到 GitHub 上，再将我的<code>index.html</code>代码和小康的对比，终于发现了原因！我发现我的<code>index.html</code>最后几行缺少<code>lozad.min.js</code>文件的引入，lozad 应该是起图片懒加载的作用，你这就以为我找到了罪魁祸首？真相大白了？我 tm 寻思<code>&lt;BlogRoot&gt;\themes\webstack\_config.yml</code>文件里明明有将这个 js 文件导入，为什么最后生成的 html 文件却没有导入，我此时摸着我凉秃秃的头顶百思不得其姐，现在等于说我已找到了问题和解决方案，只是不知道问题出现的原因，知道原因的小伙伴赶紧留言评论，好让我 s 心。最后十分感谢并墙裂推荐<a href="https://www.diffchecker.com/">Diffchecker</a>这个贼好用的代码对比网站，不然可能会浪费我更多的时间，毕竟我已经和这个问题杠上了一周，真是心痛我宝贵的寒假时光 😭，不过结果是好滴。</p>              </div>            </details><br><h2 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/114195340">GitHub Pages + Hexo 免费搭建个人博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/183977963">一个账号如何使用多个 GitHub Pages</a></li><li><a href="https://blog.csdn.net/u014135752/article/details/79951802">如何将本地项目上传到 Github</a></li></ul><h3 id="额外推荐"><a href="#额外推荐" class="headerlink" title="额外推荐"></a>额外推荐</h3><ul><li><p><a href="https://www.heson10.com/posts/46324.html">为 Hexo 博客建立其他主题分站</a></p><blockquote><p>这里推荐黑石大佬写的教程，主要是教你如何做<strong>博客分站</strong>。目前我导航的网址是<a href="https://navi.hassanwong.top，若我使用了该教程，那么搭建完毕就可以通过">https://navi.hassanwong.top，若我使用了该教程，那么搭建完毕就可以通过</a> <a href="https://hassanwong.top/navi/">https://hassanwong.top/navi/</a> 来访问，请自行去尝试哦，我已经不想再折腾了。</p><p>Q：博客分站 Or 二级域名？</p><p>A：博客分站优点是不用再创建新仓库，缺点是每次更新时需要将部署好的静态文件迁移到博客中；而二级域名就相反。具体选择自己做取舍。</p></blockquote></li></ul><br><blockquote><p><strong>结束语：</strong></p><p>有什么问题、好的建议、或链接失效请留言哦~</p><p>第一次写教程请多多指教阿里嘎多</p><p>最后如果本篇对你有帮助，请一键三。。。哦不对，留留言，给个 🍭 也是可以的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💻实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 📝前端 </tag>
            
            <tag> 🔹Hexo </tag>
            
            <tag> 👾GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思考试题型&amp;答题技巧</title>
      <link href="posts/3ce75aa2/"/>
      <url>posts/3ce75aa2/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>目标</strong>：</p><p>总分7.0，小分6.5以上</p><table><thead><tr><th>听</th><th>说</th><th>读</th><th>写</th><th>总</th></tr></thead><tbody><tr><td>7.0</td><td>6.5</td><td>7.0</td><td>6.5</td><td>7.0</td></tr></tbody></table></blockquote><details green><summary> 历次雅思考试成绩 </summary>              <div class='content'>              <table><thead><tr><th>考试时间</th><th>听</th><th>说</th><th>读</th><th>写</th><th>总</th></tr></thead><tbody><tr><td>2021.9.22</td><td>5.5</td><td>5.5</td><td>5.5</td><td>6.0</td><td>5.5</td></tr></tbody></table>              </div>            </details><h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><h2 id="答案书写"><a href="#答案书写" class="headerlink" title="答案书写"></a>答案书写</h2><p><strong>写答案原则：</strong></p><ol><li><p>答案和录音说的一致，所听即所得</p></li><li><p>听重读，一般重读为答案</p></li></ol><p><strong>一些答案的写法需注意（推荐写法）：</strong></p><p>3.00-5.00</p><p>10-minute walk</p><p>10-litre water</p><blockquote><p>注意：</p><p>题目会明确标明该空填多少词。但容易失分的是，比如有些题目说只能填1个词或1个数字，但是答案有时候会是1个字母加1个数字，这还是算做正确，所以原文中听到字母和数字并存的时候，要考虑下是否都写上去，比如C9T3S4的40题，答案是15 years，也算1个词。</p></blockquote><h2 id="精听"><a href="#精听" class="headerlink" title="精听"></a>精听</h2><p><strong>精听跟读目的：</strong></p><ol><li><p>纠正发音</p></li><li><p>理解出题定位</p></li><li><p>理解改写难点</p></li><li><p>不犯相同错误</p></li></ol><p><strong>精听步骤：</strong></p><ol><li><p>听一遍录音，对答案</p></li><li><p>看错题对应原文答案句</p></li><li><p>错题找到定位和答案出处</p></li><li><p>跟读错题答案句</p></li></ol><p><strong>精听跟读：</strong></p><ol><li><p>先做题再精听</p></li><li><p>只精听错题答案处</p></li><li><p>听不出练跟读</p></li></ol><p><strong>通用原则：</strong></p><ol><li><p>rather than 后的都不选/写</p></li><li><p>表示<strong>结论性</strong>的词或<strong>转折词</strong>后面是答案（So, However…）</p></li></ol><p><strong>需要首字母大写的词：</strong></p><p>地址，人名，月份，星期，国家等等。</p><h2 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h2><h3 id="主观题"><a href="#主观题" class="headerlink" title="主观题"></a>主观题</h3><ul><li>信息表格题</li><li>填空题</li><li>提纲题</li><li>简答题</li><li>短文填空</li><li>地图题</li><li>流程图题</li></ul><p><strong>填空题（主观）规律：</strong></p><ol><li><p>根据空格前后的词，来预测答案的词性和内容</p></li><li><p>注意原文和题干的同义替换</p></li></ol><h3 id="客观题"><a href="#客观题" class="headerlink" title="客观题"></a>客观题</h3><ul><li>单选</li><li>多选</li><li>搭配题 1</li><li>搭配题 2</li></ul><p><strong>选择题（客观）规律：</strong></p><ol><li><p>不选反常识的选项</p></li><li><p>速记答案用缩写形式（有时间可以全写）</p></li><li><p>正确的选项通常是对题干的同义替换</p></li></ol><p><strong>雅思 A 类听力评分标准对照表：</strong></p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210405/posts/IELTS_Skill_Note/IELTS-ScoringTable.png" alt="雅思A类听力评分标准对照表" style="zoom:120%" /><br><h1 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h1><h2 id="考试流程介绍与攻略"><a href="#考试流程介绍与攻略" class="headerlink" title="考试流程介绍与攻略"></a>考试流程介绍与攻略</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>考官会先让你坐下来，问你身上有没有电子设备，再问你的名字、查看身份证以核对考生信息，最后 Ta 会说考试正式开始。时长1分钟左右。</p><h3 id="Part1"><a href="#Part1" class="headerlink" title="Part1"></a>Part1</h3><p><strong>介绍</strong>：这个部分一般问些较简答的问题，内容比较个人化，包括吃穿住行、爱好、家乡、学习、工作、娱乐、运动、媒体、网络、送礼等等。时长 3~5 分钟。</p><p>有几点需注意：</p><ol><li>回答一般要简单，由<u>2~3 句话</u>组成</li><li>第一句话需<u>直接回答题目</u>，最好出现<u>题目关键词</u>，再来简单解释原因做适当延伸</li><li><strong>不要</strong>过分套模板、用过于正式的语言、追求复杂语法，迅速回答问题即可</li><li>不会回答<u>直接说不知道</u>等等类似表达，不能保持沉默，尽量说出看法观点</li></ol><h3 id="Part2"><a href="#Part2" class="headerlink" title="Part2"></a>Part2</h3><p><strong>介绍</strong>：这部分需要考生就一道题目做一个小演讲，讲故事。时长不到2分钟。</p><p>主题：</p><ul><li>旅游</li><li>人物性格</li><li>课外活动</li><li>餐厅美食</li><li>高科技产品</li><li>衣服类</li></ul><h3 id="Part3"><a href="#Part3" class="headerlink" title="Part3"></a>Part3</h3><p><strong>介绍</strong>：这一部分考官会问大概 4~5 个问题，每个问题需要你详细回答，有点类似于雅思大作文。</p><p>答题框架：</p><ol><li>what 观点</li><li>why 原因</li><li>details 细节</li></ol><h2 id="评分标准"><a href="#评分标准" class="headerlink" title="评分标准"></a>评分标准</h2><blockquote><p>四个维度各占25%的分数</p></blockquote><h3 id="Pronunciation-发音"><a href="#Pronunciation-发音" class="headerlink" title="Pronunciation 发音"></a>Pronunciation 发音</h3><p>语速自然，保持流利，发音清晰，但不要过分在意自己口音问题，英式美式都可以。</p><blockquote><p>Q：我有中国口音啷个办嘛？</p><p>A：我想说稍微带点中国口音问题不大，当然至少要保证单词不能读错，连读、弱读、省读、停顿、重音要注意。</p><p>Q：选择美式还是英式口音？</p><p>A：首先美式在全球是通用的，相当于普通话，而英式相当于方言（不仅是我的观点，很多雅思老师也是这么认为，杠就是你对dog.jpg）。如果你选择考雅思and在英国留学或生活and目前不知道选择什么口音去学习，那我建议首选英式。如果你喜欢美式发音但又想去英国，那么直接用美式这是可以的，像我就是这种情况，而且老外都听得懂，官方评判标准没有哪一项提到必须使用英式或美式，而且我看过的雅思教学视频大都是美式发音。</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h3 id="流利"><a href="#流利" class="headerlink" title="流利"></a>流利</h3><h3 id="语料"><a href="#语料" class="headerlink" title="语料"></a>语料</h3><p>句子的长度，内容的丰富</p><h2 id="小贴士"><a href="#小贴士" class="headerlink" title="小贴士"></a>小贴士</h2><ul><li>如果你目标是6分，你不需要说太复杂的英语——只是不要在简单的英语中犯错。</li><li>不要尝试在考试中使用新词，只使用你确定的单词和短语。</li><li>考官不太会评判你的故事是怎样的，以及真实性，他们只在乎你的口语能力，能不能说出来，说的怎样</li><li>多说多练，不要光看光听</li></ul><h2 id="如何备考当季的Topics？"><a href="#如何备考当季的Topics？" class="headerlink" title="如何备考当季的Topics？"></a>如何备考当季的Topics？</h2><p>其实我不太建议，你专门把所有的topic答案写下来。首先你把所有的答案写下来会非常的浪费时间，你可以这么去设想，当你考试的时候，你还在那回忆你当时写了些什么，背了些什么，但是你要知道，在那个过程中，你往往会有一些其它的杂念，其他的ideas，这种情况下，那些杂念会让你忘掉你之前所记的一些东西，对于口语考试来说只会是一种阻拦，只会让考试变得困难。所以我想给的建议是，你拿到当季所有的topics后，你首先得把每一个topics在脑子里面过一下，你有哪些想法、你有哪些好的点子、你有哪些想说的，立刻用中文或者是用词伙的方式记录在文档里面，最好别写完整的英文句子，因为你会不自主的去把它一字不漏的背下来。建议的做法是，你每次去练习的时候，你就去记背那些ideas就好了，这样你考试中就不会因为你漏掉了之前所准备素材中的一两句话而紧张。其实口语它看中的是你脑子里面有哪些想法，有哪些东西，有哪些故事是可以分享出来的，如果仅仅是靠背的话，我相信，一百个人中估计不到两个人能全部把自己写的都背下来，所以说作为一个普通人，你就好好的去记一些点，每次练习的时候，就把那些点子给串起来，如果串的不好，在练习的过程中，可以来第二次，第三次，无数次，直到你练熟这个topic为止。这样你在考试的过程中遇到考官问的题目，你脑子里面会是很多ideas，而且你也知道有ideas了后，该如何去运用你的逻辑，用一些漂亮的表达，把它给串起来。而且同时这样也锻炼了你的随机应变能力，因为你完全不知道考官的下一个问题有多么陌生多么奇葩。</p><p>总而言之，先准备一个文档，将所有topic放进去，再来写自己的ideas，练习过程中再去完善内容（hint）。</p><p><strong>想了解更多关于雅思口语，可以看我的口语笔记</strong>👇</p><div class="tag link"><a class="link-card" title="雅思口语笔记" href="https://hassanwong.top/64250e44/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/avatar_blog.jpg"/></div><div class="right"><p class="text">雅思口语笔记</p><p class="url">https://hassanwong.top/64250e44/</p></div></a></div><br><h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><blockquote><p>主要考同义词替换</p></blockquote><h2 id="做题顺序"><a href="#做题顺序" class="headerlink" title="做题顺序"></a>做题顺序</h2><p>先浏览3篇阅读，根据题型<strong>先易后难</strong>地去做。</p><p>因为雅思阅读和其它类型考试不一样，它是看你40道题做对了多少道，所以在一样分值的情况下，优先做简单的。</p><h2 id="定位词"><a href="#定位词" class="headerlink" title="定位词"></a>定位词</h2><p><strong>概念</strong>：具有实际意义的词，不抽象</p><p><strong>重点知识</strong>：</p><ol><li>拒绝猜测和推理，讲究实证，一一对应</li><li><u>数字</u>和<u>大写</u>字母周围出现考点的概率最大</li><li>无论是什么词性，只要能表达实际意思，它都是定位词</li><li>否定和双重否定要注意</li><li>定位词不止一个</li></ol><p><strong>什么样的词不能当定位词</strong>？</p><ol><li>大标题、副标题</li><li>重复率较高的词（原文、题目）</li></ol><h2 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h2><ol><li><strong>顺序原则</strong>！！！</li><li>出题范围不稳定，可能一个段落，可能全文</li></ol><h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><ol><li>题目是原文一句话的同义替换改写</li><li>题目是原文信息的归纳理解（一句话/相邻句子）</li></ol><h4 id="FALSE"><a href="#FALSE" class="headerlink" title="FALSE"></a>FALSE</h4><ol><li><p>题目和原文出现反义词</p></li><li><p>题目中描述的信息或关系与原文汇总描述的不一致</p><p> 比如她哥叫 Hassan ，题目说她哥叫Mike，这就是描述不一致，故选FALSE；如果原文没有提到她哥叫什么，则选NOT GIVEN。</p></li></ol><h3 id="做题技巧"><a href="#做题技巧" class="headerlink" title="做题技巧"></a>做题技巧</h3><ol><li><p><strong>读题目，找判断依据</strong>（一道题只有一个判断依据）</p><p> 比如：绝对性词语、序数词、对比关系、因果关系、动词关系</p></li><li><p><strong>根据定位词找对应原文</strong></p><p> 定位词要在除了判断依据之外的句子内容里找，因为判断依据不一定是正确的，不能做为定位词</p></li></ol><h3 id="雕虫小技"><a href="#雕虫小技" class="headerlink" title="雕虫小技"></a>雕虫小技</h3><ol><li><p>可以简写为<strong>T/F/NG</strong>，三种答案数量有规律</p><p> TRUE ≥ FALSE &gt; NOT GIVEN</p><table><thead><tr><th>总题数</th><th>T、F、N 分布</th></tr></thead><tbody><tr><td>3</td><td>1，1，1</td></tr><tr><td>4</td><td>2（T，F），1，1</td></tr><tr><td>5</td><td>2，2，1</td></tr><tr><td>6</td><td>3（T，F），2，1<br>2，2，2</td></tr></tbody></table></li><li><p>做题的同时找两个题<code>目的答案</code>，因为通常两个题目都在一个地方，且防止NOT GIVEN题使你难找到位置</p></li><li><p>不要在判断题当中单独使用数字定位</p></li><li><p>一般带有 only 词选 FALSE</p></li><li><p>一般带有 may / could be 等不确定词语，都选 TRUE</p></li></ol><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h2><ol><li>读题目，划出题目若干定位词</li><li>根据定位词定位到原文，确定范围区间</li><li>根据空格前后词来帮助你找到答案</li><li>答案形式（除了有选项的summary，答案都是原文原词）</li></ol><h2 id="Summary题"><a href="#Summary题" class="headerlink" title="Summary题"></a>Summary题</h2><ol><li>只读有空格的句子</li><li>如果Summary不是首题，则优先从文章中部开始定位</li></ol><h2 id="图表题"><a href="#图表题" class="headerlink" title="图表题"></a>图表题</h2><ol><li>注意字数限制</li><li>答案为原文原词</li><li>顺序原则，偶尔乱序</li><li>答案集中出现</li></ol><h2 id="问答题"><a href="#问答题" class="headerlink" title="问答题"></a>问答题</h2><ol><li>注意字数限制</li><li>特殊疑问词</li><li>顺序原则</li><li>出题范围不稳定性</li><li>除了专有名词外，不需要大写</li></ol><h2 id="匹配题"><a href="#匹配题" class="headerlink" title="匹配题"></a>匹配题</h2><p>乱序（打包定位）</p><h3 id="匹配方式"><a href="#匹配方式" class="headerlink" title="匹配方式"></a>匹配方式</h3><ol><li>原词匹配</li><li>同义词匹配</li><li>具体匹配（抽象匹配）</li></ol><h3 id="题型组合"><a href="#题型组合" class="headerlink" title="题型组合"></a>题型组合</h3><ol><li>段落匹配（paragraph matching）</li><li>选项匹配</li><li>顺序细节题</li></ol><h3 id="做题方法"><a href="#做题方法" class="headerlink" title="做题方法"></a>做题方法</h3><ol><li>文章读第一遍</li><li>通过选项打包定位（选项匹配）</li><li>如果有几个类型的匹配题，就一起做，文章尽量只看一遍</li></ol><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><h3 id="单选题"><a href="#单选题" class="headerlink" title="单选题"></a>单选题</h3><p>主旨题，直接看文章末尾</p><h3 id="单选组合题"><a href="#单选组合题" class="headerlink" title="单选组合题"></a>单选组合题</h3><p>顺序原则</p><ol><li>打包题干</li><li>文章定位</li><li>对比选项（同义替换，归纳理解）</li><li>排除法</li></ol><blockquote><p>先根据题干定位词定位，再逐个对比选项</p></blockquote><h3 id="多选题"><a href="#多选题" class="headerlink" title="多选题"></a>多选题</h3><ol><li>具体定位</li><li>原文定位</li><li>并列关系</li><li>同替选项</li></ol><h2 id="雅思-A-类阅读评分标准对照表（同听力）："><a href="#雅思-A-类阅读评分标准对照表（同听力）：" class="headerlink" title="雅思 A 类阅读评分标准对照表（同听力）："></a>雅思 A 类阅读评分标准对照表（同听力）：</h2><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210405/posts/IELTS_Skill_Note/IELTS-ScoringTable.png" alt="雅思A类听力评分标准对照表" style="zoom:120%" /><br><h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><table><thead><tr><th>学术类（Academic）</th><th>类型</th><th>字数</th><th>时间分配</th></tr></thead><tbody><tr><td>Task1（小作文）</td><td>图表作文</td><td>150 words</td><td>20 min</td></tr><tr><td>Task2（大作文）</td><td>大作文</td><td>250 words</td><td>40 min</td></tr></tbody></table><h2 id="大作文"><a href="#大作文" class="headerlink" title="大作文"></a>大作文</h2><h3 id="评分标准-1"><a href="#评分标准-1" class="headerlink" title="评分标准"></a>评分标准</h3><p>7分要求👇</p><h4 id="Task-Response（写作任务回应）"><a href="#Task-Response（写作任务回应）" class="headerlink" title="Task Response（写作任务回应）"></a>Task Response（写作任务回应）</h4><p>能够与题目内容相对应，作文论述过程始终围绕一个清晰的立场，给出主要论点后要进行论证和拓展</p><h4 id="Coherence-and-Cohesion（连贯和连接）"><a href="#Coherence-and-Cohesion（连贯和连接）" class="headerlink" title="Coherence and Cohesion（连贯和连接）"></a>Coherence and Cohesion（连贯和连接）</h4><p>行文要有逻辑，恰当使用一系列连接词，每个段落均有一个清晰的中心主题</p><h4 id="Lexical-Resources（词汇丰富程度）"><a href="#Lexical-Resources（词汇丰富程度）" class="headerlink" title="Lexical Resources（词汇丰富程度）"></a>Lexical Resources（词汇丰富程度）</h4><p>使用足够的词汇，体现一定灵活性以及准确性。使用一些较高级词汇，对词伙有一定认识</p><h4 id="Grammatical-Range-and-Accuracy（语法多样性及准确性）"><a href="#Grammatical-Range-and-Accuracy（语法多样性及准确性）" class="headerlink" title="Grammatical Range and Accuracy（语法多样性及准确性）"></a>Grammatical Range and Accuracy（语法多样性及准确性）</h4><p>能够运用各种复杂语法写出准确无误的句子</p><h3 id="段落介绍"><a href="#段落介绍" class="headerlink" title="段落介绍"></a>段落介绍</h3><p>大作文一般4~5段，不需要写标题。</p><table><thead><tr><th>段落</th><th>句数</th></tr></thead><tbody><tr><td>开头段</td><td>1~2句，不超过3句</td></tr><tr><td>主体段</td><td>若2段，则每段5句左右<br />若3段，则每段3~4句左右</td></tr><tr><td>结尾段</td><td>1~2句（时间不够，可以不写）</td></tr></tbody></table><h3 id="如何分步骤写？"><a href="#如何分步骤写？" class="headerlink" title="如何分步骤写？"></a>如何分步骤写？</h3><p>第一步，先审题，看题目主要讨论的观点是什么，确定题目关键词，全文要不断地去扣题</p><p>第二步，在草稿纸上写你的观点</p><p>第三步，写开头段，第一句可以改写题目。第二句是给出你的全文核心观点</p><p>第四步，写主体部分</p><p>第五步，写结尾部分，总结立场，观点无需全部总结，用词不要重复，更不要加入新的内容和信息</p><h3 id="agree-or-disagree"><a href="#agree-or-disagree" class="headerlink" title="agree or disagree"></a>agree or disagree</h3><p><strong>行文流程1</strong>：</p><p>首段：一部分人观点为xxx，另一部分人观点为xxx，我的观点是xxx（但开头千万不要说解决措施，不然结尾没有内容写）</p><p>第二段：反方观点是合理的（一定要详尽，因为xxx会导致xxx所以会xxx，在这种情况下会xxx）</p><p>第三段：阐述自己的观点（同样，一定要详尽，因为xxx会导致xxx所以会xxx，在这种情况下会xxx）</p><p>第四段：提出自己的解决措施（多角度、多主体，如政府、相关部门、媒体、个人本身）</p><p>尾段：重复自身观点</p><p><strong>行文流程2</strong>：</p><p>首段：背景+立场</p><p>第二段：正方观点1（好处1）</p><p>第三段：正方观点2（好处2）</p><p>第四段：反方观点是合理的（坏处）</p><p>尾段：同上（尽管xxx，但xxx）</p><h3 id="only-way-best-way"><a href="#only-way-best-way" class="headerlink" title="only way | best way"></a>only way | best way</h3><p>这种题型一般是问行为A是不是结果C的 only way | best way，可以讨论<u>A导致C能或不能</u>，给出原因和理由，也可以讨论 <u>only way | best way</u>，如果不是唯一方式/最好方式，那还有哪些方式，可以继续延伸</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>不要使用缩写，比如将<code>It is</code>写成<code>It&#39;s</code>；<code>I am</code>写成<code>I&#39;m</code>；<code>That is</code>写成<code>That&#39;s</code>等</li></ol><p><strong>可以看看我的写作笔记，内含我积累的写作套词套句</strong>👇</p><div class="tag link"><a class="link-card" title="雅思写作笔记" href="https://hassanwong.top/b6074994/"><div class="left"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/avatar_blog.jpg"/></div><div class="right"><p class="text">雅思写作笔记</p><p class="url">https://hassanwong.top/b6074994/</p></div></a></div><h2 id="小作文（图表类）"><a href="#小作文（图表类）" class="headerlink" title="小作文（图表类）"></a>小作文（图表类）</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>雅思常规图表作文（涉及数据描述）常会出现四种图，分别是<strong>线图</strong>（line graph）、<strong>饼图</strong>（pie chart) 、<strong>柱状图</strong>（bar chart）和<strong>表格</strong>（table）</p><p>另外还有两种非常规图表题（一般不涉及数据）是<strong>流程图</strong>（flow chart）和<strong>地图</strong>（map）。这两种图在过去两年大量出现，考生不能忽视。</p><h3 id="评分标准-2"><a href="#评分标准-2" class="headerlink" title="评分标准"></a>评分标准</h3><p>7分要求👇</p><h4 id="Task-Achievement（写作任务实现）"><a href="#Task-Achievement（写作任务实现）" class="headerlink" title="Task Achievement（写作任务实现）"></a>Task Achievement（写作任务实现）</h4><p>清晰地呈现关于主要趋势、对比的信息或不同阶段的概述，呈现与强调<strong>主要内容</strong></p><h4 id="Coherence-and-Cohesion（连贯和连接）-1"><a href="#Coherence-and-Cohesion（连贯和连接）-1" class="headerlink" title="Coherence and Cohesion（连贯和连接）"></a>Coherence and Cohesion（连贯和连接）</h4><p>符合逻辑地组织信息及观点，恰当使用一系列衔接手段</p><h4 id="Lexical-Resources（词汇丰富程度）-1"><a href="#Lexical-Resources（词汇丰富程度）-1" class="headerlink" title="Lexical Resources（词汇丰富程度）"></a>Lexical Resources（词汇丰富程度）</h4><p>使用足够的词汇，体现一定灵活性以及准确性。</p><h4 id="Grammatical-Range-and-Accuracy（语法多样性及准确性）-1"><a href="#Grammatical-Range-and-Accuracy（语法多样性及准确性）-1" class="headerlink" title="Grammatical Range and Accuracy（语法多样性及准确性）"></a>Grammatical Range and Accuracy（语法多样性及准确性）</h4><p>能够运用各种复杂语法写出准确无误的句子</p><h3 id="必背词汇"><a href="#必背词汇" class="headerlink" title="必背词汇"></a>必背词汇</h3><h4 id="动名词"><a href="#动名词" class="headerlink" title="动名词"></a>动名词</h4><table><thead><tr><th>趋势</th><th>动词（图表作文大多数都是过去式）</th><th>名词</th></tr></thead><tbody><tr><td>上升</td><td>increased, rose, climbed, grew</td><td>rise, increase, growth</td></tr><tr><td>下降</td><td>dropped, fell, declined, decreased</td><td>drop, fall, decline, decrease</td></tr><tr><td>保持不变</td><td>stood at this level，remained virtually unchanged at this level</td><td></td></tr></tbody></table><h4 id="形容词"><a href="#形容词" class="headerlink" title="形容词"></a>形容词</h4><p>slight，gradual，steady，noticeable，rapid，sharp</p><h4 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h4><p>slightly，gradually，steadily，noticeably，rapidly，sharply</p><h3 id="必背套句"><a href="#必背套句" class="headerlink" title="必背套句"></a>必背套句</h3><h4 id="线图、饼图"><a href="#线图、饼图" class="headerlink" title="线图、饼图"></a>线图、饼图</h4><ol><li>… during the period 2000 to 2021</li><li>… rose/fell from around 5.5 in 2020 to about 6.5 in 2021, and then stood at this level until 2022</li><li>… saw a steady growth from xxx to xxx</li><li><strong>overall</strong>, …</li></ol><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>若考场时间不够，<u>结尾段可以写在开头段之后</u>，结尾段不写的话，分数直接掉到5分</li><li>结尾段不要出现数据</li><li>不要揣测数据变化原因，也不要给建议，客观描述图表呈现出的结果</li></ol><br><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
            <tag> 🦆雅思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年度总结&amp;2021新年计划</title>
      <link href="posts/d5180487/"/>
      <url>posts/d5180487/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>背景：</strong></p><p>2020 年初的时候看<a href="https://www.bilibili.com/video/BV1vJ411L7NA">ycr 哥哥</a>的视频，萌生了写年度计划的想法，于是乎就行动了，第一次接触 Xmind 软件不得不说炒鸡好用，UI 做的很有简约之美。制定 2020Target 的时候距离现在也差不多一年了，得做做年终总结和写写新年计划了！</p></blockquote><div class='poem'><div class='poem-title'>元日</div><div class='poem-author'>[宋] 王安石</div><p>爆竹声中一岁除，<br>春风送暖入屠苏。<br>千门万户曈曈日，<br>总把新桃换旧符。</p></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">诗词有字显示有误？  </button><span class="hide-content">千门万户曈曈日（“曈”是罕见字，一般的“艺术”字体显示有误，如果你这显示有误，可能是网页没有完全加载完毕，它用的是原始字体，以至于我预设的字体没加载出来，在刷新完毕之前先看看本篇博客叭~）</span></span><h2 id="🐭-回顾-2020"><a href="#🐭-回顾-2020" class="headerlink" title="🐭 回顾 2020"></a>🐭 回顾 2020</h2><p>2020 真是多灾多难、光怪陆离的一年。20 年一月初的我，满怀信心的写下了新年计划，之后便目睹了一连串的热搜新闻席卷而来，先是疫情爆发，二是科比坠机逝世等爆点新闻，2020 的开场白实在是不堪入目，为整个 2020 奠定了不详的基调，好在国家的强大，几个月内就基本控制住了疫情，接下来的热搜新闻就是国外各种各样刷新三观的疫情相关操作，川建国同志最为代表人物，承包了我一年的笑点与恨点，近几周，新闻宣称拜振华同志当选为美国总统，我直接好家伙 😂。至于我呢，一整年下来，有进步的地方，也有做的不到位的地方，所以接下来分析分析、总结总结。之前原本想拍个总结视频水下 B 站，毕竟我这不是一年多没有发视频了吗？现在我还不是特别自信，也没预先准备好，最后发了也没人看，羞，决定今年就不拍了，用博客记录也挺好。我觉得以后留学、工作有时间做做兼职 UP 主也是挺好的，我拍摄剪辑技术可不能白白浪费 🤦‍。So, let’s get started!</p><p>根据 2020Target 各大板块逐步分析总结：</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210401/posts/2020Summary&2021Target/2020Target.png" alt="2020Target"></p><p>去年总共写了 8 大板块——”<strong>健康</strong>“、”<strong>学习</strong>“、“<strong>活动</strong>”、“<strong>收入</strong>”、“<strong>情感</strong>”、”<strong>外延与内涵</strong>“、“<strong>视频</strong>”和“<strong>音乐</strong>”。</p><h3 id="💪-健康"><a href="#💪-健康" class="headerlink" title="💪 健康"></a>💪 健康</h3><p>首先谈谈第一个板块<strong>健康</strong>。大概是每天要健健身，包括仰卧起坐和举哑铃，乍一看安排的还不戳，如果能够顺利执行，现在肌肉应该粗了一圈吧？😟 这不好笑，喜欢健身的朋友们<del>可能</del>肯定会觉得我这个健身计划没卵用，那为什么我还执意去写呢？因为自己没有花时间去研究合适的锻炼方式，当然计划还是要有的，只是执行力得跟上，现在重心还是过多的放在了学习和爱好上，有时候容易忽视自己的身体健康。2020 上半年在家的时候我还是有刻意的去锻炼，家里买了 2 个瑜伽垫，目的肯定不是练瑜伽 😂，而是做做仰卧起坐、平板支撑和俯卧撑之类的，我练的很随性，没有特别规律，下半年到学校后，每天基本上与健身无缘，几乎天天泡在图书馆，<del>摸鱼</del>。所以，新的一年得继续执行健身计划，从小做起，一点点加大力度。然后是营养方面，每天喝充足的水，每餐要多吃。水的话，在家里喝的少，我家里人不喜欢用饮水机，得自己去院子里打饮用水，然后回来还要再烧开一下，我们家这是何苦呢？每次喝个水特麻烦 🙂，于是无形之中水就喝的少一些，当然了，懒是原罪，我无话可说。。<del>一万个好家伙飞过来</del>，在学校我的每日水量还是挺正常，想喝水随时随地打。然后，2020 计划有提到每餐要多吃，是因为我偏瘦型身材，原本是希望从 140 斤涨到 155，而现在是 145，其实有一段时间到过 150，害，算是小有进步 🙃。最后，睡觉方面，原本希望自己早睡早起，但结果天天翻车，不过在学校情况良好，一回家就乱了套 🙃，心口在滴血。</p><h3 id="✍-学习"><a href="#✍-学习" class="headerlink" title="✍ 学习"></a>✍ 学习</h3><p>第二大板块<strong>学习</strong>，英语方面，六级第一次考了没过，第二次感觉做的比第一次好，但是对完答案，还是感觉小命难保，<del>skr</del>（目前没出分，2 月出），我这是何苦呢？费很多时间去准备结果就这，真该听哥哥姐姐的建议，先准备雅思，两者并不冲突。然后词汇量方面，近几周测了几次，差不多有个 8000，口语方面，记得年初脑子一热，看了北外的口语网课，掌握了一点点知识吧，当然还不够系统，其实不如直接准备雅思，你说这是何苦呢？🙃 属实浪费时间。然后该谈谈我将来的饭碗 - 计算机，计划写着掌握算法、Java、Python，说实话，感觉一直没入门，本人比较浮躁，沉不下心来学习钻研，然后我学的东西比较杂，不成体统，当然还得靠自己慢慢来吧。成绩方面，我本学期还行，应该能达到目标，但是水课成绩普遍比学位课高，到最后绩点还是得看学位课，我大一下和大二上的成绩给我拖了很多后腿，总体绩点想提上来的确很难，得加把劲咯，为了 Family，更为了至己。当然咯，绩点其实不重要，学到真材实料才是真，但留学还是要看绩点的鸭 🙃。。自控方面，每周有坚持写总结，除了偶尔几周，当然这不重要，重要的是每周的自己不一样，<del>我这口气好像做传销的 bushi</del>，对自己狠一点，拒绝拖延和提高效率还有待加强，<del>大佬莫笑</del>。证书方面，驾照一月初就拿了，四级也过了，六级观望中，蓝桥杯省一，软考没有报名，<del>嫌自己太菜</del>，在老师的带领下，还拿了证券投资模拟大赛国二，算是在金融领域沾了个边，从一开始的梭哈，到如今的智慧投资，算是懂了点皮毛，但现实生活中投资需谨慎 😂。现在回顾以往，其实我追求的这些证书轻如鸿毛，只是学习过程中顺手牵的羊，该拿的还是得拿，学到真功夫才是真。技能方面，上半年在小姨家学过烘焙，一下午时间就做了肉松海苔小贝、红豆蛋挞两个甜点 - 真滴很好吃，这也不算是掌握了烘焙这门技能，只是上手很容易，还是在小姨的耐心指导下完成的，学完就忘了一半，以后自己在外独立生活，这些烘焙技术得学会！除了烘焙技能，还有搭建博客，<del>这也不算是技能</del>，您现在所看到的博客网站是我按照教程一点点搭建出来的，DIY 了数月，算是掌握了吧，<del>大佬轻喷</del>，没有掌握的技能有建站和烹饪，在此说明下建站和搭建博客网站不太一样（博客框架是大佬开发的，我的工作只是使用此框架来上传博客和自定义美化它，相对于建站要简单很多）。2021 再接再厉，<del>大佬轻喷 Orz</del>。。</p><h3 id="🎈-活动"><a href="#🎈-活动" class="headerlink" title="🎈 活动"></a>🎈 活动</h3><p>第三大板块<strong>活动</strong>，写这一板块的目的是希望能够拿更多的学分吧，谁还不是学分狗呢？<del>好像只有我</del>🙃。现在即将大三下了，一些扯淡的活动直接甩到九霄云外，不值得，不如多参加竞赛，提升自己学科能力。</p><h3 id="💴-收入"><a href="#💴-收入" class="headerlink" title="💴 收入"></a>💴 收入</h3><p>第四大板块<strong>收入</strong>，下半年拿了三等奖学金，说实话不得不感慨班上大佬太多了，本以为自己的综测分很高，结果发现还有更高的，还高的离谱，这还是人吗？当然了，还是得说一句，综测分不重要，学到真本事才是真。年初的时候，给熟人家孩子补过习，赚了一点 mula，emmm 海星，<del>大佬莫笑</del>。大学这个阶段本人认为，收入是次要的，以后出来混，<del>混出来了</del>，月薪可抵大学 4 年赚的，<del>传统功夫点到为止。</del></p><h3 id="💜-情感"><a href="#💜-情感" class="headerlink" title="💜 情感"></a>💜 情感</h3><p>第五大板块<strong>情感</strong>，小脸突然一红 😳，有点羞耻，世上哪有什么 Ms. Right，俺只配活在梦境里（苦笑.jpg）。一本正经地说，谈恋爱不应该成为目标，不能为了谈而谈，这个东西还得随缘，是对她未来的负责也是对自己未来的负责。To be honest，其实我已降低了无数门槛与标准，但难以找到自己十分钟意的，可能井底蛙本蛙得出去看看大世界了，当然，我自身肯定有一些不足之处，比如不主动，双商堪忧等等，有时候我又把不主动归结于自己没有十分的满意，其实，不断提高充实自己才能找到 better one，这点永不过时。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">点击查看广告  </button><span class="hide-content">（关注我公众号可以通过聊天问出我相关问题的回答，能否触发我后台预设的问题，看你自己怎么问哦hh，注意用第二人称）</span></span></p><h3 id="😀-外延与内涵"><a href="#😀-外延与内涵" class="headerlink" title="😀 外延与内涵"></a>😀 外延与内涵</h3><p>第六大板块<strong>外延与内涵</strong>，外延方面，希望能干干净净，彬彬有礼，不吐芬芳，<del>这是什么奇怪的人设</del>。其实在家时我比较邋遢和随意，在校时也没有以往那么爱“打扮”，可能是心累了，心思不在穿着打扮上，以前可能觉得整得摔摔七七的很有魅力，现在淡然了许多，我只不过是芸芸众生中普通的那一位，你最多只能当自己心目中的 Superstar。话说回来，这些自我要求还是得执行，让自己感到舒服快乐才是最好的。再来谈谈内涵方面，我心态一直以来比较积极向上阳光开朗，可能有时候容易被失败给绊倒然后质疑自己的能力，处于低迷状态，不过这种事情最后还是烟消云散。“求知若饥，虚心若愚”，这是 Steve·Jobs 的名言，在这一年中，我过于保持饥饿以至于东学西学，到了最后捡了芝麻丢了西瓜，成了个傻瓜，<del>skr</del>，计算机知识实在是太广了，所以得专攻一个自己喜欢的 part。</p><h3 id="📹-视频"><a href="#📹-视频" class="headerlink" title="📹 视频"></a>📹 视频</h3><p>第七大板块<strong>视频</strong>，原本是想继续学习拍摄剪辑技巧，但 2020 上半年由于疫情在家，学生会没有拍摄剪辑的任务，于是我这个部长就只当了半学期，所以这一整年除了纸婚祝福视频好像就没有其它剪辑项目，更别说上传 B 站了，现在想想还真得感谢那 76 个”粉丝“到现在还在关注我，真是泪目了 Orz。2021 年我也不太打算做视频，虽说 To Do List 写了一些视频计划，但我现阶段难以执行，看暑假有没有什么机会出去玩玩？这么一说好几年没有正儿八经的旅游了，说实话旅游 Vlog 也没啥人看，除非自己有人气，但当当自己生活的记录也挺好，万一哪天意外走红？<del>异想天开</del>，还是现在踏踏实实地做好一个普通而不平凡的人叭。</p><h3 id="🎵-音乐"><a href="#🎵-音乐" class="headerlink" title="🎵 音乐"></a>🎵 音乐</h3><p>第八大版块<strong>音乐</strong>，钢琴这一块现在也记不太清自己学了几首歌，其实学到的曲子数量并不重要，开心就好。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">题外话  </button><span class="hide-content">（我的钢琴入门是我哥教的，在学校时我经常会看B站上的零基础视频，放假到家时会捣鼓捣鼓电子琴，说实话，没有专业要求的话钢琴入门真的super简单，只要会点和弦伴奏技巧和有~~亿~~一点点天赋，你能给市面上大多数流行音乐伴奏和演奏，其实不太需要看谱子，当然学习速度和效果还是因人而异吧，至于我，小时候就很喜欢音乐，对音乐各个层次领域的东西都有着持续关注和细微观察，以至于到了大学有充足时间后就疯了似的追求音乐方面的爱好，学琴的速度自然就快一些。好像通过我这一个行为，能悟出一个道理，要想在某一领域出类拔萃，你先得培养你的爱好，平时多思考，学前还得有相关知识的预习hh。像我正儿八经学习钢琴之前，就尝试过分析别人是怎么弹的，会考虑到一首歌的层次结构。其实我小的时候家里就买过电子琴，由于没有人教，就自己一根小指头点来点去，令我印象深刻的是，我当时一根手指弹了汶川大地震时经常放的歌《让世界充满爱》，这一切的一切使我在2年前那个夏天，SkyBro的指导下，半小时内学会了双手合奏《小星星》，我这学习速度令自己都震惊不已，~~低调低调~~，记得前几周我看了刘谦3周自学钢琴的B站视频（BV1Wt4y1r7km），评论区很多网友皆表示不可思议太厉害了，我心想真的没有你们想的那么难😂，可能外行人看门道内行人看笑话吧。其实我学琴前还一直不能理解，一个人的大脑是如何做到让两只手弹不同的音，But now，I've got it and made it!!! 如果有机会有心情，我可能会写我是如何快速上手钢琴的博客，没人看的话就当作自己的记录叭（这是在提前给自己挖坑？hh））</span></span>。然后，谈谈嘻哈这一块，我本人最喜欢的音乐风格是说唱，大概是从 17 年《有嘻哈》开始，在那之前有接触过嘻哈文化，当时只是觉得很酷但不知道那叫嘻哈（嘻哈四大板块：滑板、涂鸦、说唱、街舞），当然我这里只谈说唱，2020 年的计划是创作 2 首歌，但我只写了部分歌词（多个主题的），直到近几周我才考虑制作和发歌的问题，当然发歌只是为了好玩，愉悦自己，若能得到他人的赞美和共情也是我愿意看到的。制作方面的问题，目前也没有时间、金钱、经历和精力去学习正规流程的制作，我现在只能利用库乐队和 AU 来制作，其实库乐队和 AU 对于小白来说够了，库乐队甚至能使用 Auto-Tune 插件，记得当时买到插件的那一刻激动 s 我了，你能想象一个大男人对着 iPad 傻叫，然后监听自己加了 AT 效果的声音，最后边笑边听到自己实时电音效果的笑声后笑的愈演愈烈的场景吗？也许每个喜欢用 AT 的音乐人第一次使用它的场景跟我一样吧？可能只有我一个人私下的 reaction 太浮夸了。。最后，年初之时我还想着提高自己的 freestyle 的能力，可能有些人会问学这有啥用？你这是要参加《新说唱 x》《青你 x》《创 x》么？Nah！Not at all！只是为了愉悦自己，其实有时候在好友面前随便 free 几句还是蛮好玩，能活跃气氛。所以，为了提高 freestyle 能力，我有段时间专门看爆音（我称之为“中国即兴说唱之父”）直播的录播视频，深深佩服于他脑袋瓜的灵活、思维的转换能力、内容素材的丰富和押韵技巧的高超，总之学到了很多技巧和知识。<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #81d8cf;color: #fff">🎵 新歌预告  </button><span class="hide-content">（如果两大平台审核能通过并且不出什么意外的话，2.14号会发首R&B（节奏布鲁斯风格）情歌，寒假结束前会发首Melodic Trap（旋律陷阱音乐））</span></span></p><p>以上就是我对 2020 的总结。</p><h2 id="🐮-展望-2021"><a href="#🐮-展望-2021" class="headerlink" title="🐮 展望 2021"></a>🐮 展望 2021</h2><p>今年的计划与上一年有些许不同，简单说说大致不同和对自己的憧憬吧！</p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210401/posts/2020Summary&2021Target/2021Target.png" alt="2021Target"></p><p>从板块上来说，<strong>健康</strong>板块增加了俯卧撑，虽然去年没有加，但实际上我有在执行这一项，请忽略我的完美主义（🦁 座还有这？）。<strong>学习</strong>板块，英语这里我计划是 2021 年和雅思菇凉分手，啊这，这不才谈了几天，就考虑分手的事情吗？对！I should find a new one! 然后词汇量破 10,000，这应该是雅思前任们的标配吧？maybe。然后计算机重点是学会建站，我可能和建站杠上了，因为两学期了，还是不会，之前老师教的时候，没怎么听，于是乎。。成绩方面稍微提高了目标分数，当然重点还是学习过程鸭，学到真本领才是真，鸭梨不要太大。自控方面添加了时间管理，<del>可能是受了亚洲舞王事件的影响</del>，但讲道理时间管理确实很重要，人的一生也就活个 30,000 天左右，没有多少时间给你去挥霍（wait! 我在写鸡汤吗？？）。再就是证书，增加了雅思、蓝桥杯和计算机四级。技能方面增加了绘画，毕竟去年氪金了 iPad Pro 2020 和 Apple Pencil Ⅱ，不整点活儿？当然有时间精力的话会学的，毕竟自己也有部分这方面的爱好，有时候爱好多了也不是件好事 🤔，所以时间管理很重要，适当分配时间陶怡情操。<strong>收入</strong>板块，尽量一等奖，赚钱也不强求，计算机学好了是不屑于学生时代赚的 mula。<strong>外延与内涵</strong>板块，增加了提高双商和干就完了别想太多两点，与其说是新年计划不如说是我对自己的要求，这应该是伴随自己一辈子的自我要求。<strong>视频</strong>板块删除很多地方，人的经历有限，只留下了拍照片、学习拍摄技巧和收藏剪辑素材这三大计划，至少 2021 年执行性很高。<strong>音乐</strong>板块，钢琴是还会继续学习的，嘻哈创作也会继续，<del>除非某一天江郎才尽</del>。</p><p>从思维导图整体上来说，一些图标、样式和英语表达有细微修改，布局有改变，取消了<strong>活动</strong>和<strong>情感</strong>两大板块，一是大三大四了，参与活动什么的不重要了，二是情感不能成为目标，要为自己未来人生深思熟虑，绝不能意气用事。</p><p>以上就是我对 2021 的展望，写了一下午的时间外加零碎时间的修改。Keep Moving!</p><blockquote><p><strong>结束语</strong>：</p><p>洋洋洒洒五千字，当做自己 2020~2021 人生轨迹的一个记录吧，期待一年后崭新的自己。<br>“苟日新，日日新，又日新”——《礼记·大学》</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎯计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用英语单词用法详解</title>
      <link href="posts/c1b6e7f2/"/>
      <url>posts/c1b6e7f2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>其实有好多常见单词咋们都没有掌握其<u>多种用法</u>，不如来了解了解，还能提升自己英语素养</p></blockquote><h1 id="Nothing"><a href="#Nothing" class="headerlink" title="Nothing"></a>Nothing</h1><p>nothing除了<u>什么都没有</u>这个意思，还有很多用法和含义。比如我一直以来都想知道千玺的那首歌《Nothing to lose》的歌名翻译为啥是<u>义无反顾</u></p><p><strong>1、I have nothing to lose啥子意思嘛？</strong></p><p>​    虽然nothing to lose的表面含义是没有能失去的东西了，但I have nothing to lose不能翻译为我什么都失去了，更不是我现在已经一无所有了。</p><p>​    nothing to lose 没有东西可以损失，你要这么理解：既然什么都不会再失去了，那就勇敢尝试吧，反正不会有损失，毕竟结果不会比现在还糟糕。因此，nothing to lose是积极阳光的一句话，一点都不消极。身边的亲人朋友遇到人生低谷时，不妨用you have nothing to lose鼓励他们奋发向上。</p><p>例句：</p><p>You have nothing to lose, why not have a shot？</p><p>你不会再失去什么了，为什么不放手一试呢？</p><p><strong>2、“一无所有”的英语是什么？</strong></p><ol><li><p>have nothing at all</p><p> 这是一无所有最简单的英文表达，at all表示根本，可以加强语气。I have nothing at all就是我根本什么都没有的意思。</p></li><li><p>be as bare as the palm of one’s hand</p><p> bare是光秃秃的，palm是手心，意思就是穷的就像是光秃秃的手掌心，表示一个人已经一无所有了。</p></li><li><p>as poor as a church mouse一文不名；一贫如洗。</p><p> 教堂里的老鼠经常找不到食物，所以as poor as a church mouse就是说一个人一文不名。</p><p> 例句：</p><p> In fact, I am as bare as the palm of my hand. Could you lend some cash to me?</p><p> 事实上，我现在一无所有了，你能借些现金给我吗？</p></li></ol><p><strong>3、be nothing on someone</strong></p><p>对……来说是无所谓的人</p><p>nothing是无关紧要的人，you are nothing to me就是你对我而言根本就不重要。</p><p>例句：</p><p>Mary is my first love, but she is nothing to me now.</p><p>玛丽是我的初恋，但现在她对我来说已经不重要了。</p><p><strong>4、have nothing on someone 远远比不上</strong></p><p>nothing是没有的意思，所以you have nothing on me表示和我比你什么都没有，言外之意就是你和我比差远了。除此之外，have nothing on someone也表示警察还没找到某人的犯罪证据。</p><p>例句：</p><p>I am good at cooking, but I have nothing on Jack.</p><p>我擅长烹饪，但是我和杰克比差远了。</p><p><strong>5、have nothing to do with you 与你无关</strong></p><p>have nothing to do with someone 与……毫不相干</p><p>表示处理时，do with和deal with可以互换，但这里的do with的意思是有关系，所以have nothing to do with someone就是不关你的事。</p><p>这句话比较伤情面，大家说的时候语气最好和缓点。</p><p>例句：</p><p>It has nothing to do with you, so you’d better not cut in .</p><p>这件事和你没啥子关系，所以你最好别插嘴。</p><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/137743904">老外说“I have nothing to lose”是什么意思？</a></p><h1 id="Though-Tho"><a href="#Though-Tho" class="headerlink" title="Though | Tho"></a>Though | Tho</h1><p>though = tho, 放在句末，是“然而/还是”的意思。</p><p>“This keyboard is pretty good I guess, not amazing tho.”可翻译为：”这键盘我觉得是蛮好的，但还/然而不是惊艳的。“</p><p>再贴两个例句：</p><p>It was a tough job, he accept it tho. 这是份苦差事，可他还是接受了。</p><p>I like this, not the best tho. 我喜欢这个，虽然不是最好的。</p><p>参考文章：<a href="https://www.zhihu.com/question/62460502/answer/471515122">英语口语中的tho怎么用？</a></p><h1 id="Over"><a href="#Over" class="headerlink" title="Over"></a>Over</h1><p>1、over + 时间段 = during</p><p>2、over + 名词 = on</p><p>3、over + 数字 = more than</p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 🤗干货分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🔠英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法笔记</title>
      <link href="posts/4df1e38c/"/>
      <url>posts/4df1e38c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇博客将记录我常用的、有用的、记不住的Python基础语法</p></blockquote><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><blockquote><p>前提：a = “Hello”, b = “Python”</p></blockquote><table><thead><tr><th>操作符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>字符串连接</td><td>a + b 输出结果： HelloPython</td></tr><tr><td>*</td><td>重复输出字符串</td><td>a*2 输出结果：HelloHello</td></tr><tr><td>[]</td><td>通过索引获取字符串中字符</td><td>a[1] 输出结果 <strong>e</strong></td></tr><tr><td>[ : ]</td><td>截取字符串中的一部分，遵循<strong>左闭右开</strong>原则</td><td>a[1:4] 输出结果 <strong>ell</strong></td></tr><tr><td>in</td><td>成员运算符 - 如果字符串中包含给定字符则返回 True</td><td><strong>‘H’ in a</strong> 输出结果 True</td></tr><tr><td>not in</td><td>成员运算符 - 如果字符串中不包含给定的字符返回 True</td><td><strong>‘M’ not in a</strong> 输出结果 True</td></tr></tbody></table><h3 id="字符串的截取和连接"><a href="#字符串的截取和连接" class="headerlink" title="字符串的截取和连接"></a>字符串的截取和连接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;hassanwong&#x27;</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">str</span>)<span class="comment"># 输出字符串</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">0</span>:<span class="number">-1</span>])<span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">0</span>]) <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>]) <span class="comment"># 输出从第三个开始到第五个的字符</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">2</span>:]) <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line">print(<span class="built_in">str</span> * <span class="number">2</span>) <span class="comment"># 输出字符串两次</span></span><br><span class="line">print(<span class="built_in">str</span> + <span class="string">&#x27;你好&#x27;</span>)<span class="comment"># 连接字符串</span></span><br><span class="line">print(<span class="built_in">str</span>[:<span class="number">5</span>])<span class="comment"># 输出第五个字母前的所有字符</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">0</span>:<span class="number">7</span>:<span class="number">2</span>])<span class="comment"># [起始：终止：步长]</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;hello\npython&#x27;</span>) <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line">print(<span class="string">r&#x27;hello\npython&#x27;</span>) <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></table></figure><h3 id="字符串的常见操作"><a href="#字符串的常见操作" class="headerlink" title="字符串的常见操作"></a>字符串的常见操作</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>len(string)</td><td>返回字符串长度</td></tr><tr><td>join(seq)</td><td>以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td>lower()</td><td>转换字符串中所有大写字符为小写</td></tr><tr><td>upper()</td><td>转换字符串中的小写字母为大写</td></tr><tr><td>lstrip()</td><td>截掉字符串左边的空格或指定字符</td></tr><tr><td>max(str)</td><td>返回字符串 str 中最大的字母</td></tr><tr><td>min(str)</td><td>返回字符串 str 中最小的字母</td></tr><tr><td>rstrip()</td><td>删除字符串字符串末尾的空格</td></tr></tbody></table><br><h2 id="列表-List"><a href="#列表-List" class="headerlink" title="列表 List"></a>列表 List</h2><h3 id="列表的循环遍历"><a href="#列表的循环遍历" class="headerlink" title="列表的循环遍历"></a>列表的循环遍历</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">namesList = [<span class="string">&#x27;hassan&#x27;</span>,<span class="string">&#x27;wendy&#x27;</span>,<span class="string">&#x27;sharon&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> namesList:</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>len(list)</td><td>列表元素个数</td></tr><tr><td>max(list)</td><td>返回列表元素最大值</td></tr><tr><td>min(list)</td><td>返回列表元素最小值</td></tr><tr><td>list(tuple)</td><td>将元组转换为列表</td></tr></tbody></table><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>list.append(obj)</td><td>在列表末尾<strong>添加</strong>obj</td></tr><tr><td>list.count(obj)</td><td>统计obj在列表中出现的次数</td></tr><tr><td>list.index(obj)</td><td><strong>查找</strong>列表中值为obj第一个匹配项的索引位置</td></tr><tr><td>list.insert(index, obj)</td><td>将obj<strong>插入</strong>列表下标为index</td></tr><tr><td>list.pop(index)</td><td>移除下标为index的元素，并返回该元素的值</td></tr><tr><td>list.remove(obj)</td><td><strong>移除</strong>列表中值为obj的第一个匹配项</td></tr><tr><td>list.reverse()</td><td>反转列表中元素</td></tr><tr><td>list.sort(key = None, reverse= False)</td><td>对原列表进行排序（见下）</td></tr><tr><td>list.clear()</td><td>清空列表</td></tr><tr><td>list.copy()</td><td>复制列表</td></tr></tbody></table><blockquote><p>sort() 方法：key可以指定一个排序方法；reverse = True 降序， reverse = False 升序（<strong>默认升序</strong>）。</p><p><strong>案例：</strong>（按照第二个元素排序并输出）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">takeSecond</span>(<span class="params">List</span>):</span></span><br><span class="line">   <span class="keyword">return</span> List[<span class="number">1</span>]</span><br><span class="line">List = [(<span class="number">2</span>,<span class="number">2</span>), (<span class="number">4</span>,<span class="number">1</span>), (<span class="number">1</span>,<span class="number">3</span>)]</span><br><span class="line">List.sort(key=takeSecond, reverse=<span class="literal">True</span>)</span><br><span class="line">print(<span class="string">&#x27;降序列表：&#x27;</span>, List)</span><br></pre></td></tr></table></figure><p>输出结果：<code>降序列表：[(1,3), (2,2), (4,1)]</code></p></blockquote><br><h2 id="元组-Tuple"><a href="#元组-Tuple" class="headerlink" title="元组 Tuple"></a>元组 Tuple</h2><h3 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>len(tuple)</td><td>计算元组元素个数</td></tr><tr><td>max(tuple)</td><td>返回元组中元素最大值</td></tr><tr><td>min(tuple)</td><td>返回元组中元素最小值</td></tr><tr><td>tuple(list)</td><td>将列表转换为元组</td></tr></tbody></table><br><h2 id="字典-Dictionary"><a href="#字典-Dictionary" class="headerlink" title="字典 Dictionary"></a>字典 Dictionary</h2><h3 id="根据键访问值"><a href="#根据键访问值" class="headerlink" title="根据键访问值"></a>根据键访问值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span> = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;hassan&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;three&#x27;</span>&#125;</span><br><span class="line">print(<span class="built_in">dict</span>[<span class="string">&#x27;Age&#x27;</span>])<span class="comment"># 获取年龄</span></span><br><span class="line"><span class="comment"># print(dict[&#x27;Sex&#x27;])# 获取不存在的key，会发生异常</span></span><br><span class="line">print(<span class="built_in">dict</span>.get(<span class="string">&#x27;Sex&#x27;</span>))<span class="comment"># 获取不存在的key，获取到None的空内容，不会出现异常</span></span><br></pre></td></tr></table></figure><blockquote><p>在我们不确定字典中是否存在某个键而又想获取其值时，可以使用get方法，还可以设置默认值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="built_in">dict</span>.get(<span class="string">&#x27;Sex&#x27;</span>)<span class="comment"># &#x27;Sex&#x27;键不存在，所以age为None</span></span><br><span class="line">age = <span class="built_in">dict</span>.get(<span class="string">&#x27;Sex&#x27;</span>, <span class="string">&#x27;男&#x27;</span>)<span class="comment"># 若dict中不存在&#x27;Sex&#x27;这个键，就返回默认值&#x27;男&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span> = &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;hassan&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;Class&#x27;</span>: <span class="string">&#x27;three&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">dict</span>[<span class="string">&#x27;Name&#x27;</span>] <span class="comment"># 根据键“Name”来删除</span></span><br><span class="line"><span class="built_in">dict</span>.clear()     <span class="comment"># 清空字典</span></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">dict</span>         <span class="comment"># 删除字典</span></span><br></pre></td></tr></table></figure><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><p>前提：<code>dict = &#123;&#39;Name&#39;: &#39;hassan&#39;, &#39;Age&#39;: 20, &#39;Class&#39;: &#39;three&#39;&#125;</code></p><table><thead><tr><th>常用操作</th><th>描述</th></tr></thead><tbody><tr><td>print(dict[‘hassan’])</td><td>通过key来访问元素并打印，不存在会抛出异常</td></tr><tr><td>print(dict.get(‘hassan’))</td><td>通过get方法来访问元素，不存在返回None，不抛出异常</td></tr><tr><td>for key in dict:<br>    print(key, dict[key])</td><td>遍历字典1</td></tr><tr><td>for key, val in dict.items():<br/>    print(key, val)</td><td>遍历字典2</td></tr><tr><td>print(dict.keys())</td><td>获取所有key</td></tr><tr><td>print(dict.values())</td><td>获取所有value</td></tr><tr><td>dict[‘Age’] = 21</td><td>新增键值对或修改val</td></tr><tr><td>del dict[‘hassan’]</td><td>删除元素</td></tr><tr><td>dict.pop(‘hassan’)</td><td>将元素弹出</td></tr><tr><td>‘hassan’ in dict</td><td>判断元素是否存在</td></tr><tr><td>dict.clear()</td><td>清除字典内的元素</td></tr><tr><td>len()</td><td>获取字典长度</td></tr><tr><td>max()</td><td>获取最大的key</td></tr><tr><td>min()</td><td>获取最小的key</td></tr></tbody></table><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lambda</span> [arg1 [,arg2,.....argn]]:expression</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="keyword">lambda</span> arg1, arg2: arg1 + arg2</span><br><span class="line"><span class="comment"># 调用sum函数</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;相加后的值为:&quot;</span>, <span class="built_in">sum</span>( <span class="number">10</span>, <span class="number">20</span> ))  <span class="comment"># 相加后的值为:30</span></span><br></pre></td></tr></table></figure><h4 id="lambda匿名函数使用if条件语句"><a href="#lambda匿名函数使用if条件语句" class="headerlink" title="lambda匿名函数使用if条件语句"></a>lambda匿名函数使用if条件语句</h4><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随意定义俩变量</span></span><br><span class="line">wife = <span class="string">&quot;wendy&quot;</span></span><br><span class="line">husband = <span class="string">&quot;hassan&quot;</span></span><br><span class="line"><span class="comment"># 随意定义方法</span></span><br><span class="line">fun = <span class="keyword">lambda</span> num: wife <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> husband</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">print(fun(<span class="number">0</span>)) <span class="comment"># &quot;wendy&quot;</span></span><br></pre></td></tr></table></figure><p>解析：当num的值是偶数时显示wife，否则显示husband</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h2 id="常见问题集锦"><a href="#常见问题集锦" class="headerlink" title="常见问题集锦"></a>常见问题集锦</h2><blockquote><p><code>pip install 第三方库</code> 下载模块速度慢，或者不成功</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip --default-timeout=100 install 库名称 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com </span><br></pre></td></tr></table></figure><p>除了豆瓣，也可以换成下面的国内镜像网站。</p><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> </p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a> </p><p>华中科技大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a> </p><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🐍Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年追过的星</title>
      <link href="posts/1a52f92/"/>
      <url>posts/1a52f92/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="咒语念错了！" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6813530ced774376619e341fa27bed622a23d425013de51ca757b7739bf87fd8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">文章被伏地魔封印了，需要咒语来解除！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🎉图一乐 </tag>
            
            <tag> 🍀青春 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selenium框架，模拟登陆网站</title>
      <link href="posts/750429cf/"/>
      <url>posts/750429cf/</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作及解释"><a href="#基本操作及解释" class="headerlink" title="基本操作及解释"></a>基本操作及解释</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动化测试工具，能够控制我们的浏览器</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver </span><br><span class="line"><span class="comment"># 导入时间模块</span></span><br><span class="line"><span class="keyword">import</span> time </span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化浏览器</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"><span class="comment"># 登录此网址</span></span><br><span class="line">driver.get(<span class="string">&#x27;http://xxx&#x27;</span>)</span><br><span class="line"><span class="comment"># 按Ctrl+Shift+C选中一个要输入的板块，在对应代码区右键--&gt;Copy--&gt;Copy XPath，将代码粘到下面，最后填写需要输入的数据</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">&#x27;xxx&#x27;</span>).send_keys(<span class="string">&quot;xxx&quot;</span>)</span><br><span class="line"><span class="comment"># 进入小页面框架中，方能进行查找元素操作</span></span><br><span class="line">driver.switch_to.frame(<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line"><span class="comment"># 将xxx板块截图，并命名为&#x27;xxx.png&#x27;</span></span><br><span class="line">element = driver.find_element_by_xpath(<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line">element.screenshot(<span class="string">&#x27;xxx.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 截取整个屏幕</span></span><br><span class="line">driver.save_screenshot(<span class="string">&#x27;xxx.png&#x27;</span>)</span><br><span class="line"><span class="comment"># 点击按钮</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">&#x27;xxx&#x27;</span>).click()</span><br><span class="line"><span class="comment"># 延迟等待；单位：秒</span></span><br><span class="line">time.sleep(xxx)</span><br><span class="line"><span class="comment"># 隐式等待（填的值为最大等待时间，即时限，若在时限前加载完毕则继续进行下去，否则报错超时）</span></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.close()</span><br><span class="line"><span class="comment"># 设置浏览器页面大小</span></span><br><span class="line">driver.set_window_size(xxx, xxx)  <span class="comment"># 例如：(1920, 1080)</span></span><br><span class="line"><span class="comment"># 页面最大化</span></span><br><span class="line">driver.maximize_window()</span><br><span class="line"><span class="comment"># 获取网页源代码，并打印</span></span><br><span class="line">print(driver.page_source)</span><br><span class="line"><span class="comment"># 隐式执行代码，即不用打开窗口隐式的执行代码（写在代码开头部分）</span></span><br><span class="line">option = webdriver.ChromeOptions()</span><br><span class="line">option.add_argument(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">driver = webdriver.Chrome(chrome_options = option)</span><br></pre></td></tr></table></figure><div style="text-align:center;background:var(--hassan-card-bg);border-radius:12px"><p style="color:#ce6a28;font-size:24px;display:inline-block;margin:6px 0">☕欲知后事如何，</p><p style="color:#a8c212;font-size:24px;display:inline-block;margin:6px 0">且听下回分解🍵</p></div><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p>视频：</p><ul><li><a href="https://www.bilibili.com/video/av66011301/">Python selenium框架教程：用selenium框架破解验证码并实现模拟登陆</a></li></ul><p>博客：</p><ul><li><p><a href="https://www.jianshu.com/p/1531e12f8852">Python+Selenium基础入门及实践</a></p></li><li><p><a href="https://blog.csdn.net/chenxin6666/article/details/105170788/">python爬虫破解验证码的两种方式（selenium和后台js破解）</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 📕知识笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🐍Python </tag>
            
            <tag> 🟢selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="posts/d95d7e09/"/>
      <url>posts/d95d7e09/</url>
      
        <content type="html"><![CDATA[<h3 id="心中之-🔥-再次燃起"><a href="#心中之-🔥-再次燃起" class="headerlink" title="心中之 🔥 再次燃起"></a>心中之 🔥 再次燃起</h3><p>今天是 2020-11-22，我决定开始写我人生中真正意义上的第一篇博客。说到博客，对我来说一直都是件很头疼的事情。第一次正儿八经地听说博客这个东西，是 19 年 10 月份的一个学院小讲堂上，当时主讲人夏学长教我们如何搭建博客、更改主题等等知识，最后确实搭建成功了，开始还很欣喜，但觉着搭建博客是件非常麻烦耗时的事情，加上自己也是小白，没经验更没时间捣鼓，于是就放弃了一段时间。就在今年的 2 月份，我突然改变主意，感觉用 CSDN 写博客是个不错的选择，说实话它的使用感非常方便，毕竟别人什么都给你做了，你只需要上传你的博客即可，各大引擎都能搜索到你的文章，不用费劲等待各大引擎爸爸的收录，当然除了我那几天上传的 2 个博客以外，就再也没有上传过了，心有余而力不足，懒癌晚期 😤。直到近几天，学校的课程实在是学不进去，我突然心血来潮，就又开始花时间钻研捣鼓，惊讶的是很快就上手了，比如改主题，发博客，网站的美化和魔改等等都容易许多，可能随着自己知识的增加，有些之前遇到的难题就迎刃而解了。当前，我已把网站主题 Yilia 更改为 Butterfly，记得我花了很多时间在找主题上，官网里面一百来个主题反反复复看都没有钟意的 😂，最后还是搜索找到了这个“风靡全网”的主题，非常符合自己的审美。以后有空的话，我会一点点完善和美化本博客。</p><h3 id="博客里会有哪些内容？"><a href="#博客里会有哪些内容？" class="headerlink" title="博客里会有哪些内容？"></a>博客里会有哪些内容？</h3><p>Whatever I want! 但主要还是计算机相关学习内容，记一下自己的学习笔记，码一些我觉得有用的干货，如果能顺便帮到大伙，真的是无心插柳柳成荫，这是我愿意看到的！</p>]]></content>
      
      
      <categories>
          
          <category> 💬茶余饭后 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 🦋Butterfly </tag>
            
            <tag> 📝前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="manifest.json"/>
      <url>manifest.json</url>
      
        <content type="html"><![CDATA[{"lang":"en","dir":"ltr","name":"诗颂的博客","description":"hassanwong.top","short_name":"Has~","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/android-chrome-36x36.png","sizes":"36x36","type":"image/png"},{"src":"/img/siteicon/android-chrome-48x48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/android-chrome-72x72.png","sizes":"72x72","type":"image/png"},{"src":"/img/siteicon/android-chrome-96x96.png","sizes":"96x96","type":"image/png"},{"src":"/img/siteicon/android-chrome-144x144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/android-chrome-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/img/siteicon/android-chrome-256x256.png","sizes":"256x256","type":"image/png"},{"src":"/img/siteicon/android-chrome-384x384.png","sizes":"384x384","type":"image/png"},{"src":"/img/siteicon/android-chrome-512x512.png","sizes":"512x512","type":"image/png"}],"theme_color":"#dcb86c","background_color":"#dcb86c","display":"standalone"}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站 - About</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/css/custom/colored_headline.css"><div class="aboutsiteTips">    <h2>源于<br>热爱而去<div class="mask">            <span data-show class="first-tips">记录知识</span>            <span>分享经验</span>            <span>体验生活</span>            <span>探索未来</span>        </div>    </h2></div><script defer type="text/javascript" src="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/js/custom/colored_headline.js"></script><h2 id="本站简介"><a href="#本站简介" class="headerlink" title="本站简介"></a>本站简介</h2><p>本博客网站使用的框架是 Hexo，主题是 Butterfly，主要是记录我计算机相关的学习笔记，时不时会写写文章，海纳百川、包罗万象、不限定主题、just for fun，同时我也会分享经验，记录生活中的点点滴滴、每时每刻的想法，若能无心插柳柳成荫地帮到友友们，让你们感到开心放松，一切的付出便是值得的。瞧瞧地说一声，你们能在浩瀚互联网的犄角旮旯里访问到本站，这让我感到非常幸运~</p><p>俗话说，好记性不如烂笔头，何况我的记性也不好，且来世一趟，想留下些一些有价值的东西，这可能就是我搭建博客的初心吧。在我看来，博客像是一个笔记本、一个日记簿记录着你的所思所想，也像是一名老师、一位学长或学姐给你指点迷津，甚至像是一台时光机去带你领略旅程中的精彩瞬间，it can be everything；博客更像是博主的一面镜子，可称之为“心灵的别墅”，不同功能的页面映射着博主内心不同的一面，无需和博主面对面地交谈就可以像老朋友一样的了解 Ta，也许，这就是博客的魅力之所在。</p><p>对了，想更加了解博主我，欢迎和我公众号里的<a href="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/WeChat_Official_Account_QRcode.png">人工制杖</a>聊天，很多小彩蛋等你来挖掘~</p><h2 id="博主简介"><a href="#博主简介" class="headerlink" title="博主简介"></a>博主简介</h2><table><thead><tr><th>Q</th><th>A</th></tr></thead><tbody><tr><td><strong>中文名</strong></td><td><del>据说聪明的人已经能够从网站细枝末节中凑出来</del></td></tr><tr><td><strong>英文名</strong></td><td>Hassan Wong</td></tr><tr><td><strong>昵称</strong></td><td>Hassan 川枫</td></tr><tr><td><strong>性别</strong></td><td>♂</td></tr><tr><td><strong>破壳</strong></td><td>千禧年</td></tr><tr><td><strong>生肖</strong></td><td>🐉</td></tr><tr><td><strong>星座</strong></td><td>🦁</td></tr><tr><td><strong>坐标</strong></td><td>湖北</td></tr><tr><td><strong>本科</strong></td><td>三峡大学，计院，计科</td></tr><tr><td><strong>爱好</strong></td><td>唱歌，街舞，说唱，篮球，剪辑，摄影</td></tr><tr><td><strong>喜欢的舞种</strong></td><td>Hip-hop、Krump</td></tr><tr><td><strong>喜欢的音乐</strong></td><td>Hip-hop、R&amp;B、Pop music、纯音乐（以钢琴为主，管弦乐、架子鼓为辅）</td></tr><tr><td><strong>喜欢的艺人</strong></td><td><strong>张子枫</strong>（颜值、演技、微笑）、<strong>张艺兴</strong>（街舞、才华、努力），<a href="https://hassanwong.top/posts/1a52f92/">点击了解更多</a></td></tr><tr><td><strong>喜欢的美食</strong></td><td>除了鱼、猪肝、鱼腥草等腥味食物，还有很辣的之外，我大都可以。虽不怎么挑食，但也不是吃货😂</td></tr><tr><td><strong><a href="https://www.16personalities.com/">16 种人格</a></strong></td><td><strong>探险家</strong><br>善于探索，有时候可能会吃力不讨好，努力不被人看见，喜欢艺术类的事物。<br>（小声 bb，有点准厚~）</td></tr></tbody></table><h3 id="个人标签"><a href="#个人标签" class="headerlink" title="个人标签"></a>个人标签</h3><link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/css/custom/tag_cloud.css"><ul class="tag_cloud">  <li data-weight="3">码农</li>  <li data-weight="2">选择恐惧症</li>  <li data-weight="1">街舞</li>  <li data-weight="3">进步青年</li>  <li data-weight="2">中二病晚期</li>  <li data-weight="2">戏精本精</li>  <li data-weight="3">双商堪忧</li>  <li data-weight="1">羽毛球</li>  <li data-weight="4">短发控</li>  <li data-weight="2">强迫症</li>  <li data-weight="1">乒乓球</li>  <li data-weight="3">摄影</li>  <li data-weight="1">哈利波特迷</li>  <li data-weight="2">吃不胖</li>  <li data-weight="2">腿特长</li>  <li data-weight="3">说唱</li>  <li data-weight="1">卡洪鼓</li>  <li data-weight="1">吉他</li>  <li data-weight="4">钢琴</li>  <li data-weight="2">旅行</li>  <li data-weight="2">小幽默</li>  <li data-weight="4">社交恐惧症</li>  <li data-weight="1">写真</li>  <li data-weight="2">拖延症晚期</li>  <li data-weight="3">剪辑</li>  <li data-weight="2">篮球</li>  <li data-weight="3">温和</li>  <li data-weight="2">凡尔赛本赛</li></ul><h2 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h2><div class='js-pjax'>  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/echarts@4.7.0/dist/echarts.min.js"></script>  <script type="text/javascript" src="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/js/custom/switch_chart_color.js"></script>  <!-- 文章发布时间统计图 -->  <div id="posts-chart" style="border-radius: 8px; height: 300px; padding: 10px;"></div>  <!-- 文章标签统计图 -->  <div id="tags-chart" data-length="10" style="border-radius: 8px; height: 300px; padding: 10px;"></div>  <!-- 文章分类统计图 -->  <div id="categories-chart" style="border-radius: 8px; height: 300px; padding: 10px;"></div></div><h2 id="赞赏名单"><a href="#赞赏名单" class="headerlink" title="赞赏名单"></a>赞赏名单</h2><p>若我的博客让您受到了启发或带来了快乐，欢迎给博主倒杯卡布奇诺 ☕，你的鼓励是对我创作最大的动力！</p><table><thead><tr><th>昵称</th><th>金额</th><th>时间</th><th>备注</th></tr></thead><tbody><tr><td>大赵同学</td><td>￥ 10</td><td>2021-06-27</td><td></td></tr><tr><td>Mommy</td><td>￥ 61</td><td>2021-06-01</td><td>祝鹅几节日快乐~</td></tr></tbody></table><div class="note green no-icon flat"><p>提示：</p><ol><li><p>若您与我站已互加友链，昵称处将会以<strong>贵站超链接</strong>形式出现</p></li><li><p><strong>昵称</strong>和<strong>备注</strong>信息可以支付时在备注栏写，也可以留言/邮件告知，否则昵称处会填写支付信息带有*星号的默认昵称，备注则默认为空</p></li></ol></div><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/payment.png" alt="三码合一"></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>哔哔 - Chatter</title>
      <link href="bb/index.html"/>
      <url>bb/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类 - Categories</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[<style>#libCategories{margin:0;font-size:14px;font-weight:500;-webkit-font-smoothing:antialiased}#libCategories *{box-sizing:inherit!important}#libCategories .title{font-size:24px;font-weight:700;color:#fff;text-align:center}#libCategories p{line-height:1.5em}#libCategories h1+p,#libCategories p+p{margin-top:10px}#libCategories .container{display:flex;flex-wrap:wrap;justify-content:center}#libCategories .card-wrap{margin:10px;transform:perspective(1200px);transform-style:preserve-3d;cursor:pointer}#libCategories .card-wrap:hover .card-info{transform:translateY(0)}#libCategories .card-wrap:hover .card-info p{opacity:1}#libCategories .card-wrap:hover .card-info,#libCategories .card-wrap:hover .card-info p{transition:.6s cubic-bezier(.23,1,.32,1)}#libCategories .card-wrap:hover .card-info:after{transition:1s cubic-bezier(.23,1,.32,1);opacity:1;transform:translateY(0)}#libCategories .card-wrap:hover .card-bg{transition:.5s cubic-bezier(.23,1,.32,1),opacity 4s cubic-bezier(.23,1,.32,1);opacity:.8}#libCategories .card-wrap:hover .card{transition:.5s cubic-bezier(.23,1,.32,1);box-shadow:none}#libCategories a{border:none!important;background:0 0!important}#libCategories .card{position:relative;flex:0 0 240px;width:310px;height:310px;background-color:#000;overflow:hidden;box-shadow:rgba(0,0,0,.66) 0 30px 60px 0,inset #333 0 0 0 5px,inset rgba(255,255,255,.4) 0 0 0 6px;transition:.8s cubic-bezier(.445,.05,.55,.95);border-radius:12px}[data-theme=light] #libCategories .card{background-color:rgba(255,255,255,0);box-shadow:rgba(0,0,0,.05) 0 30px 60px 0,inset #333 0 0 0 5px,inset rgba(255,255,255,.1) 0 0 0 6px}#libCategories .card-bg{opacity:1;position:absolute;top:-30px;left:-30px;width:120%;height:110%;padding:20px;background-repeat:no-repeat;background-position:center;background-size:cover;transition:.8s;pointer-events:none}#libCategories .card-info{padding:20px;position:absolute;bottom:0;color:#fff;transform:translateY(40%);transition:.6s 0s cubic-bezier(.215,.61,.355,1)}#libCategories .card-info p{opacity:0;text-shadow:#000 0 .2px 0;transition:.6s 0s cubic-bezier(.215,.61,.355,1)}#libCategories .card-info *{position:relative;z-index:1;box-sizing:inherit}#libCategories .card-info:after{content:'';position:absolute;top:0;left:0;z-index:0;width:100%;height:100%;background-image:linear-gradient(to bottom,transparent 0,rgba(0,0,0,.8) 100%);background-blend-mode:overlay;opacity:0;transform:translateY(100%);transition:5s}#libCategories .card-info h1{font-size:36px;font-weight:normal;text-shadow:rgba(0,0,0,.1) 0 10px 10px;padding-left:0;line-height:1.2;color:#fff}#libCategories .card-info h1:before{display:none}</style><div class='js-pjax'><div id='libCategories'><div id="lib-cards" class="container"><a href='/categories/📕知识笔记/'>  <card data-image="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/categories_note.png">    <h1 slot="header">📕知识笔记</h1>    <p slot="content">记录知识和学习过程，内容主要包括计算机专业的相关学科</p>  </card></a><a href='/categories/💻实用教程/'>  <card data-image="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/categories_tutorial.png">    <h1 slot="header">💻实用教程</h1>    <p slot="content">将自己实践出来的经验汇总成教程，知识面较广，也收集了非原创的实用教程</p>  </card></a><a href='/categories/🤗干货分享/'>  <card data-image="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/categories_share.png">    <h1 slot="header">🤗干货分享</h1>    <p slot="content">收集并分享一些实用的知识资讯，在这里你能发现你想要的宝藏</p>  </card></a><a href='/categories/💬茶余饭后/'>  <card data-image="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/categories_diary.png">    <h1 slot="header">💬茶余饭后</h1>    <p slot="content">表达博主日常对人对事的思考，坐下来喝杯卡布奇诺，一起唠唠嗑呗</p>  </card></a><a href='/categories/👍优质转载/'>  <card data-image="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/categories_reprint.png">    <h1 slot="header">👍优质转载</h1>    <p slot="content">转载一些优质内容，文末写有观后感，同时也起到了防止原文被删的备份作用</p>  </card></a></div></div><script src='https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js'></script><script>"use strict";Vue.config.devtools=!0,Vue.component("card",{template:'\n    <div class="card-wrap"\n      ref="card">\n      <div class="card"\n        :style="cardStyle">\n        <div class="card-bg" :style="[cardBgImage]"></div>\n        <div class="card-info">\n          <slot name="header"></slot>\n          <slot name="content"></slot>\n        </div>\n      </div>\n    </div>',mounted:function(){this.width=this.$refs.card.offsetWidth,this.height=this.$refs.card.offsetHeight},props:["dataImage"],data:function(){return{width:0,height:0,mouseX:0,mouseY:0,mouseLeaveDelay:null}},computed:{mousePX:function(){return this.mouseX/this.width},mousePY:function(){return this.mouseY/this.height},cardStyle:function(){var e=30*this.mousePX,t=-30*this.mousePY;return{transform:"rotateY(".concat(e,"deg) rotateX(").concat(t,"deg)")}},cardBgTransform:function(){var e=-40*this.mousePX,t=-40*this.mousePY;return{transform:"translateX(".concat(e,"px) translateY(").concat(t,"px)")}},cardBgImage:function(){return{backgroundImage:"url(".concat(this.dataImage,")")}}},methods:{handleMouseMove:function(e){this.mouseX=e.pageX-this.$refs.card.offsetLeft-this.width/2,this.mouseY=e.pageY-this.$refs.card.offsetTop-this.height/2},handleMouseEnter:function(){clearTimeout(this.mouseLeaveDelay)},handleMouseLeave:function(){var e=this;this.mouseLeaveDelay=setTimeout(function(){e.mouseX=0,e.mouseY=0},1e3)}}});var app=new Vue({el:"#lib-cards"});</script></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>版权协议 - Copyright</title>
      <link href="cc/index.html"/>
      <url>cc/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="版权协议"><a href="#版权协议" class="headerlink" title="版权协议"></a>版权协议</h2><p>为了保持文章质量，并保持互联网的开放共享精神，保持页面流量的稳定，综合考虑下本站的所有原创文章均采用cc协议中比较严格的<a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh">署名-非商业性使用-禁止演绎 4.0 国际</a>标准。这篇文章主要想能够更加清楚明白的介绍本站的协议标准和要求。方便您合理的使用本站的文章。</p><h3 id="本站文章类型介绍"><a href="#本站文章类型介绍" class="headerlink" title="本站文章类型介绍"></a>本站文章类型介绍</h3><h4 id="原创内容"><a href="#原创内容" class="headerlink" title="原创内容"></a>原创内容</h4><p>对于本站的<strong>原创内容</strong>，若您想非商用转载，则必须标注出处，同时禁止一切商用转载，禁止在转载页面中插入广告（例如谷歌广告、百度广告），否则构成侵权。</p><blockquote><p>A：什么是商业转载？</p><p>Q：用于商业引用，从而获得盈利。商业转载在本站是禁止行为。</p><p>A：发到CSDN、博客园类的网站可以吗？</p><p>Q：这一类型的转载<u>必须征求博主的同意方可引用</u>，若发到自己搭建的博客，建议告知博主但不是必须，仍须显示地标注出处，这样博主才有动力、能安心地生产优质文章，不用担心被不良人士盗窃，谢谢合作，也望理解哈~</p></blockquote><h4 id="转载内容"><a href="#转载内容" class="headerlink" title="转载内容"></a>转载内容</h4><p>对于本站的<strong>转载内容</strong>，均标注了出处。建议您先点击超链接查看原文，尊重原作者的知识产权。若您需要转载该部分内容请直接联系原作者。若您是原作者，且本站转载内容侵犯到您的权益，请通过留言或发邮件的方式联系我并提供相关作者证明，符合删改条件的请求本站会在72小时内进行处理，并以邮件方式进行回复，谢谢合作。</p><p>以下是我站<strong>全篇转载类型文章</strong>的标识模板（意思是本站只要含有以下模板的文章均是<strong>全篇转载类型文章</strong>）：</p><blockquote><p>本文为转载内容，来自XXX</p><p>原文地址：XXX</p><p><a href="/cc">版权协议</a></p></blockquote><p>对于<strong>部分转载类型文章</strong>，我会在文章结尾或小节结尾处加上原文地址。</p><h3 id="如何标注出处？"><a href="#如何标注出处？" class="headerlink" title="如何标注出处？"></a>如何标注出处？</h3><p>标注出处的方式取决于<u>您的共享形式</u>：</p><ol><li><p><strong>分享全部内容（无修改）</strong></p><p> 推荐在文章开头部分使用如下模板：</p><blockquote><p>本文为转载内容，来自<a href="https://hassanwong.top">Hassan Wong</a></p><p>原文地址：XXX</p><p>版权协议（若贵站写有该项协议可以附上）</p></blockquote></li><li><p><strong>分享部分内容</strong></p><p> 建议文末标注<code>文章全名+文章地址</code>（二者缺一不可）</p></li><li><p><strong>修改本站内容（二次加工）</strong></p><p> 建议加上“修改于<a href="https://hassanwong.top">Hassan Wong</a>”、“借鉴于<a href="https://hassanwong.top">Hassan Wong</a>”等类似表达</p></li><li><p><strong>使用本站教程或用F12扒取网站的样式、链接、图片等内容</strong></p><p> 建议将<strong>文章地址</strong>或<a href="https://hassanwong.top">Hassan Wong</a>加到类似于我站<a href="/log/">更新手账</a>的地方</p></li></ol><h3 id="你可以做什么？"><a href="#你可以做什么？" class="headerlink" title="你可以做什么？"></a>你可以做什么？</h3><p>只要您能遵守本页的许可，您可以自由地共享文章的内容 — 在任何媒介以任何形式复制、发行本作品。</p><h3 id="什么内容会被版权保护"><a href="#什么内容会被版权保护" class="headerlink" title="什么内容会被版权保护"></a>什么内容会被版权保护</h3><p>包括但不限于：</p><ul><li>文章封面图片</li><li>文章标题和正文</li><li>站点图片素材（不含主题自带素材）</li><li>本站自定义美化魔改</li></ul><br><p style="text-align:center; color:#666">CC许可协议的编写借鉴于<a href="https://blog.zhheo.com/cc/">Heo</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言信枫 - Comments</title>
      <link href="comments/index.html"/>
      <url>comments/index.html</url>
      
        <content type="html"><![CDATA[  <div id="computer">    <div id="maincontent"><br>      <div id="form-wrap"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png" id="beforeimg">        <div id="envelope">          <form>            <div class="formmain">              <img class="headerimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/WendyZhang.gif"/>              <div style="padding: 5px 20px;">                <center>                  <h3 calss="title3">来自Hassan Wong的留言:</h3>                </center>                <center class="comments">                  有什么想问的？<br>                  有什么建议的？<br>                  有什么想吐槽的？<br>                  有什么好玩的好吃的，都可以介绍给我哦~<br>                </center>                <div class="bottomcontent">                <img class="bottomimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png"/>                </div>                <p class="bottomhr">Hassan Wong竭诚为您服务！</p>              </div>            </div>          </form>        </div><img id="afterimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png">      </div>    </div>  </div>  <div id="mobile">    <form>      <div class="formmain"><img class="headerimg" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/WendyZhang.gif" />        <div style="padding: 5px 20px;">          <center>            <h3 class="title3">来自Hassan Wong的留言:</h3>          </center>          <center class="comments">            有什么想问的？<br>               有什么建议的？<br>            有什么想吐槽的？<br>            有什么好玩的好吃的，都可以介绍给我哦~<br>          </center>          <div class="bottomcontent"><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png" class="bottomhr"></div>          <p class="bottomhr"">Hassan Wong竭诚为您服务！</p>        </div>      </div>    </form>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>朋友圈 - Hassan&#39;s Circle</title>
      <link href="friendcircle/index.html"/>
      <url>friendcircle/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>相册 - Gallery</title>
      <link href="gallery/index.html"/>
      <url>gallery/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/top_img.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Article_Cover</div>  <p>精美的文章封面</p>  <a href='/gallery/ArticleCover/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src='https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/404.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Girlfriend</div>  <p>The_love_of_my_life</p>  <a href='/gallery/WendyZhang/'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友人帐 - Links</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="友链添加须知"><a href="#友链添加须知" class="headerlink" title="友链添加须知"></a>友链添加须知</h2><p>✔️ 含有本站友链</p><p>✔️ 网站长期能够正常访问</p><p>✔️ 最好是有自己的域名</p><p>✔️ 最好是定期写写文章叭 <img no-lazy class="inline" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/zhheo/Sticker-Heo@main/Sticker-100/%E7%8B%97%E5%A4%B4.png" style="height:1.5em"/></p><p>❌ 拒加涉黄、涉赌、涉毒、涉政网站</p><p>🖐 如果要下架本站，请在 <a href="/comments/">留言信枫</a> 备注好您的站点，好聚好散，后会无期~</p><p>💜 若你是 ♀，请无视以上所有要求 🙈 <del>破防了</del></p><blockquote><p>我会不定期访问友链，咕咕了数月的站点将会放入<strong>咕咕名单</strong>，无法访问的站点将会放入<strong>失联名单</strong>（<strong>特别鸣谢</strong>友链除外），千年等一回，我无悔啊啊~</p></blockquote><h2 id="本站友链信息"><a href="#本站友链信息" class="headerlink" title="本站友链信息"></a>本站友链信息</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hassan&#x27;s</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">link:</span> <span class="string">https://hassanwong.top</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/avatar_blog.jpg</span></span><br><span class="line"><span class="attr">descr:</span> <span class="string">时不我待，只争朝夕</span></span><br><span class="line"><span class="attr">siteshot:</span> <span class="string">https://cdn.jsdelivr.net/gh/hassanblog/ScreenShot@gh-pages/hassanblog.github.io.jpg</span></span><br></pre></td></tr></table></figure><blockquote><p>若贵站友链显示方式无需网站截图，可以将<code>siteshot</code>网站截图这一参数省略</p></blockquote><h2 id="友链添加方式"><a href="#友链添加方式" class="headerlink" title="友链添加方式"></a>友链添加方式</h2><p>参照以下格式<strong>留言</strong>即可。如果你是 👇</p><div class="tabs" id="test"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test-1">个人搭建博客</button></li><li class="tab"><button type="button" data-href="#test-2">其他类型网站</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test-1"><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="comment">#站点名称</span></span><br><span class="line"><span class="attr">link:</span> <span class="comment">#站点网址</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="comment">#头像链接</span></span><br><span class="line"><span class="attr">descr:</span> <span class="comment">#站点描述（字数不宜过多）</span></span><br><span class="line"><span class="attr">siteshot:</span> <span class="comment">#截图链接（可省略）</span></span><br></pre></td></tr></table></figure><div class="note red no-icon flat"><p>建议先复制👆再来填写对应参数，若直接复制贵站预写好的友链信息，那么一定得注意友链信息变量名要与本站一致，因为不同站点所用到的变量名可能不同。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test-2"><p>比如：网址导航，文档网站，CSDN，博客园等等</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="comment">#站点名称</span></span><br><span class="line"><span class="attr">url:</span> <span class="comment">#站点网址</span></span><br><span class="line"><span class="attr">img:</span> <span class="comment">#头像链接</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment">#站点描述（字数不宜过多）</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note warning no-icon flat"><p>注意：</p><ol><li>参数记得要与英文冒号之间空一格</li><li><strong>个人搭建的博客网站</strong>我会放在本友链页，<strong>其他类型网站</strong>我会添加到我的<a href="https://navi.hassanwong.top">网址导航</a>页面</li><li>你的博客确保配置有<a href="https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&tn=60017574_oem_dg&wd=%E5%8D%9A%E5%AE%A2sitemap%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE&oq=sitemap&rsv_pq=f2a1d472001610a8&rsv_t=0b82YWTyLRGKX2%2Fu68r4P2NIpROb%2Byb71vkHdcZ1f%2FOpXX7TsfL7R7E%2BPa6Hg1Xt7VTab5zB&rqlang=cn&rsv_enter=1&rsv_dl=tb&rsv_sug3=23&rsv_sug1=2&rsv_sug7=100&bs=sitemap">sitemap.xml</a>，因为本友链页会有爬虫来访问并爬取该站点文章进而生成<a href="https://hassanwong.top/friendcircle/">朋友圈</a>文章列表</li></ol></div><h3 id="站点截图方式-siteshot"><a href="#站点截图方式-siteshot" class="headerlink" title="站点截图方式 - siteshot"></a>站点截图方式 - siteshot</h3><details blue><summary> 点击查看站点截图方式 </summary>              <div class='content'>              <p>建议使用 thum.io 提供的 API 以获取贵站的截图</p><p>方法一：先访问以下链接获取 API 提供的截图，再将图片上传至你的图床，最后将链接填入 siteshot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;image.thum.io&#x2F;get&#x2F;width&#x2F;400&#x2F;crop&#x2F;800&#x2F;allowJPG&#x2F;wait&#x2F;20&#x2F;noanimate&#x2F;https:&#x2F;&#x2F;&lt;你的域名&gt;&#x2F;</span><br></pre></td></tr></table></figure><p>方法二：自行截图或用其它能代表贵站的图片，再将链接填入 siteshot。（要求：400✖266 像素 或 长宽比例 1.5）</p><p>方法三：直接省略（API 会自动截图，虽说 API 目前相当稳定，但本站不能保证以后也稳定）</p>              </div>            </details>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>公告栏 - Notice</title>
      <link href="notice/index.html"/>
      <url>notice/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本站公告栏在首页轮播组件中默认显示 8 条</p></blockquote><div class="timeline"><p class='p h2'>公告栏</p><div class="timenode"><div class="meta"><p><p>置顶❗</p></p></div><div class="body"><p>用<u>PC端Chrome浏览器100%大小</u>打开本站效果最佳</p></div></div><div class="timenode"><div class="meta"><p><p>2021-8-28</p></p></div><div class="body"><p>我的小私心——友友们别把我的图片素材也扒走了噢！Ball Ball U，呜呜呜😭</p><p><del>正所谓，我不仅扒你的裤子，连你内裤也给你扬咯</del>🙈</p><p>写着写着，裆部一阵秋风拂过，泛起阵阵涟漪，凉意十足</p><details ><summary> 内心哔哔 </summary>              <div class='content'>              <p>因为有时候浏览某些大佬的网站时，突然发现，唉 what’s up，那不是我设计的图片素材吗？我内心五味杂陈，高兴的是我找到或设计的图片素材受到了无声的认可（碰巧撞图片的除外），而伤心的是，你不经过我同意直接拿过去用，无论是找的还是设计的图片素材都费了很多心思，比如右下角的哆啦A梦，它的竹蜻蜓本是原图没有的，我海淘了很久才找到，然后再用Photoshop拼接而成；再比如博主社交卡片右上角的svg手机状态显示图标，这是在Codepen里找到的素材再用Adobe Illustrator进行二创更改，可能对于一些设计大佬来说这很简单不费劲，但是对于小白来说。。。emm，你实在是想用，比如刚才说的svg手机状态显示图标，这可能对于想用的友友们来说很难去二创，甚至不知道用什么软件去编辑，这种情况下可以留言或邮我征求我的同意，除此之外的图片素材，我只能口头建议你们另找图片素材吧。。。然后，本站样式你可以尽情扒取，互相学习嘛，不求你们原创，但希望你们能从扒取样式的过程中逐渐找到自己的风格，这是我愿意看到的也是最重要的，共勉！</p><p>其实这个问题也不怪那些拿来用的人吧，我能够理解，只能说我自己疏忽了，而且<u>难以界定我对某些图片素材有没有绝对的拥有权</u>。我觉得博主Heo在这方面做的很好，他自己操刀设计了Guli原创IP个人形象，整个网站都有Guli的身影，他也在Github仓库中申明是他个人使用，在一定程度上降低了被扒率，就算被扒了其它博友也能发现那素材是原属于谁的。而我右下角的哆啦A梦，很多人可能以为我在网上轻松找到直接使用的，就随便拿，emm，以后有机会的话我还是自己学着做原创IP个人形象！</p><p>然后Heo还有个值得我去学习的地方，就是对他人劳动成果都给予了最大的Respect，比如转载了别人的文章，他都会标明作者、平台、标题、链接，除此之外他文章中还有很多类似小细节👍。</p>              </div>            </details></div></div><div class="timenode"><div class="meta"><p><p>2021-7-28</p></p></div><div class="body"><p>3D相册网站——<a href="https://gal.hassanwong.top">诗颂的画廊</a>已上线</p></div></div><div class="timenode"><div class="meta"><p><p>2021-7-21</p></p></div><div class="body"><p>音乐播放网站——<a href="https://mb.hassanwong.top">诗颂的八音盒</a>已上线</p></div></div><div class="timenode"><div class="meta"><p><p>2021-7-1</p></p></div><div class="body"><p>庆祝中国共产党成立100周年！同时望大家有个愉快且充实的暑假！</p></div></div><div class="timenode"><div class="meta"><p><p>2021-5-29</p></p></div><div class="body"><p>视频解析板块已上线：<a href="/videoparsing">videoparsing</a>。鸣谢realwds！</p></div></div><div class="timenode"><div class="meta"><p><p>2021-5-1</p></p></div><div class="body"><p>暂时停止网站开发，文章继续更新，有事请邮我或评论留言，不再接受加好友</p></div></div><div class="timenode"><div class="meta"><p><p>2021-3-22</p></p></div><div class="body"><p>文档网站已上线：<a href="https://doc.hassanwong.top">doc.hassanwong.top</a></p></div></div><div class="timenode"><div class="meta"><p><p>2021-3-11</p></p></div><div class="body"><p><u>喜讯</u>：本站初次被百度收录</p></div></div><div class="timenode"><div class="meta"><p><p>2021-2-15</p></p></div><div class="body"><p>网址导航已上线：<a href="https://navi.hassanwong.top">navi.hassanwong.top</a></p></div></div><div class="timenode"><div class="meta"><p><p>2021-2-6</p></p></div><div class="body"><p>网站新域名：<a href="https://hassanwong.top/">hassanwong.top</a></p></div></div><div class="timenode"><div class="meta"><p><p>2020-11-13</p></p></div><div class="body"><p>欢迎关注我的<strong>微信公众号：Hassan川枫的小屋</strong>，一个分享资源、提供人工制杖聊天功能的公众号</p><img align="left" src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/WeChat_Official_Account_QRcode.png"></div></div></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>歌单 - Playlist</title>
      <link href="playlist/index.html"/>
      <url>playlist/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/css/custom/colored_headline.css"></style><div class="aboutsiteTips">    <h2>适合博客阅读的<br>        <div class="mask">            <span data-show class="first-tips">Hip-hop</span>            <span>R&B</span>            <span>流行</span>        </div>音乐    </h2></div><script defer type="text/javascript" src="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/js/custom/colored_headline.js"></script><h2 id="网易云音乐（页脚播放器使用中）"><a href="#网易云音乐（页脚播放器使用中）" class="headerlink" title="网易云音乐（页脚播放器使用中）"></a>网易云音乐（页脚播放器使用中）</h2><blockquote><p>页脚音乐播放列表收藏了我喜欢的并适合博客阅读的音乐，整体风格偏舒缓。</p></blockquote>    <div id="aplayer-oeHJbiOr" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5363191876" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="320px" data-preload="auto" data-theme="#81D8CF" data-volume="0.5" data-order="1"    ></div><br><h2 id="QQ-音乐歌单"><a href="#QQ-音乐歌单" class="headerlink" title="QQ 音乐歌单"></a>QQ 音乐歌单</h2><details cyan><summary> Song Like | 综合了所有我喜欢类型的音乐 </summary>              <div class='content'>              <div id="aplayer-jIbtFlPj" class="aplayer aplayer-tag-marker meting-tag-marker"     data-id="7934226388" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="500px" data-preload="auto" data-theme="#81D8CF" data-volume="0.5" data-order="1"></div>              </div>            </details><details blue><summary> Hip-hop | 收藏了嘻哈说唱类的音乐 </summary>              <div class='content'>              <div id="aplayer-rlELejTY" class="aplayer aplayer-tag-marker meting-tag-marker"     data-id="7934241960" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="450px" data-preload="auto" data-theme="#81D8CF" data-volume="0.5" data-order="1"></div>              </div>            </details><details green><summary> 流行音乐 | 收藏了R&B、Pop类的音乐 </summary>              <div class='content'>              <div id="aplayer-JRCiLtUc" class="aplayer aplayer-tag-marker meting-tag-marker"     data-id="7934243734" data-server="tencent" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="450px" data-preload="auto" data-theme="#81D8CF" data-volume="0.5" data-order="random"></div>              </div>            </details><hr><h2 id="页脚音乐播放器使用说明"><a href="#页脚音乐播放器使用说明" class="headerlink" title="页脚音乐播放器使用说明"></a>页脚音乐播放器使用说明</h2><ol><li><p>点击网页左下角右箭头 ➡ 展开音乐详情</p></li><li><p>点击播放键 ▶ 即可播放/暂停音乐</p></li><li><p>点击三杠型按钮可展开歌单</p></li></ol><blockquote><p>其余按钮功能等你来探索</p></blockquote>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>隐私协议 - Privacy</title>
      <link href="privacy/index.html"/>
      <url>privacy/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="隐私协议"><a href="#隐私协议" class="headerlink" title="隐私协议"></a>隐私协议</h2><p>本站非常重视游客的隐私和个人信息保护。您在使用本博客网站时，可能会收集和使用您的相关信息。通过《隐私协议》向您说明在您访问 hassanwong.top 网站时，如何收集、使用、保存这些信息。</p><h3 id="一、如何收集和使用您的个人信息"><a href="#一、如何收集和使用您的个人信息" class="headerlink" title="一、如何收集和使用您的个人信息"></a>一、如何收集和使用您的个人信息</h3><p><strong>您的个人信息包括</strong>：</p><ul><li><p>网络身份标识信息（浏览器 UA、IP 地址）</p></li><li><p>您的地理位置信息（具体到城市）</p></li></ul><p><strong>在您访问时，仅会处于以下目的，使用您的个人信息</strong>：</p><ul><li>百度/谷歌统计工具会收集您的访问信息，用于网站的优化与文章分类（被动，存储，定期清理）</li></ul><p><strong>在您评论时，仅会出于以下目的，收集和使用您的个人信息</strong>：</p><ul><li>评论时会记录您的qq号（如果在邮箱位置填写qq邮箱或qq号），方便获取您的qq头像（主动，存储）</li><li>评论时会记录您的邮箱，当我回复后会通过邮件通知您（主动，存储，不会公开邮箱）</li><li>评论时会记录您的IP地址，作为反垃圾的用户判别依据（被动，存储，不会公开IP）</li><li>评论会记录您的浏览器代理，用作展示系统版本、浏览器版本方便展示您使用的设备，快速定位问题（被动，存储）</li></ul><p><strong>您应该知道在您访问的时候以下信息会被统计功能使用</strong>：</p><table><thead><tr><th>类型<div style="width:100px"></th><th>信息</th></tr></thead><tbody><tr><td>IP地址</td><td><div id="userAgentIp"></div></td></tr><tr><td>国家</td><td><div id="userAgentCountry"></div></td></tr><tr><td>省份</td><td><div id="userAgentRegion"></div></td></tr><tr><td>城市</td><td><div id="userAgentCity"></div></td></tr><tr><td>运营商</td><td><div id="userAgentIsp"></div></td></tr><tr><td>设备</td><td><div id="userAgentDevice"></div></td></tr></tbody></table><script>// 获取ipfunction getIpInfo(){    var path = 'https://myip.ipip.net/';    if(path !== undefined){      var httpRequest = new XMLHttpRequest();//第一步：建立所需的对象      httpRequest.open('GET', path + '?imageAve', true);//第二步：打开连接  将请求参数写在url中  ps:"./Ptest.php?name=test&nameone=testone"      httpRequest.send();//第三步：发送请求  将请求参数写在URL中      /**       * 获取数据后的处理程序       */      httpRequest.onreadystatechange = function () {          if (httpRequest.readyState == 4 && httpRequest.status == 200) {                var info = httpRequest.responseText;//获取到json字符串，还需解析                var ipresult = info.split("  ");                const ip = ipresult[0].split("：")[1];                document.getElementById("userAgentIp").innerHTML = ip;                const c2 = ipresult[1].split("：")[1].split(" ");                document.getElementById("userAgentCountry").innerHTML = c2[0];                document.getElementById("userAgentRegion").innerHTML = c2[1];                document.getElementById("userAgentCity").innerHTML = c2[2];                const isp = ipresult[2];                document.getElementById("userAgentIsp").innerHTML = isp;          }      };      }else{        console.log('获取信息失败');      }      var uaInfo = navigator.userAgent;      document.getElementById("userAgentDevice").innerHTML = uaInfo;  }</script><div class="js-pjax"><script>getIpInfo()</script></div><h3 id="二、本地-LocalStorage-存储"><a href="#二、本地-LocalStorage-存储" class="headerlink" title="二、本地 LocalStorage 存储"></a>二、本地 LocalStorage 存储</h3><p>本站为实现评论、深浅模式切换，不蒜子的 uv 统计等功能，会自动在您的浏览器中进行本地存储，您可以随时清除浏览器中保存的所有 Cookies 以及 LocalStorage。</p><h3 id="三、如何共享、转让您的个人信息"><a href="#三、如何共享、转让您的个人信息" class="headerlink" title="三、如何共享、转让您的个人信息"></a>三、如何共享、转让您的个人信息</h3><p>不会与任何公司、组织和个人共享您的个人信息，仅博主知晓，且用大学四年单身来担保，skr~</p><br><p style="text-align:center; color:#666">隐私协议的编写借鉴于<a href="https://blog.zhheo.com/privacy/">Heo</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签 - Tags</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>视频解析 - Video Parsing</title>
      <link href="videoparsing/index.html"/>
      <url>videoparsing/index.html</url>
      
        <content type="html"><![CDATA[<div id="article-container">  <h1 class="page-title"> 视频解析 </h1>  <div class="jiexi-container">    <div class="select-container">      <div class="select"> <select id="video-parsing">          <option value="https://www.playm3u8.cn/jiexi.php?url=" selected="">一号解析接口（推荐）</option>          <option value="https://www.qianyicp.com/jiexi/index.php?url=">二号解析接口</option>          <option value="https://api.yueliangjx.com/?url=">三号解析接口</option>          <option value="https://jx.elwtc.com/vip/?url=">四号解析接口</option>        </select> </div>      <div class="url-input"> <input type="text" id="video-link"          placeholder="输入视频播放地址，如：http://v.youku.com/v_show/id_xxxx"> </div>      <div class="btn"> <button onclick="watchVideo()">Play it</button> </div>    </div>    <div class="main-iframe">      <div class="video-tip"> <i class="fa fa-check-circle"></i>选择接口，填写视频地址，点击“立即播放”按钮，畅享vip视频 </div> <iframe        id="video-iframe" allowfullscreen=""></iframe>    </div>    <div class="video-alert">本站不存储任何链接，播放内容与本站无关，接口源于互联网，仅供学习交流。</div>    <div class="others"> <a href="https://v.qq.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_tecent.png" alt="腾讯视频"> </a>        <a href="https://www.iqiyi.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_iqiyi.png" alt="爱奇艺"> </a>        <a href="https://youku.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_youku.png" alt="优酷视频"> </a>         <a href="https://www.mgtv.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_mangguo.png" alt="芒果TV"> </a>         <a href="https://www.bilibili.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_bilibili.png" alt="哔哩哔哩"> </a>         <a href="https://www.yinyuetai.com/" rel="external nofollow noreferrer" target="_blank"> <img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/video_yinyuetai.png" alt="音悦台"> </a>      </div>     </div>  <script>        var num = 0; function watchVideo() { document.querySelector(".video-tip").style.display = "none"; var e = document.getElementById("video-link").value, t = document.getElementById("video-parsing").value, d = document.getElementById("video-iframe"); d.style.display = "block", d.src = t + e, num = 0 }</script>  <style>    .select-container {      display: flex;      align-items: baseline;      justify-content: space-between    }    .select-container .select select {      border: 1px solid #ccc;      padding: 8px 20px;      font-size: 15px;      outline: 0;      color: #333    }    .select-container .url-input {      flex: 1;      margin: 0 30px    }    .select-container .url-input input {      border: 1px solid #ccc;      padding: 11px 20px;      font-size: 15px;      outline: 0;      width: 100%;      color: #333    }    .select-container .url-input input::-webkit-input-placeholder {      color: gray;    }    .select-container .btn button {      color: #fff;      background-color: #67c23a;      padding: 12px 20px;      font-size: 15px;      border-radius: 4px    }    .main-iframe {      margin-top: 30px;      height: 500px;      background-color: #ecf5ff;      border-radius: 12px 12px 0 0;      position: relative    }    .main-iframe .video-tip {      border-radius: 12px;      position: absolute;      top: 20px;      left: 50%;      -webkit-transform: translateX(-50%);      transform: translateX(-50%);      background-color: #f0f9eb;      color: #67c23a;      font-size: 15px;      padding: 0 18px;    }    .main-iframe #video-iframe {      width: 100%;      height: 100%;      border: 0;      display: none    }    .video-alert {      border-radius: 0 0 12px 12px;      background-color: #f0f9eb;      padding: 12px;      text-align: center;      font-size: 14px;      color: #67c23a    }    .others {      margin-top: 40px;      padding-bottom: 30px;      display: flex    }    .others a {      width: calc(100% / 6);      border-bottom: none !important;      background-color: #fff !important    }    .others a:first-child {      border-radius: 12px 0 0 12px;    }    .others a:last-child {      border-radius: 0 12px 12px 0;    }    .others a img {      margin-top: .8rem !important;      height: 44px;    }    .others .img-alt.is-center {        display: none;    }    @media screen and (max-width:600px) {      .select-container {        display: block;      }      .select-container .select select {        width: 100%;      }      .select-container .url-input {        margin: 0;        margin-top: 20px;      }      .select-container .btn button {        margin-top: 20px;        width: 100%;      }      .main-iframe .video-tip {        display: none;      }      .main-iframe {        height: 280px;      }      .others {        display: none;      }    }  </style></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>文章封面 - Article Cover</title>
      <link href="gallery/ArticleCover/index.html"/>
      <url>gallery/ArticleCover/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>每一张封面都是我的精心设计</p><p>封面制作常用网站：<a href="https://www.canva.cn/">Canva - 可画</a>、<a href="https://www.isheji.com/">爱设计</a>、<a href="https://www.iconfont.cn/">阿里巴巴矢量图标库</a></p></blockquote><div class="justified-gallery"><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_1st-aniversary-blog.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_remove_ad.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_bald.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_parents_children_job.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_talent_children.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_education.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_Vue.js.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_English.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_IDEA.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_python.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_Microsoft_Office.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_blackpeople.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_database.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_computer_network.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_css.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_NO-EN.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_character_drawing.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_involution.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_work.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_bigdata.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_music.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@latest/img/cover_baipiao.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_Data_Structure.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_Hexo_GitHub.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_computer.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_hip-hop.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_butterfly_beautify.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_win10.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_british_study.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_Programming.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/cover_computer.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_Hexo_WebStack.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_IELTS_notes.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_2021Target.png" alt=""></p><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/cover_my_1st_blog.png" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>My Girlfriend 💜</title>
      <link href="gallery/WendyZhang/index.html"/>
      <url>gallery/WendyZhang/index.html</url>
      
        <content type="html"><![CDATA[<div class="note pink no-icon flat"><p>She’s been my Girlfriend for (nowyear - 2016) years. We love each other and care about each other. And we hope we can get everyone’s blessing. Exactly, It’s time to let everyone know the truth about the relationship between us. <del>Finally, I gotta tell you guys that I got a mountain of peach trees</del>😝.</p></div><div class="timeline"><p class='p h2'>Our_Time_Together</p><div class="timenode"><div class="meta"><p><p>2020-9</p></p></div><div class="body"><ul><li>She was admitted to the <em>Beijing Film Academy</em>.</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2018-9</p></p></div><div class="body"><ul><li>I was admitted to the <em>China Three Gorges University</em>.</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2016-8</p></p></div><div class="body"><ul><li>We first met on a TV series called <em>A Love For Separation</em> in August 2016. Since then, I feel like I’ve fallen in love.</li></ul></div></div></div><div class="justified-gallery"><p><img src= "https://cdn.jsdelivr.net/gh/hassanblog/CDN/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/WendyZhang.gif" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="img/siteicon/README.html"/>
      <url>img/siteicon/README.html</url>
      
        <content type="html"><![CDATA[<h1 id="Your-Favicon-Package"><a href="#Your-Favicon-Package" class="headerlink" title="Your Favicon Package"></a>Your Favicon Package</h1><p>This package was generated with <a href="https://realfavicongenerator.net/">RealFaviconGenerator</a> <a href="https://realfavicongenerator.net/change_log#v0.16">v0.16</a></p><h2 id="Install-instructions"><a href="#Install-instructions" class="headerlink" title="Install instructions"></a>Install instructions</h2><p>To install this package:</p><p>Extract this package in <code>&lt;web site&gt;/img/siteicon/</code>. If your site is <code><a href="http://www.example.com">http://www.example.com</a></code>, you should be able to access a file named <code><a href="http://www.example.com/img/siteicon/favicon.ico">http://www.example.com/img/siteicon/favicon.ico</a></code>.</p><p>Insert the following code in the <code>head</code> section of your pages:</p><pre><code>&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;/img/siteicon/apple-touch-icon.png&quot;&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;32x32&quot; href=&quot;/img/siteicon/favicon-32x32.png&quot;&gt;&lt;link rel=&quot;icon&quot; type=&quot;image/png&quot; sizes=&quot;16x16&quot; href=&quot;/img/siteicon/favicon-16x16.png&quot;&gt;&lt;link rel=&quot;manifest&quot; href=&quot;/img/siteicon/site.webmanifest&quot;&gt;&lt;link rel=&quot;mask-icon&quot; href=&quot;/img/siteicon/safari-pinned-tab.svg&quot; color=&quot;#5bbad5&quot;&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;/img/siteicon/favicon.ico&quot;&gt;&lt;meta name=&quot;apple-mobile-web-app-title&quot; content=&quot;诗颂的博客&quot;&gt;&lt;meta name=&quot;application-name&quot; content=&quot;诗颂的博客&quot;&gt;&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#06070c&quot;&gt;&lt;meta name=&quot;msapplication-config&quot; content=&quot;/img/siteicon/browserconfig.xml&quot;&gt;&lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;&gt;</code></pre><p><em>Optional</em> - Check your favicon with the <a href="https://realfavicongenerator.net/favicon_checker">favicon checker</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>更新手账 - Update Log</title>
      <link href="log/index.html"/>
      <url>log/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>更新手账记录了本站 2021-01-23 以来几乎所有美化魔改微调的更新历史，且<u>参考过他人的更新都附带有教程链接</u>。</p></blockquote><div class="timeline"><p class='p h2'>更新手账</p><div class="timenode"><div class="meta"><p><p>2021-9-24</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.8.4</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-21</p></p></div><div class="body"><ul><li>取消毛玻璃特效（影响网页性能）</li><li><em>斜体字深灰色</em></li><li><a href="https://noionion.top/12280.html">移动端侧边菜单栏魔改</a></li><li>移除移动端首页社交图标</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-20</p></p></div><div class="body"><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/blob/c949ab3d8408d69f82fe30ff3fa256b0a59a74f6/hexo-butterfly-douban/README.md">添加“书评”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-14</p></p></div><div class="body"><ul><li>借鉴洪哥顶部分类条思路写出了标签条</li><li>仿 iPhone 未来版 博主社交卡片🔥 （你又心动吗了？这个就别扒了厚，给孩子一条内裤穿吧，不然就千篇一律了噢）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-13</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.8.3</li><li><a href="https://blog.zhheo.com/p/bc61964d.html">给分类页顶部加分类条</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-12</p></p></div><div class="body"><ul><li><a href="https://hassanwong.top/posts/9d49f75f/#%E5%8F%B3%E4%BE%A7Sticky%E7%BB%84%E4%BB%B6%E9%9A%8F%E9%A1%B5%E9%9D%A2%E4%B8%8A%E4%B8%8B%E6%BB%9A%E5%8A%A8%E8%80%8C%E5%BE%AE%E7%A7%BB%E7%9A%84Bug">右侧Sticky组件随页面上下滚动而微移的Bug</a>🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-8-3</p></p></div><div class="body"><ul><li>给加密文章卡片右上方加上<code>SECRET</code>角标</li><li><a href="https://akilar.top/posts/b941af/">页脚添加工作时间牌</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-28</p></p></div><div class="body"><ul><li>搭建3D相册网站——<a href="https://gal.hassanwong.top">诗颂的画廊</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-23</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.8.2</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-21</p></p></div><div class="body"><ul><li>搭建音乐播放网站——<a href="https://mb.hassanwong.top">诗颂的八音盒</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-18</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.8.1</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-10</p></p></div><div class="body"><ul><li><a href="https://www.imaegoo.com/2021/twikoo-lightgallery/">评论图片的点击放大</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-06</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.8.0</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-7-05</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/615e2dec/#%E6%B3%A8%E9%87%8A-notation">外挂标签加注释notation</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-14</p></p></div><div class="body"><ul><li><a href="/posts/d1f4fb49/#%E5%9B%BE%E7%89%87%E5%A1%AB%E5%85%85%E6%96%B9%E5%BC%8F">添加首页置顶文章轮播组件</a>🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-13</p></p></div><div class="body"><ul><li>添加首页顶部文章导航组件（仿Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-05</p></p></div><div class="body"><ul><li>美化文档网站</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-03</p></p></div><div class="body"><ul><li>美化文档网站</li><li><a href="/posts/9d49f75f/#%E9%AD%94%E6%94%B9%E6%96%87%E7%AB%A0h1-6%E7%BA%A7%E6%A0%87%E9%A2%98%E5%89%8Dicon%E5%9B%BE%E6%A0%87">更改文章h1~6级标题前icon图标</a>🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-02</p></p></div><div class="body"><ul><li>魔改打赏按钮</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-6-01</p></p></div><div class="body"><ul><li>更改“博主简介”板块为“关于本站”，且将“数据统计”板块转移进来，同时换成<a href="https://blog.eurkon.com/post/1213ef82.html">Eurkon博主教程下的</a>，外加“赞赏名单”，同时更新页脚、导航栏、右侧小组件点击跳转链接。其中个人标签云更换成<a href="https://www.jianshu.com/p/8841eb5b13c7">水平堆叠样式</a>个人标签。</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-29</p></p></div><div class="body"><ul><li>gitcalendar更换冷色系温度阶梯色调（高饱和度200）</li><li>“歌单”、“博主简介”板块顶部大版文字轮播（仿Heo）</li><li>添加“<a href="/videoparsing">视频解析</a>”板块（扒自<a href="https://blog.realwds.com/media/">realwds</a>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-26</p></p></div><div class="body"><ul><li><p>升级 Butterfly 主题 3.7.7</p></li><li><p><a href="https://ogliu.com/2021/05/26/OptionalChaining/">彻底告别 Cannot read property *** of undefined报错</a></p><blockquote><p>我站在解决控制台报错前，就gitcalendar canvas渲染那的offsetWidth读取不到，还有右侧功能组件那，因为我魔改过，禁用了功能展开按钮，估计JS代码获取不到功能展开按钮，所以才报错。在相应位置加个问号就行，随便试试居然成功了👍</p></blockquote></li><li><p><a href="https://hassanwong.top/posts/7a58550e/">控制台输出自定义字符画</a>🔥</p></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-23</p></p></div><div class="body"><ul><li><a href="https://akilar.gitee.io/posts/ebf20e02/#%E5%9B%BE%E7%89%87%E6%A8%A1%E7%B3%8A%E6%B8%90%E5%8F%98%E6%B8%85%E6%99%B0">图片由模糊渐变清晰</a>（butterfly 3.7.7 版本已经有该功能）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-21</p></p></div><div class="body"><ul><li><a href="https://blog.realwds.com/posts/84339efc.html">根据封面图主色调更改博客主题颜色</a>（无情地扒了洪哥85%的底裤maybe）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-19</p></p></div><div class="body"><ul><li><a href="https://blog.realwds.com/posts/c3e13e67.html">用Cloudflare免费CDN优化网站</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-15</p></p></div><div class="body"><ul><li><a href="https://icp.gov.moe/joinus.php">萌国ICP备案</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-12</p></p></div><div class="body"><ul><li>导航栏文章标题跟随上下滑动切换（仿 Heo，感觉把洪哥一大半的底裤都扒了😂太不好意思了）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-11</p></p></div><div class="body"><ul><li>美化左上角导航栏覆盖效果（仿 Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-9</p></p></div><div class="body"><ul><li><a href="https://blog.zhheo.com/p/f48e518b.html">魔改404页面</a> （附带：<a href="https://hassanwong.top/posts/7a869374/#404%E9%A1%B5%E9%9D%A2%E9%AD%94%E6%94%B9">我的二创教程</a>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-4</p></p></div><div class="body"><ul><li>底部分页按钮美化（仿 Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-5-2</p></p></div><div class="body"><ul><li><a href="https://blog.zhheo.com/p/77ebd8b5.html">自定义指定首页文章卡片高度</a></li><li>文章卡片悬停显示文章描述效果（仿 Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-30</p></p></div><div class="body"><ul><li><a href="https://hassanwong.top/posts/9d49f75f/">增加右下角哆啦 A 梦返回顶部按钮</a>🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-29</p></p></div><div class="body"><ul><li><a href="https://blog.zhheo.com/p/70bd84fc.html">JS 获取用户 IP 和地理位置信息、UA 并在隐私协议里展示</a>（<a href="/privacy/">隐私协议</a>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-28</p></p></div><div class="body"><ul><li><a href="https://hassanwong.top/posts/9d49f75f/">魔改深浅模式下的背景图片，并更换</a>🔥</li><li><a href="https://hassanwong.top/posts/9d49f75f/">添加首页公告栏轮播组件（100%）</a>🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-27</p></p></div><div class="body"><ul><li><a href="https://hassanwong.top/posts/9d49f75f/">添加首页公告栏轮播组件（30%）</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-26</p></p></div><div class="body"><ul><li>魔改评论区上方分割线为 bilibili 文章同款</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-25</p></p></div><div class="body"><ul><li>删除加载动画，添加顶部加载进度条（仿 Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-23</p></p></div><div class="body"><ul><li>美化 GitHub 仓库首页 <a href="https://zhuanlan.zhihu.com/p/265462490">知乎</a>、<a href="https://blog.imzjw.cn/posts/1a4c5f9f/">小嘉</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-19</p></p></div><div class="body"><ul><li><p>页脚 footer 自定义魔改（灵感来自于 Heo）</p></li><li><p>更新网站座右铭（If you had one shot or one opportunity. To seize everything you ever wanted in one moment. Would you capture it or just let it slip?）</p></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-18</p></p></div><div class="body"><ul><li>将深浅转换按钮转移到导航栏（灵感来源于 Heo）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-17</p></p></div><div class="body"><ul><li>添加<a href="/privacy/">隐私协议</a>、<a href="/cc/">版权协议</a>页面</li><li>修复打赏框 hover 的 bug（reward.styl）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-15</p></p></div><div class="body"><ul><li><a href="https://www.heson10.com/posts/3510.html">搭建 Butterfly 主题 Leancloud 后台的哔哔</a>（腾讯云后台调用莫名其妙出问题了，<del>无语子</del>）</li><li><a href="https://www.heson10.com/posts/64095.html">搭建蜜云 sweetcloud 主题的情侣哔哔</a>，图标采用了<b style="color:#7f4985">枫妹应援色</b>（<del>你说我这是。。。hhh</del>）</li><li>更改每一页的文章数量为 12（<code>&lt;BlogRoot&gt;\_config.yml</code>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-14</p></p></div><div class="body"><ul><li>更换 Post、Page 字体为 PingFang-SC</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-13</p></p></div><div class="body"><ul><li><a href="https://gitee.com/96TTL/test-connection/blob/master/%E6%A0%87%E7%AD%BE%E4%BA%91.html">在“关于我”页面加个人标签云</a>（3D球样式）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-12</p></p></div><div class="body"><ul><li><a href="https://neumorphism.io/">运用新拟态风格魔改社交卡片布局 🔥</a></li><li>去除社交卡片加庆祝动态背景（动图扣得不仔细，不符合本站风格）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-11</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/615d5ede/">Hexo 异步加载方案</a></li><li><a href="https://hassanwong.top/posts/7a869374/#%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87%E4%BD%BF%E7%94%A8%E5%A4%9A%E8%89%B2-svg">社交图标使用多色 svg </a>🔥</li><li>升级 Butterfly 主题 3.7.1</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-10</p></p></div><div class="body"><ul><li>哔哔<a href="https://blog.csdn.net/u013008898/article/details/86679568">用过去多久来表示时间</a></li><li>魔改网站移动端布局为双栏文章卡片 🔥</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-9</p></p></div><div class="body"><ul><li>给社交卡片加庆祝动态背景</li><li>参考<a href="https://blog.zhheo.com/">Heo</a>对本站进行样式微调（导航栏，目录，<a href="https://blog.zhheo.com/p/35d02946.html">分类页面美化</a>，文章卡片）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-4</p></p></div><div class="body"><ul><li><a href="https://blog.zhheo.com/p/27be0e44.html">添加“哔哔”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-4-1</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/969dffe3/">用 imagine 压缩全站图片</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-31</p></p></div><div class="body"><ul><li><a href="https://blog.csdn.net/calvin_zhou/article/details/109558180">给部分博客文章加密</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-30</p></p></div><div class="body"><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/blob/c949ab3d8408d69f82fe30ff3fa256b0a59a74f6/hexo-butterfly-douban/README.md">更换 hexo-douban 插件为 hexo-butterfly-douban</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-29</p></p></div><div class="body"><ul><li>美化文档网站</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-28</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/8f31c3d0/">添加 PWA 网站更新弹框以及使网站可安装</a></li><li>美化文档网站</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-25</p></p></div><div class="body"><ul><li><a href="https://cdn.jsdelivr.net/gh/hassanblog/hassanblog.github.io/js/custom/smooth.js">页面丝滑滚动</a></li><li><a href="https://blog.csdn.net/weixin_43372529/article/details/114176470">添加文章置顶功能</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-22</p></p></div><div class="body"><ul><li>搭建 docsify 文档网站 <a href="https://docsify.js.org/#/zh-cn/quickstart">官方文档</a> <a href="https://www.jianshu.com/p/38b6f67c6837">参考教程</a></li><li>导航栏展开、搜索加毛玻璃特效</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-21</p></p></div><div class="body"><ul><li>取消 fancybox，改用 medium_zoom</li><li>修复 flexcard 友链显示的 Bug</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-20</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/615e2dec/#post-comment">修复相册页面定位 Bug</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-19</p></p></div><div class="body"><ul><li><p><a href="https://plushine.cn/54808.html#hexo-tag-aplayer">更新“歌单”板块</a></p><p>  <code>npm install --save hexo-tag-aplayer</code></p></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-18</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/615e2dec/#%E7%9B%B8%E5%86%8C-gallery">添加“相册”于导航栏</a></li><li>更换 Post、Page 字体为 LXGWWenKai</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-17</p></p></div><div class="body"><ul><li><a href="https://sspai.com/post/59593">在网页底部添加动态徽标</a></li><li><a href="https://blog.csdn.net/qq_38157825/article/details/112783187">添加“影评”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-16</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/58900a8/">加“留言板”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-15</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/3b78b69a/">修复“数据统计”pjax 适配 Bug</a>（直接在 md 文件里加<code>&lt;div class=&quot;js-pjax&quot;&gt;</code>）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-14</p></p></div><div class="body"><ul><li><a href="https://nexmoe.hclonely.com/posts/57bd67ce/">增加“数据统计”于导航栏</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-13</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/f752c86d/">使用 Github Action 实现全自动部署</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-12</p></p></div><div class="body"><ul><li><a href="https://blog.csdn.net/sunshine940326/article/details/70936988">让百度收录网址导航</a></li><li>增大文章、目录宽度</li><li>gitcalendar 颜色调整（0 次提交对应颜色：rgb(226, 228, 233, 0.6)）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-11</p></p></div><div class="body"><ul><li>更换标题、水平分割线图标</li><li>增加鼠标点击效果</li><li><a href="https://zhidao.baidu.com/question/211395978.html">给公告栏加滚动条</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-10</p></p></div><div class="body"><ul><li>更换网站背景图案</li><li>停掉彩色丝带效果</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-3-9</p></p></div><div class="body"><ul><li>更换加载 loading 图案</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-28</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/abab51cf/">给博客和网址导航添加 wow 动画特效</a></li><li><a href="https://blog.keepdai.cn/Twikoofanwai.html">Twikoo 评论框高度</a></li><li><a href="http://noionion.top/4712.html">Twikoo 更换表情包</a></li><li>修改表情包框宽高（727px，216px）</li><li><a href="https://akilar.top/posts/23fdf850/">页脚振翅蝴蝶动效</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-24</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.6.2（进度 100%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-23</p></p></div><div class="body"><ul><li>升级 Butterfly 主题 3.6.2（进度 20%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-22</p></p></div><div class="body"><ul><li><p>增加<a href="https://www.revolvermaps.com/">访客地球</a>组件</p></li><li><p>组件页面增加<a href="https://www.wangt.cc/2021/02/css%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%AF%9B%E7%8E%BB%E7%92%83%E6%95%88%E6%9E%9C/">毛玻璃效果</a>（现已取消）</p><p>  <code>backdrop-filter: saturate(160%) blur(7px);</code></p></li><li><p>美化网址导航</p></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-21</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的 Bug（进度 100%）</li><li>链接按钮、数字图标、代码框样式微改</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-20</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的 Bug（进度 70%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-19</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的 Bug（将小康导航网站源码和 webstack 官网的结合使用，进度 50%）</li><li><a href="https://cdn.jsdelivr.net/gh/hassanblog/CDN@v20210404/img/404.png">更改 404 图片</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-18</p></p></div><div class="body"><ul><li>修复网址导航网址卡片图片不显示的 Bug（进度 10%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-17</p></p></div><div class="body"><ul><li>美化网址导航</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-16</p></p></div><div class="body"><ul><li>美化网址导航</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-15</p></p></div><div class="body"><ul><li>搭建网址导航（进度 100%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-14</p></p></div><div class="body"><ul><li>删除 coding 静态页面，取消 coding 所有域名解析，仍保持代码部署</li><li>朋友圈 pjax 适配（删除冰老师前端教程所有提到的操作，直接按照 aki 的前端教程）</li><li>添加网址导航（进度 20%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-13</p></p></div><div class="body"><ul><li><a href="https://akilar.top/posts/8480b91c/">添加朋友圈 - 前端（外加美化）</a></li><li>添加网址导航（进度 10%）</li><li>添加评论回邮漫画风格模板</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-12</p></p></div><div class="body"><ul><li><a href="https://zfe.space/post/friend-link-circle.html">添加朋友圈 - 后端</a></li><li>添加网址导航（进度 5%）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-10</p></p></div><div class="body"><ul><li>修改表格滚动条显隐逻辑和标题居左显示，外加美化（overflow-x: auto，text-align: left）</li><li>搜索栏、内容更新图片显示圆角化</li><li>图片底部标题文字与图片的距离（margin-top: 0）</li><li>板块顶部图调深</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-9</p></p></div><div class="body"><ul><li><a href="https://www.nesxc.com/post/hexocc.html">文章版权样式美化</a></li><li>更新“公告”组件</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-7</p></p></div><div class="body"><ul><li><a href="https://www.nesxc.com/post/hexocc.html">文章版权样式魔改</a></li><li>将部分直角框圆角化</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-6</p></p></div><div class="body"><ul><li>更换域名为<a href="hassanwong.top">hassanwong.top</a></li><li><a href="https://blog.csdn.net/lxb_wyf/article/details/109137006">利用 Hexo-abbrlink 插件给文章生成唯一链接</a></li><li>修复打赏 Trick or Treat 按钮 hover 颜色不全的 Bug</li><li>将部分 button 框圆角化并带有阴影</li><li>让百度收录本博客 <a href="https://zhuanlan.zhihu.com/p/111773896">参考链接 1-知乎</a> <a href="https://blog.csdn.net/sunshine940326/article/details/70936988">参考链接 2-CSDN</a></li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-5</p></p></div><div class="body"><ul><li>修复最新评论 Bug（只能使用一个评论系统）====</li><li><a href="https://akilar.top/posts/969dffe3/">Hexo 博客静态资源加速</a></li><li>GitHub+Coding+Vercel 的三线部署 <a href="https://www.heson10.com/posts/54971.html">参考教程 1-Coding</a> <a href="https://www.heson10.com/posts/38770.html">参考教程 2-Vercel</a></li><li><a href="https://akilar.gitee.io/posts/e87ad7f8/">增添网站底层徽标</a>（Coding+Vercel）</li><li>跟随时间自动切换深浅模式（autoChangeMode: 2）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-4</p></p></div><div class="body"><ul><li>修改 gitcalendar 提交次数对应色块的逻辑判断（gitcalendar.pug、gitcalendar-js.pug）</li><li>自定义 gitcalendar 色阶（类似温度色阶 - 冷色系），以及 Less-More 显示</li><li><a href="https://akilar.top/posts/57291286/">siteshot 配置项留空的情况下，使用 thum.io 提供的 API 自动截图。</a></li><li>大幅修改 custom.css 文件（突然发现_config.yml 里面有全局字体配置 😭）</li><li>增加鼠标点击特效（🍁🌸）</li><li>更改部分板块图标 ICON</li><li>增加“文章”导航栏，将“时光机”、“标签”和“分类”放进来</li><li>更换 Valine 为<a href="https://twikoo.js.org/">Twikoo</a>评论系统</li><li><a href="https://akilar.top/posts/1f9c68c9/">修复 gitcalendar 不显示 Bug</a>（自建 API）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-3</p></p></div><div class="body"><ul><li>更换图片地址</li><li>修改“歌单”板块文字说明</li><li>修改“时光机”板块 banner 图（哆啦 A 梦）</li><li>修改“友人帐”板块 banner 图（哈利波特赫敏罗恩）</li><li>修改“歌单”板块 banner 图（初音未来）</li><li>设置自动播放音乐</li><li>“清单”板块改名为“娱乐”</li><li>在”关于我”板块添加内容</li><li>在“友人帐”板块增加互加友链的说明</li><li>设置 Valine 评论邮件提醒 <a href="https://blog.csdn.net/qq_45428737/article/details/105574603">参考教程 1-阳光派 plus</a> <a href="https://www.antmoe.com/posts/2380732b/index.html">参考教程 2-小康</a></li><li><a href="https://akilar.top/posts/d2222705/">Valine 评论添加[博主,小伙伴,访客]标签</a></li><li>更改代码块文字大小（16px）</li><li>更改网站主字体（PingFang SC）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-2</p></p></div><div class="body"><ul><li>修改文章中错别字以及表达不当的地方</li><li>修复已失效的友链，并添加新的</li><li>隐藏内容 hide-content 和加粗 bold 分别按照深浅模式来配置颜色（原色基础上加深/变浅）</li><li><a href="https://akilar.top/posts/57291286/">友链魔改</a>（flexcard 弹性卡片样式）</li><li><a href="https://akilar.top/posts/23fdf850/">使左上角站点标题跟随文章标题变化</a></li><li>将 Gitee 图床转为 GitHub+JsDeliver 图床</li><li>更改中上方弹框字体和导航栏“娱乐”栏字体大小（Candy，18px）</li><li>友链卡片透明度和字体（0.55，Candy）</li><li>更新网站座右铭（宝剑锋从磨砺出，梅花香自苦寒来）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-2-1</p></p></div><div class="body"><ul><li>修复 gitcalendar 的页面切换回来不显示的 Bug（原因是 aditional-js.pug 文件要添加的代码没有放在.js-pjax 下面）</li><li>更改诗词标签字体（毛笔行书字体）</li><li>调整部分地方的字体</li><li>“网站资讯”小组件标题改成“数据统计”</li><li><a href="http://www.360doc.com/content/19/1018/22/11350070_867703931.shtml">调整文章字间距</a>（1px）</li><li>更改链接颜色（蒂芙尼蓝）</li><li>隐藏内容 hide-content 加背景颜色（#b4b4b4），以区分</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">修改白天模式、深色模式和阅读模式</a></li><li>加深滚动条背景区域颜色（#888888）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-31</p></p></div><div class="body"><ul><li>更改网站主题颜色（蒂芙尼蓝#81D8CF）</li><li>自定义 gitcalendar 板块色阶（蒂芙尼蓝由浅入深）</li></ul></div></div><div class="timenode"><div class="meta"><p><p>2021-1-30</p></p></div><div class="body"><ul><li>更改字体加粗效果（去掉 bold 改为<strong>橘粉色</strong>高光）</li><li>网页右侧 button 圆角化</li><li>“歌单“附上功能简介。</li><li>”影评“、”相册“板块加上”待开发“后缀。</li><li>给导航栏各个板块的页面标题加英文后缀</li><li>给”更新日志“板块<a href="https://akilar.top/posts/615e2dec/">添加时间轴 timeline 外挂标签</a></li><li><a href="https://akilar.top/posts/1f9c68c9/">增加网站首页置顶 gitcalendar 板块</a></li></ul></div></div>  <div class="timenode"><div class="meta"><p><p>2021-1-28</p></p></div><div class="body"><ul><li>取消<a href="https://butterfly.js.org/posts/ea33ab97/#%E4%BE%8B%E5%AD%90">全球访客</a>小组件</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">更改网页字体</a>（甜甜圈海报 Candy，OldEnglish）</li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">隐藏 Aplayer 的全局吸底音乐标签</a></li><li><a href="https://akilar.gitee.io/posts/ebf20e02/">修改文章透明度</a>（0.9）</li><li>更改字体大小（标题，文章，小组件，导航栏等等）</li><li>加深滚动条背景区域颜色（#a8a8a8）</li></ul></div></div>  <div class="timenode"><div class="meta"><p><p>2021-1-25</p></p></div><div class="body"><ul><li><a href="https://akilar.gitee.io/posts/e87ad7f8/">添加网站底层徽标</a></li><li><a href="https://akilar.gitee.io/posts/22257072/">时间轴美化 - 十二生肖</a></li><li><a href="https://akilar.top/posts/3d221bf2/">加载动画更改</a></li></ul></div></div>  <div class="timenode"><div class="meta"><p><p>2021-1-23</p></p></div><div class="body"><ul><li>将“留言板”更改为“更新手账”</li></ul></div></div>  </div>]]></content>
      
    </entry>
    
    
  
</search>
